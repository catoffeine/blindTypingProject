/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,(function(t,e){"use strict";var i=[],n=Object.getPrototypeOf,s=i.slice,o=i.flat?function(t){return i.flat.call(t)}:function(t){return i.concat.apply([],t)},r=i.push,a=i.indexOf,l={},c=l.toString,h=l.hasOwnProperty,d=h.toString,u=d.call(Object),f={},p=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType&&"function"!=typeof t.item},g=function(t){return null!=t&&t===t.window},m=t.document,y={type:!0,src:!0,nonce:!0,noModule:!0};function b(t,e,i){var n,s,o=(i=i||m).createElement("script");if(o.text=t,e)for(n in y)(s=e[n]||e.getAttribute&&e.getAttribute(n))&&o.setAttribute(n,s);i.head.appendChild(o).parentNode.removeChild(o)}function x(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?l[c.call(t)]||"object":typeof t}var _="3.6.0",v=function(t,e){return new v.fn.init(t,e)};function k(t){var e=!!t&&"length"in t&&t.length,i=x(t);return!p(t)&&!g(t)&&("array"===i||0===e||"number"==typeof e&&0<e&&e-1 in t)}v.fn=v.prototype={jquery:_,constructor:v,length:0,toArray:function(){return s.call(this)},get:function(t){return null==t?s.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=v.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return v.each(this,t)},map:function(t){return this.pushStack(v.map(this,(function(e,i){return t.call(e,i,e)})))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(v.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(v.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(0<=i&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:r,sort:i.sort,splice:i.splice},v.extend=v.fn.extend=function(){var t,e,i,n,s,o,r=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[a]||{},a++),"object"==typeof r||p(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)n=t[e],"__proto__"!==e&&r!==n&&(c&&n&&(v.isPlainObject(n)||(s=Array.isArray(n)))?(i=r[e],o=s&&!Array.isArray(i)?[]:s||v.isPlainObject(i)?i:{},s=!1,r[e]=v.extend(c,o,n)):void 0!==n&&(r[e]=n));return r},v.extend({expando:"jQuery"+(_+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==c.call(t)||(e=n(t))&&("function"!=typeof(i=h.call(e,"constructor")&&e.constructor)||d.call(i)!==u))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,i){b(t,{nonce:e&&e.nonce},i)},each:function(t,e){var i,n=0;if(k(t))for(i=t.length;n<i&&!1!==e.call(t[n],n,t[n]);n++);else for(n in t)if(!1===e.call(t[n],n,t[n]))break;return t},makeArray:function(t,e){var i=e||[];return null!=t&&(k(Object(t))?v.merge(i,"string"==typeof t?[t]:t):r.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:a.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,s=t.length;n<i;n++)t[s++]=e[n];return t.length=s,t},grep:function(t,e,i){for(var n=[],s=0,o=t.length,r=!i;s<o;s++)!e(t[s],s)!==r&&n.push(t[s]);return n},map:function(t,e,i){var n,s,r=0,a=[];if(k(t))for(n=t.length;r<n;r++)null!=(s=e(t[r],r,i))&&a.push(s);else for(r in t)null!=(s=e(t[r],r,i))&&a.push(s);return o(a)},guid:1,support:f}),"function"==typeof Symbol&&(v.fn[Symbol.iterator]=i[Symbol.iterator]),v.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){l["[object "+e+"]"]=e.toLowerCase()}));var w=function(t){var e,i,n,s,o,r,a,l,c,h,d,u,f,p,g,m,y,b,x,_="sizzle"+1*new Date,v=t.document,k=0,w=0,S=lt(),C=lt(),L=lt(),M=lt(),T=function(t,e){return t===e&&(d=!0),0},D={}.hasOwnProperty,A=[],E=A.pop,P=A.push,O=A.push,j=A.slice,R=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},N="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",I="[\\x20\\t\\r\\n\\f]",B="(?:\\\\[\\da-fA-F]{1,6}"+I+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",F="\\["+I+"*("+B+")(?:"+I+"*([*^$|!~]?=)"+I+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+I+"*\\]",H=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+F+")*)|.*)\\)|)",z=new RegExp(I+"+","g"),W=new RegExp("^"+I+"+|((?:^|[^\\\\])(?:\\\\.)*)"+I+"+$","g"),q=new RegExp("^"+I+"*,"+I+"*"),V=new RegExp("^"+I+"*([>+~]|"+I+")"+I+"*"),$=new RegExp(I+"|>"),K=new RegExp(H),U=new RegExp("^"+B+"$"),Y={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+F),PSEUDO:new RegExp("^"+H),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+I+"*(even|odd|(([+-]|)(\\d*)n|)"+I+"*(?:([+-]|)"+I+"*(\\d+)|))"+I+"*\\)|)","i"),bool:new RegExp("^(?:"+N+")$","i"),needsContext:new RegExp("^"+I+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+I+"*((?:-\\d)?\\d*)"+I+"*\\)|)(?=[^-]|$)","i")},X=/HTML$/i,G=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}"+I+"?|\\\\([^\\r\\n\\f])","g"),it=function(t,e){var i="0x"+t.slice(1)-65536;return e||(i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320))},nt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,st=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},ot=function(){u()},rt=_t((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{O.apply(A=j.call(v.childNodes),v.childNodes),A[v.childNodes.length].nodeType}catch(e){O={apply:A.length?function(t,e){P.apply(t,j.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}function at(t,e,n,s){var o,a,c,h,d,p,y,b=e&&e.ownerDocument,v=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==v&&9!==v&&11!==v)return n;if(!s&&(u(e),e=e||f,g)){if(11!==v&&(d=Z.exec(t)))if(o=d[1]){if(9===v){if(!(c=e.getElementById(o)))return n;if(c.id===o)return n.push(c),n}else if(b&&(c=b.getElementById(o))&&x(e,c)&&c.id===o)return n.push(c),n}else{if(d[2])return O.apply(n,e.getElementsByTagName(t)),n;if((o=d[3])&&i.getElementsByClassName&&e.getElementsByClassName)return O.apply(n,e.getElementsByClassName(o)),n}if(i.qsa&&!M[t+" "]&&(!m||!m.test(t))&&(1!==v||"object"!==e.nodeName.toLowerCase())){if(y=t,b=e,1===v&&($.test(t)||V.test(t))){for((b=tt.test(t)&&yt(e.parentNode)||e)===e&&i.scope||((h=e.getAttribute("id"))?h=h.replace(nt,st):e.setAttribute("id",h=_)),a=(p=r(t)).length;a--;)p[a]=(h?"#"+h:":scope")+" "+xt(p[a]);y=p.join(",")}try{return O.apply(n,b.querySelectorAll(y)),n}catch(e){M(t,!0)}finally{h===_&&e.removeAttribute("id")}}}return l(t.replace(W,"$1"),e,n,s)}function lt(){var t=[];return function e(i,s){return t.push(i+" ")>n.cacheLength&&delete e[t.shift()],e[i+" "]=s}}function ct(t){return t[_]=!0,t}function ht(t){var e=f.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function dt(t,e){for(var i=t.split("|"),s=i.length;s--;)n.attrHandle[i[s]]=e}function ut(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function ft(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function pt(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&rt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ct((function(e){return e=+e,ct((function(i,n){for(var s,o=t([],i.length,e),r=o.length;r--;)i[s=o[r]]&&(i[s]=!(n[s]=i[s]))}))}))}function yt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in i=at.support={},o=at.isXML=function(t){var e=t&&t.namespaceURI,i=t&&(t.ownerDocument||t).documentElement;return!X.test(e||i&&i.nodeName||"HTML")},u=at.setDocument=function(t){var e,s,r=t?t.ownerDocument||t:v;return r!=f&&9===r.nodeType&&r.documentElement&&(p=(f=r).documentElement,g=!o(f),v!=f&&(s=f.defaultView)&&s.top!==s&&(s.addEventListener?s.addEventListener("unload",ot,!1):s.attachEvent&&s.attachEvent("onunload",ot)),i.scope=ht((function(t){return p.appendChild(t).appendChild(f.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),i.attributes=ht((function(t){return t.className="i",!t.getAttribute("className")})),i.getElementsByTagName=ht((function(t){return t.appendChild(f.createComment("")),!t.getElementsByTagName("*").length})),i.getElementsByClassName=J.test(f.getElementsByClassName),i.getById=ht((function(t){return p.appendChild(t).id=_,!f.getElementsByName||!f.getElementsByName(_).length})),i.getById?(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){return t.getAttribute("id")===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i=e.getElementById(t);return i?[i]:[]}}):(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){var i=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i,n,s,o=e.getElementById(t);if(o){if((i=o.getAttributeNode("id"))&&i.value===t)return[o];for(s=e.getElementsByName(t),n=0;o=s[n++];)if((i=o.getAttributeNode("id"))&&i.value===t)return[o]}return[]}}),n.find.TAG=i.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):i.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],s=0,o=e.getElementsByTagName(t);if("*"===t){for(;i=o[s++];)1===i.nodeType&&n.push(i);return n}return o},n.find.CLASS=i.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},y=[],m=[],(i.qsa=J.test(f.querySelectorAll))&&(ht((function(t){var e;p.appendChild(t).innerHTML="<a id='"+_+"'></a><select id='"+_+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+I+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+I+"*(?:value|"+N+")"),t.querySelectorAll("[id~="+_+"-]").length||m.push("~="),(e=f.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\["+I+"*name"+I+"*="+I+"*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+_+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),ht((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=f.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+I+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),p.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=J.test(b=p.matches||p.webkitMatchesSelector||p.mozMatchesSelector||p.oMatchesSelector||p.msMatchesSelector))&&ht((function(t){i.disconnectedMatch=b.call(t,"*"),b.call(t,"[s!='']:x"),y.push("!=",H)})),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),e=J.test(p.compareDocumentPosition),x=e||J.test(p.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},T=e?function(t,e){if(t===e)return d=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!i.sortDetached&&e.compareDocumentPosition(t)===n?t==f||t.ownerDocument==v&&x(v,t)?-1:e==f||e.ownerDocument==v&&x(v,e)?1:h?R(h,t)-R(h,e):0:4&n?-1:1)}:function(t,e){if(t===e)return d=!0,0;var i,n=0,s=t.parentNode,o=e.parentNode,r=[t],a=[e];if(!s||!o)return t==f?-1:e==f?1:s?-1:o?1:h?R(h,t)-R(h,e):0;if(s===o)return ut(t,e);for(i=t;i=i.parentNode;)r.unshift(i);for(i=e;i=i.parentNode;)a.unshift(i);for(;r[n]===a[n];)n++;return n?ut(r[n],a[n]):r[n]==v?-1:a[n]==v?1:0}),f},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if(u(t),i.matchesSelector&&g&&!M[e+" "]&&(!y||!y.test(e))&&(!m||!m.test(e)))try{var n=b.call(t,e);if(n||i.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){M(e,!0)}return 0<at(e,f,null,[t]).length},at.contains=function(t,e){return(t.ownerDocument||t)!=f&&u(t),x(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!=f&&u(t);var s=n.attrHandle[e.toLowerCase()],o=s&&D.call(n.attrHandle,e.toLowerCase())?s(t,e,!g):void 0;return void 0!==o?o:i.attributes||!g?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},at.escape=function(t){return(t+"").replace(nt,st)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,n=[],s=0,o=0;if(d=!i.detectDuplicates,h=!i.sortStable&&t.slice(0),t.sort(T),d){for(;e=t[o++];)e===t[o]&&(s=n.push(o));for(;s--;)t.splice(n[s],1)}return h=null,t},s=at.getText=function(t){var e,i="",n=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=s(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[n++];)i+=s(e);return i},(n=at.selectors={cacheLength:50,createPseudo:ct,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,it),t[3]=(t[3]||t[4]||t[5]||"").replace(et,it),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return Y.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&K.test(i)&&(e=r(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,it).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=S[t+" "];return e||(e=new RegExp("(^|"+I+")"+t+"("+I+"|$)"))&&S(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,i){return function(n){var s=at.attr(n,t);return null==s?"!="===e:!e||(s+="","="===e?s===i:"!="===e?s!==i:"^="===e?i&&0===s.indexOf(i):"*="===e?i&&-1<s.indexOf(i):"$="===e?i&&s.slice(-i.length)===i:"~="===e?-1<(" "+s.replace(z," ")+" ").indexOf(i):"|="===e&&(s===i||s.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,i,n,s){var o="nth"!==t.slice(0,3),r="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var c,h,d,u,f,p,g=o!==r?"nextSibling":"previousSibling",m=e.parentNode,y=a&&e.nodeName.toLowerCase(),b=!l&&!a,x=!1;if(m){if(o){for(;g;){for(u=e;u=u[g];)if(a?u.nodeName.toLowerCase()===y:1===u.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[r?m.firstChild:m.lastChild],r&&b){for(x=(f=(c=(h=(d=(u=m)[_]||(u[_]={}))[u.uniqueID]||(d[u.uniqueID]={}))[t]||[])[0]===k&&c[1])&&c[2],u=f&&m.childNodes[f];u=++f&&u&&u[g]||(x=f=0)||p.pop();)if(1===u.nodeType&&++x&&u===e){h[t]=[k,f,x];break}}else if(b&&(x=f=(c=(h=(d=(u=e)[_]||(u[_]={}))[u.uniqueID]||(d[u.uniqueID]={}))[t]||[])[0]===k&&c[1]),!1===x)for(;(u=++f&&u&&u[g]||(x=f=0)||p.pop())&&((a?u.nodeName.toLowerCase()!==y:1!==u.nodeType)||!++x||(b&&((h=(d=u[_]||(u[_]={}))[u.uniqueID]||(d[u.uniqueID]={}))[t]=[k,x]),u!==e)););return(x-=s)===n||x%n==0&&0<=x/n}}},PSEUDO:function(t,e){var i,s=n.pseudos[t]||n.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return s[_]?s(e):1<s.length?(i=[t,t,"",e],n.setFilters.hasOwnProperty(t.toLowerCase())?ct((function(t,i){for(var n,o=s(t,e),r=o.length;r--;)t[n=R(t,o[r])]=!(i[n]=o[r])})):function(t){return s(t,0,i)}):s}},pseudos:{not:ct((function(t){var e=[],i=[],n=a(t.replace(W,"$1"));return n[_]?ct((function(t,e,i,s){for(var o,r=n(t,null,s,[]),a=t.length;a--;)(o=r[a])&&(t[a]=!(e[a]=o))})):function(t,s,o){return e[0]=t,n(e,null,o,i),e[0]=null,!i.pop()}})),has:ct((function(t){return function(e){return 0<at(t,e).length}})),contains:ct((function(t){return t=t.replace(et,it),function(e){return-1<(e.textContent||s(e)).indexOf(t)}})),lang:ct((function(t){return U.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(et,it).toLowerCase(),function(e){var i;do{if(i=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(i=i.toLowerCase())===t||0===i.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===p},focus:function(t){return t===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!n.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return G.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,i){return[i<0?i+e:i]})),even:mt((function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t})),odd:mt((function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t})),lt:mt((function(t,e,i){for(var n=i<0?i+e:e<i?e:i;0<=--n;)t.push(n);return t})),gt:mt((function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t}))}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[e]=ft(e);for(e in{submit:!0,reset:!0})n.pseudos[e]=pt(e);function bt(){}function xt(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function _t(t,e,i){var n=e.dir,s=e.next,o=s||n,r=i&&"parentNode"===o,a=w++;return e.first?function(e,i,s){for(;e=e[n];)if(1===e.nodeType||r)return t(e,i,s);return!1}:function(e,i,l){var c,h,d,u=[k,a];if(l){for(;e=e[n];)if((1===e.nodeType||r)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||r)if(h=(d=e[_]||(e[_]={}))[e.uniqueID]||(d[e.uniqueID]={}),s&&s===e.nodeName.toLowerCase())e=e[n]||e;else{if((c=h[o])&&c[0]===k&&c[1]===a)return u[2]=c[2];if((h[o]=u)[2]=t(e,i,l))return!0}return!1}}function vt(t){return 1<t.length?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function kt(t,e,i,n,s){for(var o,r=[],a=0,l=t.length,c=null!=e;a<l;a++)(o=t[a])&&(i&&!i(o,n,s)||(r.push(o),c&&e.push(a)));return r}function wt(t,e,i,n,s,o){return n&&!n[_]&&(n=wt(n)),s&&!s[_]&&(s=wt(s,o)),ct((function(o,r,a,l){var c,h,d,u=[],f=[],p=r.length,g=o||function(t,e,i){for(var n=0,s=e.length;n<s;n++)at(t,e[n],i);return i}(e||"*",a.nodeType?[a]:a,[]),m=!t||!o&&e?g:kt(g,u,t,a,l),y=i?s||(o?t:p||n)?[]:r:m;if(i&&i(m,y,a,l),n)for(c=kt(y,f),n(c,[],a,l),h=c.length;h--;)(d=c[h])&&(y[f[h]]=!(m[f[h]]=d));if(o){if(s||t){if(s){for(c=[],h=y.length;h--;)(d=y[h])&&c.push(m[h]=d);s(null,y=[],c,l)}for(h=y.length;h--;)(d=y[h])&&-1<(c=s?R(o,d):u[h])&&(o[c]=!(r[c]=d))}}else y=kt(y===r?y.splice(p,y.length):y),s?s(null,r,y,l):O.apply(r,y)}))}function St(t){for(var e,i,s,o=t.length,r=n.relative[t[0].type],a=r||n.relative[" "],l=r?1:0,h=_t((function(t){return t===e}),a,!0),d=_t((function(t){return-1<R(e,t)}),a,!0),u=[function(t,i,n){var s=!r&&(n||i!==c)||((e=i).nodeType?h(t,i,n):d(t,i,n));return e=null,s}];l<o;l++)if(i=n.relative[t[l].type])u=[_t(vt(u),i)];else{if((i=n.filter[t[l].type].apply(null,t[l].matches))[_]){for(s=++l;s<o&&!n.relative[t[s].type];s++);return wt(1<l&&vt(u),1<l&&xt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(W,"$1"),i,l<s&&St(t.slice(l,s)),s<o&&St(t=t.slice(s)),s<o&&xt(t))}u.push(i)}return vt(u)}return bt.prototype=n.filters=n.pseudos,n.setFilters=new bt,r=at.tokenize=function(t,e){var i,s,o,r,a,l,c,h=C[t+" "];if(h)return e?0:h.slice(0);for(a=t,l=[],c=n.preFilter;a;){for(r in i&&!(s=q.exec(a))||(s&&(a=a.slice(s[0].length)||a),l.push(o=[])),i=!1,(s=V.exec(a))&&(i=s.shift(),o.push({value:i,type:s[0].replace(W," ")}),a=a.slice(i.length)),n.filter)!(s=Y[r].exec(a))||c[r]&&!(s=c[r](s))||(i=s.shift(),o.push({value:i,type:r,matches:s}),a=a.slice(i.length));if(!i)break}return e?a.length:a?at.error(t):C(t,l).slice(0)},a=at.compile=function(t,e){var i,s,o,a,l,h,d=[],p=[],m=L[t+" "];if(!m){for(e||(e=r(t)),i=e.length;i--;)(m=St(e[i]))[_]?d.push(m):p.push(m);(m=L(t,(s=p,a=0<(o=d).length,l=0<s.length,h=function(t,e,i,r,h){var d,p,m,y=0,b="0",x=t&&[],_=[],v=c,w=t||l&&n.find.TAG("*",h),S=k+=null==v?1:Math.random()||.1,C=w.length;for(h&&(c=e==f||e||h);b!==C&&null!=(d=w[b]);b++){if(l&&d){for(p=0,e||d.ownerDocument==f||(u(d),i=!g);m=s[p++];)if(m(d,e||f,i)){r.push(d);break}h&&(k=S)}a&&((d=!m&&d)&&y--,t&&x.push(d))}if(y+=b,a&&b!==y){for(p=0;m=o[p++];)m(x,_,e,i);if(t){if(0<y)for(;b--;)x[b]||_[b]||(_[b]=E.call(r));_=kt(_)}O.apply(r,_),h&&!t&&0<_.length&&1<y+o.length&&at.uniqueSort(r)}return h&&(k=S,c=v),x},a?ct(h):h))).selector=t}return m},l=at.select=function(t,e,i,s){var o,l,c,h,d,u="function"==typeof t&&t,f=!s&&r(t=u.selector||t);if(i=i||[],1===f.length){if(2<(l=f[0]=f[0].slice(0)).length&&"ID"===(c=l[0]).type&&9===e.nodeType&&g&&n.relative[l[1].type]){if(!(e=(n.find.ID(c.matches[0].replace(et,it),e)||[])[0]))return i;u&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(o=Y.needsContext.test(t)?0:l.length;o--&&(c=l[o],!n.relative[h=c.type]);)if((d=n.find[h])&&(s=d(c.matches[0].replace(et,it),tt.test(l[0].type)&&yt(e.parentNode)||e))){if(l.splice(o,1),!(t=s.length&&xt(l)))return O.apply(i,s),i;break}}return(u||a(t,f))(s,e,!g,i,!e||tt.test(t)&&yt(e.parentNode)||e),i},i.sortStable=_.split("").sort(T).join("")===_,i.detectDuplicates=!!d,u(),i.sortDetached=ht((function(t){return 1&t.compareDocumentPosition(f.createElement("fieldset"))})),ht((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||dt("type|href|height|width",(function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),i.attributes&&ht((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||dt("value",(function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),ht((function(t){return null==t.getAttribute("disabled")}))||dt(N,(function(t,e,i){var n;if(!i)return!0===t[e]?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null})),at}(t);v.find=w,v.expr=w.selectors,v.expr[":"]=v.expr.pseudos,v.uniqueSort=v.unique=w.uniqueSort,v.text=w.getText,v.isXMLDoc=w.isXML,v.contains=w.contains,v.escapeSelector=w.escape;var S=function(t,e,i){for(var n=[],s=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(s&&v(t).is(i))break;n.push(t)}return n},C=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},L=v.expr.match.needsContext;function M(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var T=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function D(t,e,i){return p(e)?v.grep(t,(function(t,n){return!!e.call(t,n,t)!==i})):e.nodeType?v.grep(t,(function(t){return t===e!==i})):"string"!=typeof e?v.grep(t,(function(t){return-1<a.call(e,t)!==i})):v.filter(e,t,i)}v.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?v.find.matchesSelector(n,t)?[n]:[]:v.find.matches(t,v.grep(e,(function(t){return 1===t.nodeType})))},v.fn.extend({find:function(t){var e,i,n=this.length,s=this;if("string"!=typeof t)return this.pushStack(v(t).filter((function(){for(e=0;e<n;e++)if(v.contains(s[e],this))return!0})));for(i=this.pushStack([]),e=0;e<n;e++)v.find(t,s[e],i);return 1<n?v.uniqueSort(i):i},filter:function(t){return this.pushStack(D(this,t||[],!1))},not:function(t){return this.pushStack(D(this,t||[],!0))},is:function(t){return!!D(this,"string"==typeof t&&L.test(t)?v(t):t||[],!1).length}});var A,E=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(v.fn.init=function(t,e,i){var n,s;if(!t)return this;if(i=i||A,"string"==typeof t){if(!(n="<"===t[0]&&">"===t[t.length-1]&&3<=t.length?[null,t,null]:E.exec(t))||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof v?e[0]:e,v.merge(this,v.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:m,!0)),T.test(n[1])&&v.isPlainObject(e))for(n in e)p(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return(s=m.getElementById(n[2]))&&(this[0]=s,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):p(t)?void 0!==i.ready?i.ready(t):t(v):v.makeArray(t,this)}).prototype=v.fn,A=v(m);var P=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function j(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}v.fn.extend({has:function(t){var e=v(t,this),i=e.length;return this.filter((function(){for(var t=0;t<i;t++)if(v.contains(this,e[t]))return!0}))},closest:function(t,e){var i,n=0,s=this.length,o=[],r="string"!=typeof t&&v(t);if(!L.test(t))for(;n<s;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&v.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(1<o.length?v.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?a.call(v(t),this[0]):a.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(v.uniqueSort(v.merge(this.get(),v(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),v.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return S(t,"parentNode")},parentsUntil:function(t,e,i){return S(t,"parentNode",i)},next:function(t){return j(t,"nextSibling")},prev:function(t){return j(t,"previousSibling")},nextAll:function(t){return S(t,"nextSibling")},prevAll:function(t){return S(t,"previousSibling")},nextUntil:function(t,e,i){return S(t,"nextSibling",i)},prevUntil:function(t,e,i){return S(t,"previousSibling",i)},siblings:function(t){return C((t.parentNode||{}).firstChild,t)},children:function(t){return C(t.firstChild)},contents:function(t){return null!=t.contentDocument&&n(t.contentDocument)?t.contentDocument:(M(t,"template")&&(t=t.content||t),v.merge([],t.childNodes))}},(function(t,e){v.fn[t]=function(i,n){var s=v.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=v.filter(n,s)),1<this.length&&(O[t]||v.uniqueSort(s),P.test(t)&&s.reverse()),this.pushStack(s)}}));var R=/[^\x20\t\r\n\f]+/g;function N(t){return t}function I(t){throw t}function B(t,e,i,n){var s;try{t&&p(s=t.promise)?s.call(t).done(e).fail(i):t&&p(s=t.then)?s.call(t,e,i):e.apply(void 0,[t].slice(n))}catch(t){i.apply(void 0,[t])}}v.Callbacks=function(t){var e,i;t="string"==typeof t?(e=t,i={},v.each(e.match(R)||[],(function(t,e){i[e]=!0})),i):v.extend({},t);var n,s,o,r,a=[],l=[],c=-1,h=function(){for(r=r||t.once,o=n=!0;l.length;c=-1)for(s=l.shift();++c<a.length;)!1===a[c].apply(s[0],s[1])&&t.stopOnFalse&&(c=a.length,s=!1);t.memory||(s=!1),n=!1,r&&(a=s?[]:"")},d={add:function(){return a&&(s&&!n&&(c=a.length-1,l.push(s)),function e(i){v.each(i,(function(i,n){p(n)?t.unique&&d.has(n)||a.push(n):n&&n.length&&"string"!==x(n)&&e(n)}))}(arguments),s&&!n&&h()),this},remove:function(){return v.each(arguments,(function(t,e){for(var i;-1<(i=v.inArray(e,a,i));)a.splice(i,1),i<=c&&c--})),this},has:function(t){return t?-1<v.inArray(t,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return r=l=[],a=s="",this},disabled:function(){return!a},lock:function(){return r=l=[],s||n||(a=s=""),this},locked:function(){return!!r},fireWith:function(t,e){return r||(e=[t,(e=e||[]).slice?e.slice():e],l.push(e),n||h()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!o}};return d},v.extend({Deferred:function(e){var i=[["notify","progress",v.Callbacks("memory"),v.Callbacks("memory"),2],["resolve","done",v.Callbacks("once memory"),v.Callbacks("once memory"),0,"resolved"],["reject","fail",v.Callbacks("once memory"),v.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},catch:function(t){return s.then(null,t)},pipe:function(){var t=arguments;return v.Deferred((function(e){v.each(i,(function(i,n){var s=p(t[n[4]])&&t[n[4]];o[n[1]]((function(){var t=s&&s.apply(this,arguments);t&&p(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[n[0]+"With"](this,s?[t]:arguments)}))})),t=null})).promise()},then:function(e,n,s){var o=0;function r(e,i,n,s){return function(){var a=this,l=arguments,c=function(){var t,c;if(!(e<o)){if((t=n.apply(a,l))===i.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,p(c)?s?c.call(t,r(o,i,N,s),r(o,i,I,s)):(o++,c.call(t,r(o,i,N,s),r(o,i,I,s),r(o,i,N,i.notifyWith))):(n!==N&&(a=void 0,l=[t]),(s||i.resolveWith)(a,l))}},h=s?c:function(){try{c()}catch(t){v.Deferred.exceptionHook&&v.Deferred.exceptionHook(t,h.stackTrace),o<=e+1&&(n!==I&&(a=void 0,l=[t]),i.rejectWith(a,l))}};e?h():(v.Deferred.getStackHook&&(h.stackTrace=v.Deferred.getStackHook()),t.setTimeout(h))}}return v.Deferred((function(t){i[0][3].add(r(0,t,p(s)?s:N,t.notifyWith)),i[1][3].add(r(0,t,p(e)?e:N)),i[2][3].add(r(0,t,p(n)?n:I))})).promise()},promise:function(t){return null!=t?v.extend(t,s):s}},o={};return v.each(i,(function(t,e){var r=e[2],a=e[5];s[e[1]]=r.add,a&&r.add((function(){n=a}),i[3-t][2].disable,i[3-t][3].disable,i[0][2].lock,i[0][3].lock),r.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=r.fireWith})),s.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,i=e,n=Array(i),o=s.call(arguments),r=v.Deferred(),a=function(t){return function(i){n[t]=this,o[t]=1<arguments.length?s.call(arguments):i,--e||r.resolveWith(n,o)}};if(e<=1&&(B(t,r.done(a(i)).resolve,r.reject,!e),"pending"===r.state()||p(o[i]&&o[i].then)))return r.then();for(;i--;)B(o[i],a(i),r.reject);return r.promise()}});var F=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;v.Deferred.exceptionHook=function(e,i){t.console&&t.console.warn&&e&&F.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,i)},v.readyException=function(e){t.setTimeout((function(){throw e}))};var H=v.Deferred();function z(){m.removeEventListener("DOMContentLoaded",z),t.removeEventListener("load",z),v.ready()}v.fn.ready=function(t){return H.then(t).catch((function(t){v.readyException(t)})),this},v.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--v.readyWait:v.isReady)||(v.isReady=!0)!==t&&0<--v.readyWait||H.resolveWith(m,[v])}}),v.ready.then=H.then,"complete"===m.readyState||"loading"!==m.readyState&&!m.documentElement.doScroll?t.setTimeout(v.ready):(m.addEventListener("DOMContentLoaded",z),t.addEventListener("load",z));var W=function(t,e,i,n,s,o,r){var a=0,l=t.length,c=null==i;if("object"===x(i))for(a in s=!0,i)W(t,e,a,i[a],!0,o,r);else if(void 0!==n&&(s=!0,p(n)||(r=!0),c&&(r?(e.call(t,n),e=null):(c=e,e=function(t,e,i){return c.call(v(t),i)})),e))for(;a<l;a++)e(t[a],i,r?n:n.call(t[a],a,e(t[a],i)));return s?t:c?e.call(t):l?e(t[0],i):o},q=/^-ms-/,V=/-([a-z])/g;function $(t,e){return e.toUpperCase()}function K(t){return t.replace(q,"ms-").replace(V,$)}var U=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Y(){this.expando=v.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(t){var e=t[this.expando];return e||(e={},U(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,s=this.cache(t);if("string"==typeof e)s[K(e)]=i;else for(n in e)s[K(n)]=e[n];return s},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][K(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){i=(e=Array.isArray(e)?e.map(K):(e=K(e))in n?[e]:e.match(R)||[]).length;for(;i--;)delete n[e[i]]}(void 0===e||v.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!v.isEmptyObject(e)}};var X=new Y,G=new Y,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function Z(t,e,i){var n,s;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(J,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(n))){try{i="true"===(s=i)||"false"!==s&&("null"===s?null:s===+s+""?+s:Q.test(s)?JSON.parse(s):s)}catch(t){}G.set(t,e,i)}else i=void 0;return i}v.extend({hasData:function(t){return G.hasData(t)||X.hasData(t)},data:function(t,e,i){return G.access(t,e,i)},removeData:function(t,e){G.remove(t,e)},_data:function(t,e,i){return X.access(t,e,i)},_removeData:function(t,e){X.remove(t,e)}}),v.fn.extend({data:function(t,e){var i,n,s,o=this[0],r=o&&o.attributes;if(void 0===t){if(this.length&&(s=G.get(o),1===o.nodeType&&!X.get(o,"hasDataAttrs"))){for(i=r.length;i--;)r[i]&&0===(n=r[i].name).indexOf("data-")&&(n=K(n.slice(5)),Z(o,n,s[n]));X.set(o,"hasDataAttrs",!0)}return s}return"object"==typeof t?this.each((function(){G.set(this,t)})):W(this,(function(e){var i;if(o&&void 0===e)return void 0!==(i=G.get(o,t))||void 0!==(i=Z(o,t))?i:void 0;this.each((function(){G.set(this,t,e)}))}),null,e,1<arguments.length,null,!0)},removeData:function(t){return this.each((function(){G.remove(this,t)}))}}),v.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=X.get(t,e),i&&(!n||Array.isArray(i)?n=X.access(t,e,v.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=v.queue(t,e),n=i.length,s=i.shift(),o=v._queueHooks(t,e);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===e&&i.unshift("inprogress"),delete o.stop,s.call(t,(function(){v.dequeue(t,e)}),o)),!n&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return X.get(t,i)||X.access(t,i,{empty:v.Callbacks("once memory").add((function(){X.remove(t,[e+"queue",i])}))})}}),v.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?v.queue(this[0],t):void 0===e?this:this.each((function(){var i=v.queue(this,t,e);v._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&v.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){v.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,s=v.Deferred(),o=this,r=this.length,a=function(){--n||s.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(i=X.get(o[r],t+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),s.promise(e)}});var tt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,et=new RegExp("^(?:([+-])=|)("+tt+")([a-z%]*)$","i"),it=["Top","Right","Bottom","Left"],nt=m.documentElement,st=function(t){return v.contains(t.ownerDocument,t)},ot={composed:!0};nt.getRootNode&&(st=function(t){return v.contains(t.ownerDocument,t)||t.getRootNode(ot)===t.ownerDocument});var rt=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&st(t)&&"none"===v.css(t,"display")};function at(t,e,i,n){var s,o,r=20,a=n?function(){return n.cur()}:function(){return v.css(t,e,"")},l=a(),c=i&&i[3]||(v.cssNumber[e]?"":"px"),h=t.nodeType&&(v.cssNumber[e]||"px"!==c&&+l)&&et.exec(v.css(t,e));if(h&&h[3]!==c){for(l/=2,c=c||h[3],h=+l||1;r--;)v.style(t,e,h+c),(1-o)*(1-(o=a()/l||.5))<=0&&(r=0),h/=o;h*=2,v.style(t,e,h+c),i=i||[]}return i&&(h=+h||+l||0,s=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=h,n.end=s)),s}var lt={};function ct(t,e){for(var i,n,s,o,r,a,l,c=[],h=0,d=t.length;h<d;h++)(n=t[h]).style&&(i=n.style.display,e?("none"===i&&(c[h]=X.get(n,"display")||null,c[h]||(n.style.display="")),""===n.style.display&&rt(n)&&(c[h]=(l=r=o=void 0,r=(s=n).ownerDocument,a=s.nodeName,(l=lt[a])||(o=r.body.appendChild(r.createElement(a)),l=v.css(o,"display"),o.parentNode.removeChild(o),"none"===l&&(l="block"),lt[a]=l)))):"none"!==i&&(c[h]="none",X.set(n,"display",i)));for(h=0;h<d;h++)null!=c[h]&&(t[h].style.display=c[h]);return t}v.fn.extend({show:function(){return ct(this,!0)},hide:function(){return ct(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){rt(this)?v(this).show():v(this).hide()}))}});var ht,dt,ut=/^(?:checkbox|radio)$/i,ft=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,pt=/^$|^module$|\/(?:java|ecma)script/i;ht=m.createDocumentFragment().appendChild(m.createElement("div")),(dt=m.createElement("input")).setAttribute("type","radio"),dt.setAttribute("checked","checked"),dt.setAttribute("name","t"),ht.appendChild(dt),f.checkClone=ht.cloneNode(!0).cloneNode(!0).lastChild.checked,ht.innerHTML="<textarea>x</textarea>",f.noCloneChecked=!!ht.cloneNode(!0).lastChild.defaultValue,ht.innerHTML="<option></option>",f.option=!!ht.lastChild;var gt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function mt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&M(t,e)?v.merge([t],i):i}function yt(t,e){for(var i=0,n=t.length;i<n;i++)X.set(t[i],"globalEval",!e||X.get(e[i],"globalEval"))}gt.tbody=gt.tfoot=gt.colgroup=gt.caption=gt.thead,gt.th=gt.td,f.option||(gt.optgroup=gt.option=[1,"<select multiple='multiple'>","</select>"]);var bt=/<|&#?\w+;/;function xt(t,e,i,n,s){for(var o,r,a,l,c,h,d=e.createDocumentFragment(),u=[],f=0,p=t.length;f<p;f++)if((o=t[f])||0===o)if("object"===x(o))v.merge(u,o.nodeType?[o]:o);else if(bt.test(o)){for(r=r||d.appendChild(e.createElement("div")),a=(ft.exec(o)||["",""])[1].toLowerCase(),l=gt[a]||gt._default,r.innerHTML=l[1]+v.htmlPrefilter(o)+l[2],h=l[0];h--;)r=r.lastChild;v.merge(u,r.childNodes),(r=d.firstChild).textContent=""}else u.push(e.createTextNode(o));for(d.textContent="",f=0;o=u[f++];)if(n&&-1<v.inArray(o,n))s&&s.push(o);else if(c=st(o),r=mt(d.appendChild(o),"script"),c&&yt(r),i)for(h=0;o=r[h++];)pt.test(o.type||"")&&i.push(o);return d}var _t=/^([^.]*)(?:\.(.+)|)/;function vt(){return!0}function kt(){return!1}function wt(t,e){return t===function(){try{return m.activeElement}catch(t){}}()==("focus"===e)}function St(t,e,i,n,s,o){var r,a;if("object"==typeof e){for(a in"string"!=typeof i&&(n=n||i,i=void 0),e)St(t,a,i,n,e[a],o);return t}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=kt;else if(!s)return t;return 1===o&&(r=s,(s=function(t){return v().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=v.guid++)),t.each((function(){v.event.add(this,e,s,n,i)}))}function Ct(t,e,i){i?(X.set(t,e,!1),v.event.add(t,e,{namespace:!1,handler:function(t){var n,o,r=X.get(this,e);if(1&t.isTrigger&&this[e]){if(r.length)(v.event.special[e]||{}).delegateType&&t.stopPropagation();else if(r=s.call(arguments),X.set(this,e,r),n=i(this,e),this[e](),r!==(o=X.get(this,e))||n?X.set(this,e,!1):o={},r!==o)return t.stopImmediatePropagation(),t.preventDefault(),o&&o.value}else r.length&&(X.set(this,e,{value:v.event.trigger(v.extend(r[0],v.Event.prototype),r.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===X.get(t,e)&&v.event.add(t,e,vt)}v.event={global:{},add:function(t,e,i,n,s){var o,r,a,l,c,h,d,u,f,p,g,m=X.get(t);if(U(t))for(i.handler&&(i=(o=i).handler,s=o.selector),s&&v.find.matchesSelector(nt,s),i.guid||(i.guid=v.guid++),(l=m.events)||(l=m.events=Object.create(null)),(r=m.handle)||(r=m.handle=function(e){return void 0!==v&&v.event.triggered!==e.type?v.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(R)||[""]).length;c--;)f=g=(a=_t.exec(e[c])||[])[1],p=(a[2]||"").split(".").sort(),f&&(d=v.event.special[f]||{},f=(s?d.delegateType:d.bindType)||f,d=v.event.special[f]||{},h=v.extend({type:f,origType:g,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:p.join(".")},o),(u=l[f])||((u=l[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(t,n,p,r)||t.addEventListener&&t.addEventListener(f,r)),d.add&&(d.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),s?u.splice(u.delegateCount++,0,h):u.push(h),v.event.global[f]=!0)},remove:function(t,e,i,n,s){var o,r,a,l,c,h,d,u,f,p,g,m=X.hasData(t)&&X.get(t);if(m&&(l=m.events)){for(c=(e=(e||"").match(R)||[""]).length;c--;)if(f=g=(a=_t.exec(e[c])||[])[1],p=(a[2]||"").split(".").sort(),f){for(d=v.event.special[f]||{},u=l[f=(n?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=o=u.length;o--;)h=u[o],!s&&g!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(u.splice(o,1),h.selector&&u.delegateCount--,d.remove&&d.remove.call(t,h));r&&!u.length&&(d.teardown&&!1!==d.teardown.call(t,p,m.handle)||v.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)v.event.remove(t,f+e[c],i,n,!0);v.isEmptyObject(l)&&X.remove(t,"handle events")}},dispatch:function(t){var e,i,n,s,o,r,a=new Array(arguments.length),l=v.event.fix(t),c=(X.get(this,"events")||Object.create(null))[l.type]||[],h=v.event.special[l.type]||{};for(a[0]=l,e=1;e<arguments.length;e++)a[e]=arguments[e];if(l.delegateTarget=this,!h.preDispatch||!1!==h.preDispatch.call(this,l)){for(r=v.event.handlers.call(this,l,c),e=0;(s=r[e++])&&!l.isPropagationStopped();)for(l.currentTarget=s.elem,i=0;(o=s.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==o.namespace&&!l.rnamespace.test(o.namespace)||(l.handleObj=o,l.data=o.data,void 0!==(n=((v.event.special[o.origType]||{}).handle||o.handler).apply(s.elem,a))&&!1===(l.result=n)&&(l.preventDefault(),l.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,l),l.result}},handlers:function(t,e){var i,n,s,o,r,a=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&1<=t.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(o=[],r={},i=0;i<l;i++)void 0===r[s=(n=e[i]).selector+" "]&&(r[s]=n.needsContext?-1<v(s,this).index(c):v.find(s,this,null,[c]).length),r[s]&&o.push(n);o.length&&a.push({elem:c,handlers:o})}return c=this,l<e.length&&a.push({elem:c,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(v.Event.prototype,t,{enumerable:!0,configurable:!0,get:p(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[v.expando]?t:new v.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return ut.test(e.type)&&e.click&&M(e,"input")&&Ct(e,"click",vt),!1},trigger:function(t){var e=this||t;return ut.test(e.type)&&e.click&&M(e,"input")&&Ct(e,"click"),!0},_default:function(t){var e=t.target;return ut.test(e.type)&&e.click&&M(e,"input")&&X.get(e,"click")||M(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},v.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},v.Event=function(t,e){if(!(this instanceof v.Event))return new v.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?vt:kt,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&v.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[v.expando]=!0},v.Event.prototype={constructor:v.Event,isDefaultPrevented:kt,isPropagationStopped:kt,isImmediatePropagationStopped:kt,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=vt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=vt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=vt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},v.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},v.event.addProp),v.each({focus:"focusin",blur:"focusout"},(function(t,e){v.event.special[t]={setup:function(){return Ct(this,t,wt),!1},trigger:function(){return Ct(this,t),!0},_default:function(){return!0},delegateType:e}})),v.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){v.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=t.relatedTarget,s=t.handleObj;return n&&(n===this||v.contains(this,n))||(t.type=s.origType,i=s.handler.apply(this,arguments),t.type=e),i}}})),v.fn.extend({on:function(t,e,i,n){return St(this,t,e,i,n)},one:function(t,e,i,n){return St(this,t,e,i,n,1)},off:function(t,e,i){var n,s;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,v(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(s in t)this.off(s,e,t[s]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=kt),this.each((function(){v.event.remove(this,t,i,e)}))}});var Lt=/<script|<style|<link/i,Mt=/checked\s*(?:[^=]|=\s*.checked.)/i,Tt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Dt(t,e){return M(t,"table")&&M(11!==e.nodeType?e:e.firstChild,"tr")&&v(t).children("tbody")[0]||t}function At(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Et(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Pt(t,e){var i,n,s,o,r,a;if(1===e.nodeType){if(X.hasData(t)&&(a=X.get(t).events))for(s in X.remove(e,"handle events"),a)for(i=0,n=a[s].length;i<n;i++)v.event.add(e,s,a[s][i]);G.hasData(t)&&(o=G.access(t),r=v.extend({},o),G.set(e,r))}}function Ot(t,e,i,n){e=o(e);var s,r,a,l,c,h,d=0,u=t.length,g=u-1,m=e[0],y=p(m);if(y||1<u&&"string"==typeof m&&!f.checkClone&&Mt.test(m))return t.each((function(s){var o=t.eq(s);y&&(e[0]=m.call(this,s,o.html())),Ot(o,e,i,n)}));if(u&&(r=(s=xt(e,t[0].ownerDocument,!1,t,n)).firstChild,1===s.childNodes.length&&(s=r),r||n)){for(l=(a=v.map(mt(s,"script"),At)).length;d<u;d++)c=s,d!==g&&(c=v.clone(c,!0,!0),l&&v.merge(a,mt(c,"script"))),i.call(t[d],c,d);if(l)for(h=a[a.length-1].ownerDocument,v.map(a,Et),d=0;d<l;d++)c=a[d],pt.test(c.type||"")&&!X.access(c,"globalEval")&&v.contains(h,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?v._evalUrl&&!c.noModule&&v._evalUrl(c.src,{nonce:c.nonce||c.getAttribute("nonce")},h):b(c.textContent.replace(Tt,""),c,h))}return t}function jt(t,e,i){for(var n,s=e?v.filter(e,t):t,o=0;null!=(n=s[o]);o++)i||1!==n.nodeType||v.cleanData(mt(n)),n.parentNode&&(i&&st(n)&&yt(mt(n,"script")),n.parentNode.removeChild(n));return t}v.extend({htmlPrefilter:function(t){return t},clone:function(t,e,i){var n,s,o,r,a,l,c,h=t.cloneNode(!0),d=st(t);if(!(f.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||v.isXMLDoc(t)))for(r=mt(h),n=0,s=(o=mt(t)).length;n<s;n++)a=o[n],"input"===(c=(l=r[n]).nodeName.toLowerCase())&&ut.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(e)if(i)for(o=o||mt(t),r=r||mt(h),n=0,s=o.length;n<s;n++)Pt(o[n],r[n]);else Pt(t,h);return 0<(r=mt(h,"script")).length&&yt(r,!d&&mt(t,"script")),h},cleanData:function(t){for(var e,i,n,s=v.event.special,o=0;void 0!==(i=t[o]);o++)if(U(i)){if(e=i[X.expando]){if(e.events)for(n in e.events)s[n]?v.event.remove(i,n):v.removeEvent(i,n,e.handle);i[X.expando]=void 0}i[G.expando]&&(i[G.expando]=void 0)}}}),v.fn.extend({detach:function(t){return jt(this,t,!0)},remove:function(t){return jt(this,t)},text:function(t){return W(this,(function(t){return void 0===t?v.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Ot(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Dt(this,t).appendChild(t)}))},prepend:function(){return Ot(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Dt(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Ot(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Ot(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(v.cleanData(mt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return v.clone(this,t,e)}))},html:function(t){return W(this,(function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Lt.test(t)&&!gt[(ft.exec(t)||["",""])[1].toLowerCase()]){t=v.htmlPrefilter(t);try{for(;i<n;i++)1===(e=this[i]||{}).nodeType&&(v.cleanData(mt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Ot(this,arguments,(function(e){var i=this.parentNode;v.inArray(this,t)<0&&(v.cleanData(mt(this)),i&&i.replaceChild(e,this))}),t)}}),v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){v.fn[t]=function(t){for(var i,n=[],s=v(t),o=s.length-1,a=0;a<=o;a++)i=a===o?this:this.clone(!0),v(s[a])[e](i),r.apply(n,i.get());return this.pushStack(n)}}));var Rt=new RegExp("^("+tt+")(?!px)[a-z%]+$","i"),Nt=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)},It=function(t,e,i){var n,s,o={};for(s in e)o[s]=t.style[s],t.style[s]=e[s];for(s in n=i.call(t),e)t.style[s]=o[s];return n},Bt=new RegExp(it.join("|"),"i");function Ft(t,e,i){var n,s,o,r,a=t.style;return(i=i||Nt(t))&&(""!==(r=i.getPropertyValue(e)||i[e])||st(t)||(r=v.style(t,e)),!f.pixelBoxStyles()&&Rt.test(r)&&Bt.test(e)&&(n=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=n,a.minWidth=s,a.maxWidth=o)),void 0!==r?r+"":r}function Ht(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function e(){if(h){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",h.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",nt.appendChild(c).appendChild(h);var e=t.getComputedStyle(h);n="1%"!==e.top,l=12===i(e.marginLeft),h.style.right="60%",r=36===i(e.right),s=36===i(e.width),h.style.position="absolute",o=12===i(h.offsetWidth/3),nt.removeChild(c),h=null}}function i(t){return Math.round(parseFloat(t))}var n,s,o,r,a,l,c=m.createElement("div"),h=m.createElement("div");h.style&&(h.style.backgroundClip="content-box",h.cloneNode(!0).style.backgroundClip="",f.clearCloneStyle="content-box"===h.style.backgroundClip,v.extend(f,{boxSizingReliable:function(){return e(),s},pixelBoxStyles:function(){return e(),r},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),o},reliableTrDimensions:function(){var e,i,n,s;return null==a&&(e=m.createElement("table"),i=m.createElement("tr"),n=m.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",i.style.cssText="border:1px solid",i.style.height="1px",n.style.height="9px",n.style.display="block",nt.appendChild(e).appendChild(i).appendChild(n),s=t.getComputedStyle(i),a=parseInt(s.height,10)+parseInt(s.borderTopWidth,10)+parseInt(s.borderBottomWidth,10)===i.offsetHeight,nt.removeChild(e)),a}}))}();var zt=["Webkit","Moz","ms"],Wt=m.createElement("div").style,qt={};function Vt(t){return v.cssProps[t]||qt[t]||(t in Wt?t:qt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),i=zt.length;i--;)if((t=zt[i]+e)in Wt)return t}(t)||t)}var $t=/^(none|table(?!-c[ea]).+)/,Kt=/^--/,Ut={position:"absolute",visibility:"hidden",display:"block"},Yt={letterSpacing:"0",fontWeight:"400"};function Xt(t,e,i){var n=et.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function Gt(t,e,i,n,s,o){var r="width"===e?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=v.css(t,i+it[r],!0,s)),n?("content"===i&&(l-=v.css(t,"padding"+it[r],!0,s)),"margin"!==i&&(l-=v.css(t,"border"+it[r]+"Width",!0,s))):(l+=v.css(t,"padding"+it[r],!0,s),"padding"!==i?l+=v.css(t,"border"+it[r]+"Width",!0,s):a+=v.css(t,"border"+it[r]+"Width",!0,s));return!n&&0<=o&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-l-a-.5))||0),l}function Qt(t,e,i){var n=Nt(t),s=(!f.boxSizingReliable()||i)&&"border-box"===v.css(t,"boxSizing",!1,n),o=s,r=Ft(t,e,n),a="offset"+e[0].toUpperCase()+e.slice(1);if(Rt.test(r)){if(!i)return r;r="auto"}return(!f.boxSizingReliable()&&s||!f.reliableTrDimensions()&&M(t,"tr")||"auto"===r||!parseFloat(r)&&"inline"===v.css(t,"display",!1,n))&&t.getClientRects().length&&(s="border-box"===v.css(t,"boxSizing",!1,n),(o=a in t)&&(r=t[a])),(r=parseFloat(r)||0)+Gt(t,e,i||(s?"border":"content"),o,n,r)+"px"}function Jt(t,e,i,n,s){return new Jt.prototype.init(t,e,i,n,s)}v.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=Ft(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var s,o,r,a=K(e),l=Kt.test(e),c=t.style;if(l||(e=Vt(a)),r=v.cssHooks[e]||v.cssHooks[a],void 0===i)return r&&"get"in r&&void 0!==(s=r.get(t,!1,n))?s:c[e];"string"==(o=typeof i)&&(s=et.exec(i))&&s[1]&&(i=at(t,e,s),o="number"),null!=i&&i==i&&("number"!==o||l||(i+=s&&s[3]||(v.cssNumber[a]?"":"px")),f.clearCloneStyle||""!==i||0!==e.indexOf("background")||(c[e]="inherit"),r&&"set"in r&&void 0===(i=r.set(t,i,n))||(l?c.setProperty(e,i):c[e]=i))}},css:function(t,e,i,n){var s,o,r,a=K(e);return Kt.test(e)||(e=Vt(a)),(r=v.cssHooks[e]||v.cssHooks[a])&&"get"in r&&(s=r.get(t,!0,i)),void 0===s&&(s=Ft(t,e,n)),"normal"===s&&e in Yt&&(s=Yt[e]),""===i||i?(o=parseFloat(s),!0===i||isFinite(o)?o||0:s):s}}),v.each(["height","width"],(function(t,e){v.cssHooks[e]={get:function(t,i,n){if(i)return!$t.test(v.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Qt(t,e,n):It(t,Ut,(function(){return Qt(t,e,n)}))},set:function(t,i,n){var s,o=Nt(t),r=!f.scrollboxSize()&&"absolute"===o.position,a=(r||n)&&"border-box"===v.css(t,"boxSizing",!1,o),l=n?Gt(t,e,n,a,o):0;return a&&r&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-Gt(t,e,"border",!1,o)-.5)),l&&(s=et.exec(i))&&"px"!==(s[3]||"px")&&(t.style[e]=i,i=v.css(t,e)),Xt(0,i,l)}}})),v.cssHooks.marginLeft=Ht(f.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Ft(t,"marginLeft"))||t.getBoundingClientRect().left-It(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),v.each({margin:"",padding:"",border:"Width"},(function(t,e){v.cssHooks[t+e]={expand:function(i){for(var n=0,s={},o="string"==typeof i?i.split(" "):[i];n<4;n++)s[t+it[n]+e]=o[n]||o[n-2]||o[0];return s}},"margin"!==t&&(v.cssHooks[t+e].set=Xt)})),v.fn.extend({css:function(t,e){return W(this,(function(t,e,i){var n,s,o={},r=0;if(Array.isArray(e)){for(n=Nt(t),s=e.length;r<s;r++)o[e[r]]=v.css(t,e[r],!1,n);return o}return void 0!==i?v.style(t,e,i):v.css(t,e)}),t,e,1<arguments.length)}}),((v.Tween=Jt).prototype={constructor:Jt,init:function(t,e,i,n,s,o){this.elem=t,this.prop=i,this.easing=s||v.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=o||(v.cssNumber[i]?"":"px")},cur:function(){var t=Jt.propHooks[this.prop];return t&&t.get?t.get(this):Jt.propHooks._default.get(this)},run:function(t){var e,i=Jt.propHooks[this.prop];return this.options.duration?this.pos=e=v.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):Jt.propHooks._default.set(this),this}}).init.prototype=Jt.prototype,(Jt.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=v.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){v.fx.step[t.prop]?v.fx.step[t.prop](t):1!==t.elem.nodeType||!v.cssHooks[t.prop]&&null==t.elem.style[Vt(t.prop)]?t.elem[t.prop]=t.now:v.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=Jt.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},v.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},v.fx=Jt.prototype.init,v.fx.step={};var Zt,te,ee,ie,ne=/^(?:toggle|show|hide)$/,se=/queueHooks$/;function oe(){te&&(!1===m.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(oe):t.setTimeout(oe,v.fx.interval),v.fx.tick())}function re(){return t.setTimeout((function(){Zt=void 0})),Zt=Date.now()}function ae(t,e){var i,n=0,s={height:t};for(e=e?1:0;n<4;n+=2-e)s["margin"+(i=it[n])]=s["padding"+i]=t;return e&&(s.opacity=s.width=t),s}function le(t,e,i){for(var n,s=(ce.tweeners[e]||[]).concat(ce.tweeners["*"]),o=0,r=s.length;o<r;o++)if(n=s[o].call(i,e,t))return n}function ce(t,e,i){var n,s,o=0,r=ce.prefilters.length,a=v.Deferred().always((function(){delete l.elem})),l=function(){if(s)return!1;for(var e=Zt||re(),i=Math.max(0,c.startTime+c.duration-e),n=1-(i/c.duration||0),o=0,r=c.tweens.length;o<r;o++)c.tweens[o].run(n);return a.notifyWith(t,[c,n,i]),n<1&&r?i:(r||a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:v.extend({},e),opts:v.extend(!0,{specialEasing:{},easing:v.easing._default},i),originalProperties:e,originalOptions:i,startTime:Zt||re(),duration:i.duration,tweens:[],createTween:function(e,i){var n=v.Tween(t,c.opts,e,i,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var i=0,n=e?c.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)c.tweens[i].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),h=c.props;for(function(t,e){var i,n,s,o,r;for(i in t)if(s=e[n=K(i)],o=t[i],Array.isArray(o)&&(s=o[1],o=t[i]=o[0]),i!==n&&(t[n]=o,delete t[i]),(r=v.cssHooks[n])&&"expand"in r)for(i in o=r.expand(o),delete t[n],o)i in t||(t[i]=o[i],e[i]=s);else e[n]=s}(h,c.opts.specialEasing);o<r;o++)if(n=ce.prefilters[o].call(c,t,h,c.opts))return p(n.stop)&&(v._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return v.map(h,le,c),p(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),v.fx.timer(v.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}v.Animation=v.extend(ce,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return at(i.elem,t,et.exec(e),i),i}]},tweener:function(t,e){p(t)?(e=t,t=["*"]):t=t.match(R);for(var i,n=0,s=t.length;n<s;n++)i=t[n],ce.tweeners[i]=ce.tweeners[i]||[],ce.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var n,s,o,r,a,l,c,h,d="width"in e||"height"in e,u=this,f={},p=t.style,g=t.nodeType&&rt(t),m=X.get(t,"fxshow");for(n in i.queue||(null==(r=v._queueHooks(t,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,u.always((function(){u.always((function(){r.unqueued--,v.queue(t,"fx").length||r.empty.fire()}))}))),e)if(s=e[n],ne.test(s)){if(delete e[n],o=o||"toggle"===s,s===(g?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;g=!0}f[n]=m&&m[n]||v.style(t,n)}if((l=!v.isEmptyObject(e))||!v.isEmptyObject(f))for(n in d&&1===t.nodeType&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],null==(c=m&&m.display)&&(c=X.get(t,"display")),"none"===(h=v.css(t,"display"))&&(c?h=c:(ct([t],!0),c=t.style.display||c,h=v.css(t,"display"),ct([t]))),("inline"===h||"inline-block"===h&&null!=c)&&"none"===v.css(t,"float")&&(l||(u.done((function(){p.display=c})),null==c&&(h=p.display,c="none"===h?"":h)),p.display="inline-block")),i.overflow&&(p.overflow="hidden",u.always((function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}))),l=!1,f)l||(m?"hidden"in m&&(g=m.hidden):m=X.access(t,"fxshow",{display:c}),o&&(m.hidden=!g),g&&ct([t],!0),u.done((function(){for(n in g||ct([t]),X.remove(t,"fxshow"),f)v.style(t,n,f[n])}))),l=le(g?m[n]:0,n,u),n in m||(m[n]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?ce.prefilters.unshift(t):ce.prefilters.push(t)}}),v.speed=function(t,e,i){var n=t&&"object"==typeof t?v.extend({},t):{complete:i||!i&&e||p(t)&&t,duration:t,easing:i&&e||e&&!p(e)&&e};return v.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in v.fx.speeds?n.duration=v.fx.speeds[n.duration]:n.duration=v.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){p(n.old)&&n.old.call(this),n.queue&&v.dequeue(this,n.queue)},n},v.fn.extend({fadeTo:function(t,e,i,n){return this.filter(rt).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=v.isEmptyObject(t),o=v.speed(e,i,n),r=function(){var e=ce(this,v.extend({},t),o);(s||X.get(this,"finish"))&&e.stop(!0)};return r.finish=r,s||!1===o.queue?this.each(r):this.queue(o.queue,r)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,s=null!=t&&t+"queueHooks",o=v.timers,r=X.get(this);if(s)r[s]&&r[s].stop&&n(r[s]);else for(s in r)r[s]&&r[s].stop&&se.test(s)&&n(r[s]);for(s=o.length;s--;)o[s].elem!==this||null!=t&&o[s].queue!==t||(o[s].anim.stop(i),e=!1,o.splice(s,1));!e&&i||v.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,i=X.get(this),n=i[t+"queue"],s=i[t+"queueHooks"],o=v.timers,r=n?n.length:0;for(i.finish=!0,v.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish}))}}),v.each(["toggle","show","hide"],(function(t,e){var i=v.fn[e];v.fn[e]=function(t,n,s){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(ae(e,!0),t,n,s)}})),v.each({slideDown:ae("show"),slideUp:ae("hide"),slideToggle:ae("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){v.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}})),v.timers=[],v.fx.tick=function(){var t,e=0,i=v.timers;for(Zt=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||v.fx.stop(),Zt=void 0},v.fx.timer=function(t){v.timers.push(t),v.fx.start()},v.fx.interval=13,v.fx.start=function(){te||(te=!0,oe())},v.fx.stop=function(){te=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fn.delay=function(e,i){return e=v.fx&&v.fx.speeds[e]||e,i=i||"fx",this.queue(i,(function(i,n){var s=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(s)}}))},ee=m.createElement("input"),ie=m.createElement("select").appendChild(m.createElement("option")),ee.type="checkbox",f.checkOn=""!==ee.value,f.optSelected=ie.selected,(ee=m.createElement("input")).value="t",ee.type="radio",f.radioValue="t"===ee.value;var he,de=v.expr.attrHandle;v.fn.extend({attr:function(t,e){return W(this,v.attr,t,e,1<arguments.length)},removeAttr:function(t){return this.each((function(){v.removeAttr(this,t)}))}}),v.extend({attr:function(t,e,i){var n,s,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?v.prop(t,e,i):(1===o&&v.isXMLDoc(t)||(s=v.attrHooks[e.toLowerCase()]||(v.expr.match.bool.test(e)?he:void 0)),void 0!==i?null===i?void v.removeAttr(t,e):s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:(t.setAttribute(e,i+""),i):s&&"get"in s&&null!==(n=s.get(t,e))?n:null==(n=v.find.attr(t,e))?void 0:n)},attrHooks:{type:{set:function(t,e){if(!f.radioValue&&"radio"===e&&M(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,s=e&&e.match(R);if(s&&1===t.nodeType)for(;i=s[n++];)t.removeAttribute(i)}}),he={set:function(t,e,i){return!1===e?v.removeAttr(t,i):t.setAttribute(i,i),i}},v.each(v.expr.match.bool.source.match(/\w+/g),(function(t,e){var i=de[e]||v.find.attr;de[e]=function(t,e,n){var s,o,r=e.toLowerCase();return n||(o=de[r],de[r]=s,s=null!=i(t,e,n)?r:null,de[r]=o),s}}));var ue=/^(?:input|select|textarea|button)$/i,fe=/^(?:a|area)$/i;function pe(t){return(t.match(R)||[]).join(" ")}function ge(t){return t.getAttribute&&t.getAttribute("class")||""}function me(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(R)||[]}v.fn.extend({prop:function(t,e){return W(this,v.prop,t,e,1<arguments.length)},removeProp:function(t){return this.each((function(){delete this[v.propFix[t]||t]}))}}),v.extend({prop:function(t,e,i){var n,s,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&v.isXMLDoc(t)||(e=v.propFix[e]||e,s=v.propHooks[e]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:t[e]=i:s&&"get"in s&&null!==(n=s.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=v.find.attr(t,"tabindex");return e?parseInt(e,10):ue.test(t.nodeName)||fe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),f.optSelected||(v.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),v.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){v.propFix[this.toLowerCase()]=this})),v.fn.extend({addClass:function(t){var e,i,n,s,o,r,a,l=0;if(p(t))return this.each((function(e){v(this).addClass(t.call(this,e,ge(this)))}));if((e=me(t)).length)for(;i=this[l++];)if(s=ge(i),n=1===i.nodeType&&" "+pe(s)+" "){for(r=0;o=e[r++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");s!==(a=pe(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,o,r,a,l=0;if(p(t))return this.each((function(e){v(this).removeClass(t.call(this,e,ge(this)))}));if(!arguments.length)return this.attr("class","");if((e=me(t)).length)for(;i=this[l++];)if(s=ge(i),n=1===i.nodeType&&" "+pe(s)+" "){for(r=0;o=e[r++];)for(;-1<n.indexOf(" "+o+" ");)n=n.replace(" "+o+" "," ");s!==(a=pe(n))&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t,n="string"===i||Array.isArray(t);return"boolean"==typeof e&&n?e?this.addClass(t):this.removeClass(t):p(t)?this.each((function(i){v(this).toggleClass(t.call(this,i,ge(this),e),e)})):this.each((function(){var e,s,o,r;if(n)for(s=0,o=v(this),r=me(t);e=r[s++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==i||((e=ge(this))&&X.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":X.get(this,"__className__")||""))}))},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+pe(ge(i))+" ").indexOf(e))return!0;return!1}});var ye=/\r/g;v.fn.extend({val:function(t){var e,i,n,s=this[0];return arguments.length?(n=p(t),this.each((function(i){var s;1===this.nodeType&&(null==(s=n?t.call(this,i,v(this).val()):t)?s="":"number"==typeof s?s+="":Array.isArray(s)&&(s=v.map(s,(function(t){return null==t?"":t+""}))),(e=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,s,"value")||(this.value=s))}))):s?(e=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()])&&"get"in e&&void 0!==(i=e.get(s,"value"))?i:"string"==typeof(i=s.value)?i.replace(ye,""):null==i?"":i:void 0}}),v.extend({valHooks:{option:{get:function(t){var e=v.find.attr(t,"value");return null!=e?e:pe(v.text(t))}},select:{get:function(t){var e,i,n,s=t.options,o=t.selectedIndex,r="select-one"===t.type,a=r?null:[],l=r?o+1:s.length;for(n=o<0?l:r?o:0;n<l;n++)if(((i=s[n]).selected||n===o)&&!i.disabled&&(!i.parentNode.disabled||!M(i.parentNode,"optgroup"))){if(e=v(i).val(),r)return e;a.push(e)}return a},set:function(t,e){for(var i,n,s=t.options,o=v.makeArray(e),r=s.length;r--;)((n=s[r]).selected=-1<v.inArray(v.valHooks.option.get(n),o))&&(i=!0);return i||(t.selectedIndex=-1),o}}}}),v.each(["radio","checkbox"],(function(){v.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=-1<v.inArray(v(t).val(),e)}},f.checkOn||(v.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),f.focusin="onfocusin"in t;var be=/^(?:focusinfocus|focusoutblur)$/,xe=function(t){t.stopPropagation()};v.extend(v.event,{trigger:function(e,i,n,s){var o,r,a,l,c,d,u,f,y=[n||m],b=h.call(e,"type")?e.type:e,x=h.call(e,"namespace")?e.namespace.split("."):[];if(r=f=a=n=n||m,3!==n.nodeType&&8!==n.nodeType&&!be.test(b+v.event.triggered)&&(-1<b.indexOf(".")&&(b=(x=b.split(".")).shift(),x.sort()),c=b.indexOf(":")<0&&"on"+b,(e=e[v.expando]?e:new v.Event(b,"object"==typeof e&&e)).isTrigger=s?2:3,e.namespace=x.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+x.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:v.makeArray(i,[e]),u=v.event.special[b]||{},s||!u.trigger||!1!==u.trigger.apply(n,i))){if(!s&&!u.noBubble&&!g(n)){for(l=u.delegateType||b,be.test(l+b)||(r=r.parentNode);r;r=r.parentNode)y.push(r),a=r;a===(n.ownerDocument||m)&&y.push(a.defaultView||a.parentWindow||t)}for(o=0;(r=y[o++])&&!e.isPropagationStopped();)f=r,e.type=1<o?l:u.bindType||b,(d=(X.get(r,"events")||Object.create(null))[e.type]&&X.get(r,"handle"))&&d.apply(r,i),(d=c&&r[c])&&d.apply&&U(r)&&(e.result=d.apply(r,i),!1===e.result&&e.preventDefault());return e.type=b,s||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(y.pop(),i)||!U(n)||c&&p(n[b])&&!g(n)&&((a=n[c])&&(n[c]=null),v.event.triggered=b,e.isPropagationStopped()&&f.addEventListener(b,xe),n[b](),e.isPropagationStopped()&&f.removeEventListener(b,xe),v.event.triggered=void 0,a&&(n[c]=a)),e.result}},simulate:function(t,e,i){var n=v.extend(new v.Event,i,{type:t,isSimulated:!0});v.event.trigger(n,null,e)}}),v.fn.extend({trigger:function(t,e){return this.each((function(){v.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var i=this[0];if(i)return v.event.trigger(t,e,i,!0)}}),f.focusin||v.each({focus:"focusin",blur:"focusout"},(function(t,e){var i=function(t){v.event.simulate(e,t.target,v.event.fix(t))};v.event.special[e]={setup:function(){var n=this.ownerDocument||this.document||this,s=X.access(n,e);s||n.addEventListener(t,i,!0),X.access(n,e,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this.document||this,s=X.access(n,e)-1;s?X.access(n,e,s):(n.removeEventListener(t,i,!0),X.remove(n,e))}}}));var _e=t.location,ve={guid:Date.now()},ke=/\?/;v.parseXML=function(e){var i,n;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=i&&i.getElementsByTagName("parsererror")[0],i&&!n||v.error("Invalid XML: "+(n?v.map(n.childNodes,(function(t){return t.textContent})).join("\n"):e)),i};var we=/\[\]$/,Se=/\r?\n/g,Ce=/^(?:submit|button|image|reset|file)$/i,Le=/^(?:input|select|textarea|keygen)/i;function Me(t,e,i,n){var s;if(Array.isArray(e))v.each(e,(function(e,s){i||we.test(t)?n(t,s):Me(t+"["+("object"==typeof s&&null!=s?e:"")+"]",s,i,n)}));else if(i||"object"!==x(e))n(t,e);else for(s in e)Me(t+"["+s+"]",e[s],i,n)}v.param=function(t,e){var i,n=[],s=function(t,e){var i=p(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!v.isPlainObject(t))v.each(t,(function(){s(this.name,this.value)}));else for(i in t)Me(i,t[i],e,s);return n.join("&")},v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=v.prop(this,"elements");return t?v.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!v(this).is(":disabled")&&Le.test(this.nodeName)&&!Ce.test(t)&&(this.checked||!ut.test(t))})).map((function(t,e){var i=v(this).val();return null==i?null:Array.isArray(i)?v.map(i,(function(t){return{name:e.name,value:t.replace(Se,"\r\n")}})):{name:e.name,value:i.replace(Se,"\r\n")}})).get()}});var Te=/%20/g,De=/#.*$/,Ae=/([?&])_=[^&]*/,Ee=/^(.*?):[ \t]*([^\r\n]*)$/gm,Pe=/^(?:GET|HEAD)$/,Oe=/^\/\//,je={},Re={},Ne="*/".concat("*"),Ie=m.createElement("a");function Be(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,s=0,o=e.toLowerCase().match(R)||[];if(p(i))for(;n=o[s++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function Fe(t,e,i,n){var s={},o=t===Re;function r(a){var l;return s[a]=!0,v.each(t[a]||[],(function(t,a){var c=a(e,i,n);return"string"!=typeof c||o||s[c]?o?!(l=c):void 0:(e.dataTypes.unshift(c),r(c),!1)})),l}return r(e.dataTypes[0])||!s["*"]&&r("*")}function He(t,e){var i,n,s=v.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((s[i]?t:n||(n={}))[i]=e[i]);return n&&v.extend(!0,t,n),t}Ie.href=_e.href,v.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:_e.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(_e.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ne,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":v.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?He(He(t,v.ajaxSettings),e):He(v.ajaxSettings,t)},ajaxPrefilter:Be(je),ajaxTransport:Be(Re),ajax:function(e,i){"object"==typeof e&&(i=e,e=void 0),i=i||{};var n,s,o,r,a,l,c,h,d,u,f=v.ajaxSetup({},i),p=f.context||f,g=f.context&&(p.nodeType||p.jquery)?v(p):v.event,y=v.Deferred(),b=v.Callbacks("once memory"),x=f.statusCode||{},_={},k={},w="canceled",S={readyState:0,getResponseHeader:function(t){var e;if(c){if(!r)for(r={};e=Ee.exec(o);)r[e[1].toLowerCase()+" "]=(r[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=r[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?o:null},setRequestHeader:function(t,e){return null==c&&(t=k[t.toLowerCase()]=k[t.toLowerCase()]||t,_[t]=e),this},overrideMimeType:function(t){return null==c&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)S.always(t[S.status]);else for(e in t)x[e]=[x[e],t[e]];return this},abort:function(t){var e=t||w;return n&&n.abort(e),C(0,e),this}};if(y.promise(S),f.url=((e||f.url||_e.href)+"").replace(Oe,_e.protocol+"//"),f.type=i.method||i.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(R)||[""],null==f.crossDomain){l=m.createElement("a");try{l.href=f.url,l.href=l.href,f.crossDomain=Ie.protocol+"//"+Ie.host!=l.protocol+"//"+l.host}catch(e){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=v.param(f.data,f.traditional)),Fe(je,f,i,S),c)return S;for(d in(h=v.event&&f.global)&&0==v.active++&&v.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Pe.test(f.type),s=f.url.replace(De,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Te,"+")):(u=f.url.slice(s.length),f.data&&(f.processData||"string"==typeof f.data)&&(s+=(ke.test(s)?"&":"?")+f.data,delete f.data),!1===f.cache&&(s=s.replace(Ae,"$1"),u=(ke.test(s)?"&":"?")+"_="+ve.guid+++u),f.url=s+u),f.ifModified&&(v.lastModified[s]&&S.setRequestHeader("If-Modified-Since",v.lastModified[s]),v.etag[s]&&S.setRequestHeader("If-None-Match",v.etag[s])),(f.data&&f.hasContent&&!1!==f.contentType||i.contentType)&&S.setRequestHeader("Content-Type",f.contentType),S.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Ne+"; q=0.01":""):f.accepts["*"]),f.headers)S.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(!1===f.beforeSend.call(p,S,f)||c))return S.abort();if(w="abort",b.add(f.complete),S.done(f.success),S.fail(f.error),n=Fe(Re,f,i,S)){if(S.readyState=1,h&&g.trigger("ajaxSend",[S,f]),c)return S;f.async&&0<f.timeout&&(a=t.setTimeout((function(){S.abort("timeout")}),f.timeout));try{c=!1,n.send(_,C)}catch(e){if(c)throw e;C(-1,e)}}else C(-1,"No Transport");function C(e,i,r,l){var d,u,m,_,k,w=i;c||(c=!0,a&&t.clearTimeout(a),n=void 0,o=l||"",S.readyState=0<e?4:0,d=200<=e&&e<300||304===e,r&&(_=function(t,e,i){for(var n,s,o,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){o=s;break}r||(r=s)}o=o||r}if(o)return o!==l[0]&&l.unshift(o),i[o]}(f,S,r)),!d&&-1<v.inArray("script",f.dataTypes)&&v.inArray("json",f.dataTypes)<0&&(f.converters["text script"]=function(){}),_=function(t,e,i,n){var s,o,r,a,l,c={},h=t.dataTypes.slice();if(h[1])for(r in t.converters)c[r.toLowerCase()]=t.converters[r];for(o=h.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=h.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(r=c[l+" "+o]||c["* "+o]))for(s in c)if((a=s.split(" "))[1]===o&&(r=c[l+" "+a[0]]||c["* "+a[0]])){!0===r?r=c[s]:!0!==c[s]&&(o=a[0],h.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}(f,_,S,d),d?(f.ifModified&&((k=S.getResponseHeader("Last-Modified"))&&(v.lastModified[s]=k),(k=S.getResponseHeader("etag"))&&(v.etag[s]=k)),204===e||"HEAD"===f.type?w="nocontent":304===e?w="notmodified":(w=_.state,u=_.data,d=!(m=_.error))):(m=w,!e&&w||(w="error",e<0&&(e=0))),S.status=e,S.statusText=(i||w)+"",d?y.resolveWith(p,[u,w,S]):y.rejectWith(p,[S,w,m]),S.statusCode(x),x=void 0,h&&g.trigger(d?"ajaxSuccess":"ajaxError",[S,f,d?u:m]),b.fireWith(p,[S,w]),h&&(g.trigger("ajaxComplete",[S,f]),--v.active||v.event.trigger("ajaxStop")))}return S},getJSON:function(t,e,i){return v.get(t,e,i,"json")},getScript:function(t,e){return v.get(t,void 0,e,"script")}}),v.each(["get","post"],(function(t,e){v[e]=function(t,i,n,s){return p(i)&&(s=s||n,n=i,i=void 0),v.ajax(v.extend({url:t,type:e,dataType:s,data:i,success:n},v.isPlainObject(t)&&t))}})),v.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),v._evalUrl=function(t,e,i){return v.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){v.globalEval(t,e,i)}})},v.fn.extend({wrapAll:function(t){var e;return this[0]&&(p(t)&&(t=t.call(this[0])),e=v(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return p(t)?this.each((function(e){v(this).wrapInner(t.call(this,e))})):this.each((function(){var e=v(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)}))},wrap:function(t){var e=p(t);return this.each((function(i){v(this).wrapAll(e?t.call(this,i):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){v(this).replaceWith(this.childNodes)})),this}}),v.expr.pseudos.hidden=function(t){return!v.expr.pseudos.visible(t)},v.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},v.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var ze={0:200,1223:204},We=v.ajaxSettings.xhr();f.cors=!!We&&"withCredentials"in We,f.ajax=We=!!We,v.ajaxTransport((function(e){var i,n;if(f.cors||We&&!e.crossDomain)return{send:function(s,o){var r,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)a[r]=e.xhrFields[r];for(r in e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest"),s)a.setRequestHeader(r,s[r]);i=function(t){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(ze[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=a.ontimeout=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout((function(){i&&n()}))},i=i("abort");try{a.send(e.hasContent&&e.data||null)}catch(s){if(i)throw s}},abort:function(){i&&i()}}})),v.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return v.globalEval(t),t}}}),v.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),v.ajaxTransport("script",(function(t){var e,i;if(t.crossDomain||t.scriptAttrs)return{send:function(n,s){e=v("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&s("error"===t.type?404:200,t.type)}),m.head.appendChild(e[0])},abort:function(){i&&i()}}}));var qe,Ve=[],$e=/(=)\?(?=&|$)|\?\?/;v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ve.pop()||v.expando+"_"+ve.guid++;return this[t]=!0,t}}),v.ajaxPrefilter("json jsonp",(function(e,i,n){var s,o,r,a=!1!==e.jsonp&&($e.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&$e.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return s=e.jsonpCallback=p(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace($e,"$1"+s):!1!==e.jsonp&&(e.url+=(ke.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return r||v.error(s+" was not called"),r[0]},e.dataTypes[0]="json",o=t[s],t[s]=function(){r=arguments},n.always((function(){void 0===o?v(t).removeProp(s):t[s]=o,e[s]&&(e.jsonpCallback=i.jsonpCallback,Ve.push(s)),r&&p(o)&&o(r[0]),r=o=void 0})),"script"})),f.createHTMLDocument=((qe=m.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===qe.childNodes.length),v.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(f.createHTMLDocument?((n=(e=m.implementation.createHTMLDocument("")).createElement("base")).href=m.location.href,e.head.appendChild(n)):e=m),o=!i&&[],(s=T.exec(t))?[e.createElement(s[1])]:(s=xt([t],e,o),o&&o.length&&v(o).remove(),v.merge([],s.childNodes)));var n,s,o},v.fn.load=function(t,e,i){var n,s,o,r=this,a=t.indexOf(" ");return-1<a&&(n=pe(t.slice(a)),t=t.slice(0,a)),p(e)?(i=e,e=void 0):e&&"object"==typeof e&&(s="POST"),0<r.length&&v.ajax({url:t,type:s||"GET",dataType:"html",data:e}).done((function(t){o=arguments,r.html(n?v("<div>").append(v.parseHTML(t)).find(n):t)})).always(i&&function(t,e){r.each((function(){i.apply(this,o||[t.responseText,e,t])}))}),this},v.expr.pseudos.animated=function(t){return v.grep(v.timers,(function(e){return t===e.elem})).length},v.offset={setOffset:function(t,e,i){var n,s,o,r,a,l,c=v.css(t,"position"),h=v(t),d={};"static"===c&&(t.style.position="relative"),a=h.offset(),o=v.css(t,"top"),l=v.css(t,"left"),("absolute"===c||"fixed"===c)&&-1<(o+l).indexOf("auto")?(r=(n=h.position()).top,s=n.left):(r=parseFloat(o)||0,s=parseFloat(l)||0),p(e)&&(e=e.call(t,i,v.extend({},a))),null!=e.top&&(d.top=e.top-a.top+r),null!=e.left&&(d.left=e.left-a.left+s),"using"in e?e.using.call(t,d):h.css(d)}},v.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){v.offset.setOffset(this,t,e)}));var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,n=this[0],s={top:0,left:0};if("fixed"===v.css(n,"position"))e=n.getBoundingClientRect();else{for(e=this.offset(),i=n.ownerDocument,t=n.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===v.css(t,"position");)t=t.parentNode;t&&t!==n&&1===t.nodeType&&((s=v(t).offset()).top+=v.css(t,"borderTopWidth",!0),s.left+=v.css(t,"borderLeftWidth",!0))}return{top:e.top-s.top-v.css(n,"marginTop",!0),left:e.left-s.left-v.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===v.css(t,"position");)t=t.offsetParent;return t||nt}))}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var i="pageYOffset"===e;v.fn[t]=function(n){return W(this,(function(t,n,s){var o;if(g(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===s)return o?o[e]:t[n];o?o.scrollTo(i?o.pageXOffset:s,i?s:o.pageYOffset):t[n]=s}),t,n,arguments.length)}})),v.each(["top","left"],(function(t,e){v.cssHooks[e]=Ht(f.pixelPosition,(function(t,i){if(i)return i=Ft(t,e),Rt.test(i)?v(t).position()[e]+"px":i}))})),v.each({Height:"height",Width:"width"},(function(t,e){v.each({padding:"inner"+t,content:e,"":"outer"+t},(function(i,n){v.fn[n]=function(s,o){var r=arguments.length&&(i||"boolean"!=typeof s),a=i||(!0===s||!0===o?"margin":"border");return W(this,(function(e,i,s){var o;return g(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===s?v.css(e,i,a):v.style(e,i,s,a)}),e,r?s:void 0,r)}}))})),v.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){v.fn[e]=function(t){return this.on(e,t)}})),v.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),v.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){v.fn[e]=function(t,i){return 0<arguments.length?this.on(e,null,t,i):this.trigger(e)}}));var Ke=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;v.proxy=function(t,e){var i,n,o;if("string"==typeof e&&(i=t[e],e=t,t=i),p(t))return n=s.call(arguments,2),(o=function(){return t.apply(e||this,n.concat(s.call(arguments)))}).guid=t.guid=t.guid||v.guid++,o},v.holdReady=function(t){t?v.readyWait++:v.ready(!0)},v.isArray=Array.isArray,v.parseJSON=JSON.parse,v.nodeName=M,v.isFunction=p,v.isWindow=g,v.camelCase=K,v.type=x,v.now=Date.now,v.isNumeric=function(t){var e=v.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},v.trim=function(t){return null==t?"":(t+"").replace(Ke,"")},"function"==typeof define&&define.amd&&define("jquery",[],(function(){return v}));var Ue=t.jQuery,Ye=t.$;return v.noConflict=function(e){return t.$===v&&(t.$=Ye),e&&t.jQuery===v&&(t.jQuery=Ue),v},void 0===e&&(t.jQuery=t.$=v),v}));var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports?module.exports=function(e,i){return void 0===i&&(i="undefined"!=typeof window?require("jquery"):require("jquery")(e)),t(i),i}:t(jQuery)}((function(t){return t.fn.tilt=function(e){var i=function(){this.ticking||(requestAnimationFrame(h.bind(this)),this.ticking=!0)},n=function(){t(this).on("mousemove",a),t(this).on("mouseenter",o),this.settings.reset&&t(this).on("mouseleave",l),this.settings.glare&&t(window).on("resize",u.bind(this))},s=function(){var e=this;void 0!==this.timeout&&clearTimeout(this.timeout),t(this).css({transition:this.settings.speed+"ms "+this.settings.easing}),this.settings.glare&&this.glareElement.css({transition:"opacity "+this.settings.speed+"ms "+this.settings.easing}),this.timeout=setTimeout((function(){t(e).css({transition:""}),e.settings.glare&&e.glareElement.css({transition:""})}),this.settings.speed)},o=function(e){this.ticking=!1,t(this).css({"will-change":"transform"}),s.call(this),t(this).trigger("tilt.mouseEnter")},r=function(e){return void 0===e&&(e={pageX:t(this).offset().left+t(this).outerWidth()/2,pageY:t(this).offset().top+t(this).outerHeight()/2}),{x:e.pageX,y:e.pageY}},a=function(t){this.mousePositions=r(t),i.call(this)},l=function(){s.call(this),this.reset=!0,i.call(this),t(this).trigger("tilt.mouseLeave")},c=function(){var e=t(this).outerWidth(),i=t(this).outerHeight(),n=t(this).offset().left,s=t(this).offset().top,o=(this.mousePositions.x-n)/e,r=(this.mousePositions.y-s)/i;return{tiltX:(this.settings.maxTilt/2-o*this.settings.maxTilt).toFixed(2),tiltY:(r*this.settings.maxTilt-this.settings.maxTilt/2).toFixed(2),percentageX:100*o,percentageY:100*r,angle:Math.atan2(this.mousePositions.x-(n+e/2),-(this.mousePositions.y-(s+i/2)))*(180/Math.PI)}},h=function(){return this.transforms=c.call(this),this.reset?(this.reset=!1,t(this).css("transform","perspective("+this.settings.perspective+"px) rotateX(0deg) rotateY(0deg)"),void(this.settings.glare&&(this.glareElement.css("transform","rotate(180deg) translate(-50%, -50%)"),this.glareElement.css("opacity","0")))):(t(this).css("transform","perspective("+this.settings.perspective+"px) rotateX("+("x"===this.settings.disableAxis?0:this.transforms.tiltY)+"deg) rotateY("+("y"===this.settings.disableAxis?0:this.transforms.tiltX)+"deg) scale3d("+this.settings.scale+","+this.settings.scale+","+this.settings.scale+")"),this.settings.glare&&(this.glareElement.css("transform","rotate("+this.transforms.angle+"deg) translate(-50%, -50%)"),this.glareElement.css("opacity",""+this.transforms.percentageY*this.settings.maxGlare/100)),t(this).trigger("change",[this.transforms]),void(this.ticking=!1))},d=function(){var e=this.settings.glarePrerender;if(e||t(this).append('<div class="js-tilt-glare"><div class="js-tilt-glare-inner"></div></div>'),this.glareElementWrapper=t(this).find(".js-tilt-glare"),this.glareElement=t(this).find(".js-tilt-glare-inner"),!e){this.glareElementWrapper.css({position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}).css({overflow:"hidden","pointer-events":"none"}),this.glareElement.css({position:"absolute",top:"50%",left:"50%","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:""+2*t(this).outerWidth(),height:""+2*t(this).outerWidth(),transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"})}},u=function(){this.glareElement.css({width:""+2*t(this).outerWidth(),height:""+2*t(this).outerWidth()})};return t.fn.tilt.destroy=function(){t(this).each((function(){t(this).find(".js-tilt-glare").remove(),t(this).css({"will-change":"",transform:""}),t(this).off("mousemove mouseenter mouseleave")}))},t.fn.tilt.getValues=function(){var e=[];return t(this).each((function(){this.mousePositions=r.call(this),e.push(c.call(this))})),e},t.fn.tilt.reset=function(){t(this).each((function(){var e=this;this.mousePositions=r.call(this),this.settings=t(this).data("settings"),l.call(this),setTimeout((function(){e.reset=!1}),this.settings.transition)}))},this.each((function(){var i=this;this.settings=t.extend({maxTilt:t(this).is("[data-tilt-max]")?t(this).data("tilt-max"):20,perspective:t(this).is("[data-tilt-perspective]")?t(this).data("tilt-perspective"):300,easing:t(this).is("[data-tilt-easing]")?t(this).data("tilt-easing"):"cubic-bezier(.03,.98,.52,.99)",scale:t(this).is("[data-tilt-scale]")?t(this).data("tilt-scale"):"1",speed:t(this).is("[data-tilt-speed]")?t(this).data("tilt-speed"):"400",transition:!t(this).is("[data-tilt-transition]")||t(this).data("tilt-transition"),disableAxis:t(this).is("[data-tilt-disable-axis]")?t(this).data("tilt-disable-axis"):null,axis:t(this).is("[data-tilt-axis]")?t(this).data("tilt-axis"):null,reset:!t(this).is("[data-tilt-reset]")||t(this).data("tilt-reset"),glare:!!t(this).is("[data-tilt-glare]")&&t(this).data("tilt-glare"),maxGlare:t(this).is("[data-tilt-maxglare]")?t(this).data("tilt-maxglare"):1},e),null!==this.settings.axis&&(console.warn("Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information"),this.settings.disableAxis=this.settings.axis),this.init=function(){t(i).data("settings",i.settings),i.settings.glare&&d.call(i),n.call(i)},this.init()}))},t("[data-tilt]").tilt(),!0})),function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Chart=e()}(this,(function(){"use strict";const t="undefined"==typeof window?function(t){return t()}:window.requestAnimationFrame;function e(e,i,n){const s=n||(t=>Array.prototype.slice.call(t));let o=!1,r=[];return function(...n){r=s(n),o||(o=!0,t.call(window,(()=>{o=!1,e.apply(i,r)})))}}function i(t,e){let i;return function(...n){return e?(clearTimeout(i),i=setTimeout(t,e,n)):t.apply(this,n),e}}const n=t=>"start"===t?"left":"end"===t?"right":"center",s=(t,e,i)=>"start"===t?e:"end"===t?i:(e+i)/2,o=(t,e,i,n)=>t===(n?"left":"right")?i:"center"===t?(e+i)/2:e;var r=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const s=e.listeners[n],o=e.duration;s.forEach((n=>n({chart:t,initial:e.initial,numSteps:o,currentStep:Math.min(i-e.start,o)})))}_refresh(){this._request||(this._running=!0,this._request=t.call(window,(()=>{this._update(),this._request=null,this._running&&this._refresh()})))}_update(t=Date.now()){let e=0;this._charts.forEach(((i,n)=>{if(!i.running||!i.items.length)return;const s=i.items;let o,r=s.length-1,a=!1;for(;r>=0;--r)o=s[r],o._active?(o._total>i.duration&&(i.duration=o._total),o.tick(t),a=!0):(s[r]=s[s.length-1],s.pop());a&&(n.draw(),this._notify(n,i,t,"progress")),s.length||(i.running=!1,this._notify(n,i,t,"complete"),i.initial=!1),e+=s.length})),this._lastDate=t,0===e&&(this._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),"complete")}remove(t){return this._charts.delete(t)}};
/*!
 * @kurkle/color v0.1.9
 * https://github.com/kurkle/color#readme
 * (c) 2020 Jukka Kurkela
 * Released under the MIT License
 */const a={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},l="0123456789ABCDEF",c=t=>l[15&t],h=t=>l[(240&t)>>4]+l[15&t],d=t=>(240&t)>>4==(15&t);function u(t){return t+.5|0}const f=(t,e,i)=>Math.max(Math.min(t,i),e);function p(t){return f(u(2.55*t),0,255)}function g(t){return f(u(255*t),0,255)}function m(t){return f(u(t/2.55)/100,0,1)}function y(t){return f(u(100*t),0,100)}const b=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,x=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function _(t,e,i){const n=e*Math.min(i,1-i),s=(e,s=(e+t/30)%12)=>i-n*Math.max(Math.min(s-3,9-s,1),-1);return[s(0),s(8),s(4)]}function v(t,e,i){const n=(n,s=(n+t/60)%6)=>i-i*e*Math.max(Math.min(s,4-s,1),0);return[n(5),n(3),n(1)]}function k(t,e,i){const n=_(t,1,.5);let s;for(e+i>1&&(s=1/(e+i),e*=s,i*=s),s=0;s<3;s++)n[s]*=1-e-i,n[s]+=e;return n}function w(t){const e=t.r/255,i=t.g/255,n=t.b/255,s=Math.max(e,i,n),o=Math.min(e,i,n),r=(s+o)/2;let a,l,c;return s!==o&&(c=s-o,l=r>.5?c/(2-s-o):c/(s+o),a=s===e?(i-n)/c+(i<n?6:0):s===i?(n-e)/c+2:(e-i)/c+4,a=60*a+.5),[0|a,l||0,r]}function S(t,e,i,n){return(Array.isArray(e)?t(e[0],e[1],e[2]):t(e,i,n)).map(g)}function C(t,e,i){return S(_,t,e,i)}function L(t){return(t%360+360)%360}const M={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},T={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};let D;function A(t,e,i){if(t){let n=w(t);n[e]=Math.max(0,Math.min(n[e]+n[e]*i,0===e?360:1)),n=C(n),t.r=n[0],t.g=n[1],t.b=n[2]}}function E(t,e){return t?Object.assign(e||{},t):t}function P(t){var e={r:0,g:0,b:0,a:255};return Array.isArray(t)?t.length>=3&&(e={r:t[0],g:t[1],b:t[2],a:255},t.length>3&&(e.a=g(t[3]))):(e=E(t,{r:0,g:0,b:0,a:1})).a=g(e.a),e}function O(t){return"r"===t.charAt(0)?function(t){const e=b.exec(t);let i,n,s,o=255;if(e){if(e[7]!==i){const t=+e[7];o=255&(e[8]?p(t):255*t)}return i=+e[1],n=+e[3],s=+e[5],i=255&(e[2]?p(i):i),n=255&(e[4]?p(n):n),s=255&(e[6]?p(s):s),{r:i,g:n,b:s,a:o}}}(t):function(t){const e=x.exec(t);let i,n=255;if(!e)return;e[5]!==i&&(n=e[6]?p(+e[5]):g(+e[5]));const s=L(+e[2]),o=+e[3]/100,r=+e[4]/100;return i="hwb"===e[1]?function(t,e,i){return S(k,t,e,i)}(s,o,r):"hsv"===e[1]?function(t,e,i){return S(v,t,e,i)}(s,o,r):C(s,o,r),{r:i[0],g:i[1],b:i[2],a:n}}(t)}class j{constructor(t){if(t instanceof j)return t;const e=typeof t;let i;var n,s,o;"object"===e?i=P(t):"string"===e&&(o=(n=t).length,"#"===n[0]&&(4===o||5===o?s={r:255&17*a[n[1]],g:255&17*a[n[2]],b:255&17*a[n[3]],a:5===o?17*a[n[4]]:255}:7!==o&&9!==o||(s={r:a[n[1]]<<4|a[n[2]],g:a[n[3]]<<4|a[n[4]],b:a[n[5]]<<4|a[n[6]],a:9===o?a[n[7]]<<4|a[n[8]]:255})),i=s||function(t){D||(D=function(){const t={},e=Object.keys(T),i=Object.keys(M);let n,s,o,r,a;for(n=0;n<e.length;n++){for(r=a=e[n],s=0;s<i.length;s++)o=i[s],a=a.replace(o,M[o]);o=parseInt(T[r],16),t[a]=[o>>16&255,o>>8&255,255&o]}return t}(),D.transparent=[0,0,0,0]);const e=D[t.toLowerCase()];return e&&{r:e[0],g:e[1],b:e[2],a:4===e.length?e[3]:255}}(t)||O(t)),this._rgb=i,this._valid=!!i}get valid(){return this._valid}get rgb(){var t=E(this._rgb);return t&&(t.a=m(t.a)),t}set rgb(t){this._rgb=P(t)}rgbString(){return this._valid?(t=this._rgb)&&(t.a<255?`rgba(${t.r}, ${t.g}, ${t.b}, ${m(t.a)})`:`rgb(${t.r}, ${t.g}, ${t.b})`):this._rgb;var t}hexString(){return this._valid?function(t){var e=function(t){return d(t.r)&&d(t.g)&&d(t.b)&&d(t.a)}(t)?c:h;return t?"#"+e(t.r)+e(t.g)+e(t.b)+(t.a<255?e(t.a):""):t}(this._rgb):this._rgb}hslString(){return this._valid?function(t){if(!t)return;const e=w(t),i=e[0],n=y(e[1]),s=y(e[2]);return t.a<255?`hsla(${i}, ${n}%, ${s}%, ${m(t.a)})`:`hsl(${i}, ${n}%, ${s}%)`}(this._rgb):this._rgb}mix(t,e){const i=this;if(t){const n=i.rgb,s=t.rgb;let o;const r=e===o?.5:e,a=2*r-1,l=n.a-s.a,c=((a*l==-1?a:(a+l)/(1+a*l))+1)/2;o=1-c,n.r=255&c*n.r+o*s.r+.5,n.g=255&c*n.g+o*s.g+.5,n.b=255&c*n.b+o*s.b+.5,n.a=r*n.a+(1-r)*s.a,i.rgb=n}return i}clone(){return new j(this.rgb)}alpha(t){return this._rgb.a=g(t),this}clearer(t){return this._rgb.a*=1-t,this}greyscale(){const t=this._rgb,e=u(.3*t.r+.59*t.g+.11*t.b);return t.r=t.g=t.b=e,this}opaquer(t){return this._rgb.a*=1+t,this}negate(){const t=this._rgb;return t.r=255-t.r,t.g=255-t.g,t.b=255-t.b,this}lighten(t){return A(this._rgb,2,t),this}darken(t){return A(this._rgb,2,-t),this}saturate(t){return A(this._rgb,1,t),this}desaturate(t){return A(this._rgb,1,-t),this}rotate(t){return function(t,e){var i=w(t);i[0]=L(i[0]+e),i=C(i),t.r=i[0],t.g=i[1],t.b=i[2]}(this._rgb,t),this}}function R(t){return new j(t)}const N=t=>t instanceof CanvasGradient||t instanceof CanvasPattern;function I(t){return N(t)?t:R(t)}function B(t){return N(t)?t:R(t).saturate(.5).darken(.1).hexString()}function F(){}const H=function(){let t=0;return function(){return t++}}();function z(t){return null==t}function W(t){if(Array.isArray&&Array.isArray(t))return!0;const e=Object.prototype.toString.call(t);return"[object"===e.substr(0,7)&&"Array]"===e.substr(-6)}function q(t){return null!==t&&"[object Object]"===Object.prototype.toString.call(t)}const V=t=>("number"==typeof t||t instanceof Number)&&isFinite(+t);function $(t,e){return V(t)?t:e}function K(t,e){return void 0===t?e:t}const U=(t,e)=>"string"==typeof t&&t.endsWith("%")?parseFloat(t)/100:t/e,Y=(t,e)=>"string"==typeof t&&t.endsWith("%")?parseFloat(t)/100*e:+t;function X(t,e,i){if(t&&"function"==typeof t.call)return t.apply(i,e)}function G(t,e,i,n){let s,o,r;if(W(t))if(o=t.length,n)for(s=o-1;s>=0;s--)e.call(i,t[s],s);else for(s=0;s<o;s++)e.call(i,t[s],s);else if(q(t))for(r=Object.keys(t),o=r.length,s=0;s<o;s++)e.call(i,t[r[s]],r[s])}function Q(t,e){let i,n,s,o;if(!t||!e||t.length!==e.length)return!1;for(i=0,n=t.length;i<n;++i)if(s=t[i],o=e[i],s.datasetIndex!==o.datasetIndex||s.index!==o.index)return!1;return!0}function J(t){if(W(t))return t.map(J);if(q(t)){const e=Object.create(null),i=Object.keys(t),n=i.length;let s=0;for(;s<n;++s)e[i[s]]=J(t[i[s]]);return e}return t}function Z(t){return-1===["__proto__","prototype","constructor"].indexOf(t)}function tt(t,e,i,n){if(!Z(t))return;const s=e[t],o=i[t];q(s)&&q(o)?et(s,o,n):e[t]=J(o)}function et(t,e,i){const n=W(e)?e:[e],s=n.length;if(!q(t))return t;const o=(i=i||{}).merger||tt;for(let r=0;r<s;++r){if(!q(e=n[r]))continue;const s=Object.keys(e);for(let n=0,r=s.length;n<r;++n)o(s[n],t,e,i)}return t}function it(t,e){return et(t,e,{merger:nt})}function nt(t,e,i){if(!Z(t))return;const n=e[t],s=i[t];q(n)&&q(s)?it(n,s):Object.prototype.hasOwnProperty.call(e,t)||(e[t]=J(s))}function st(t,e){const i=t.indexOf(".",e);return-1===i?t.length:i}function ot(t,e){if(""===e)return t;let i=0,n=st(e,i);for(;t&&n>i;)t=t[e.substr(i,n-i)],i=n+1,n=st(e,i);return t}function rt(t){return t.charAt(0).toUpperCase()+t.slice(1)}const at=t=>void 0!==t,lt=t=>"function"==typeof t,ct=(t,e)=>{if(t.size!==e.size)return!1;for(const i of t)if(!e.has(i))return!1;return!0};function ht(t){return"mouseup"===t.type||"click"===t.type||"contextmenu"===t.type}const dt=Object.create(null),ut=Object.create(null);function ft(t,e){if(!e)return t;const i=e.split(".");for(let e=0,n=i.length;e<n;++e){const n=i[e];t=t[n]||(t[n]=Object.create(null))}return t}function pt(t,e,i){return"string"==typeof e?et(ft(t,e),i):et(ft(t,""),e)}var gt=new class{constructor(t){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=t=>t.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(t,e)=>B(e.backgroundColor),this.hoverBorderColor=(t,e)=>B(e.borderColor),this.hoverColor=(t,e)=>B(e.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(t)}set(t,e){return pt(this,t,e)}get(t){return ft(this,t)}describe(t,e){return pt(ut,t,e)}override(t,e){return pt(dt,t,e)}route(t,e,i,n){const s=ft(this,t),o=ft(this,i),r="_"+e;Object.defineProperties(s,{[r]:{value:s[e],writable:!0},[e]:{enumerable:!0,get(){const t=this[r],e=o[n];return q(t)?Object.assign({},e,t):K(t,e)},set(t){this[r]=t}}})}}({_scriptable:t=>!t.startsWith("on"),_indexable:t=>"events"!==t,hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}});const mt=Math.PI,yt=2*mt,bt=yt+mt,xt=Number.POSITIVE_INFINITY,_t=mt/180,vt=mt/2,kt=mt/4,wt=2*mt/3,St=Math.log10,Ct=Math.sign;function Lt(t){const e=Math.round(t);t=Dt(t,e,t/1e3)?e:t;const i=Math.pow(10,Math.floor(St(t))),n=t/i;return(n<=1?1:n<=2?2:n<=5?5:10)*i}function Mt(t){const e=[],i=Math.sqrt(t);let n;for(n=1;n<i;n++)t%n==0&&(e.push(n),e.push(t/n));return i===(0|i)&&e.push(i),e.sort(((t,e)=>t-e)).pop(),e}function Tt(t){return!isNaN(parseFloat(t))&&isFinite(t)}function Dt(t,e,i){return Math.abs(t-e)<i}function At(t,e){const i=Math.round(t);return i-e<=t&&i+e>=t}function Et(t,e,i){let n,s,o;for(n=0,s=t.length;n<s;n++)o=t[n][i],isNaN(o)||(e.min=Math.min(e.min,o),e.max=Math.max(e.max,o))}function Pt(t){return t*(mt/180)}function Ot(t){return t*(180/mt)}function jt(t){if(!V(t))return;let e=1,i=0;for(;Math.round(t*e)/e!==t;)e*=10,i++;return i}function Rt(t,e){const i=e.x-t.x,n=e.y-t.y,s=Math.sqrt(i*i+n*n);let o=Math.atan2(n,i);return o<-.5*mt&&(o+=yt),{angle:o,distance:s}}function Nt(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function It(t,e){return(t-e+bt)%yt-mt}function Bt(t){return(t%yt+yt)%yt}function Ft(t,e,i,n){const s=Bt(t),o=Bt(e),r=Bt(i),a=Bt(o-s),l=Bt(r-s),c=Bt(s-o),h=Bt(s-r);return s===o||s===r||n&&o===r||a>l&&c<h}function Ht(t,e,i){return Math.max(e,Math.min(i,t))}function zt(t){return Ht(t,-32768,32767)}function Wt(t,e,i,n=1e-6){return t>=Math.min(e,i)-n&&t<=Math.max(e,i)+n}function qt(t){return!t||z(t.size)||z(t.family)?null:(t.style?t.style+" ":"")+(t.weight?t.weight+" ":"")+t.size+"px "+t.family}function Vt(t,e,i,n,s){let o=e[s];return o||(o=e[s]=t.measureText(s).width,i.push(s)),o>n&&(n=o),n}function $t(t,e,i,n){let s=(n=n||{}).data=n.data||{},o=n.garbageCollect=n.garbageCollect||[];n.font!==e&&(s=n.data={},o=n.garbageCollect=[],n.font=e),t.save(),t.font=e;let r=0;const a=i.length;let l,c,h,d,u;for(l=0;l<a;l++)if(d=i[l],null!=d&&!0!==W(d))r=Vt(t,s,o,r,d);else if(W(d))for(c=0,h=d.length;c<h;c++)u=d[c],null==u||W(u)||(r=Vt(t,s,o,r,u));t.restore();const f=o.length/2;if(f>i.length){for(l=0;l<f;l++)delete s[o[l]];o.splice(0,f)}return r}function Kt(t,e,i){const n=t.currentDevicePixelRatio,s=0!==i?Math.max(i/2,.5):0;return Math.round((e-s)*n)/n+s}function Ut(t,e){(e=e||t.getContext("2d")).save(),e.resetTransform(),e.clearRect(0,0,t.width,t.height),e.restore()}function Yt(t,e,i,n){let s,o,r,a,l;const c=e.pointStyle,h=e.rotation,d=e.radius;let u=(h||0)*_t;if(c&&"object"==typeof c&&(s=c.toString(),"[object HTMLImageElement]"===s||"[object HTMLCanvasElement]"===s))return t.save(),t.translate(i,n),t.rotate(u),t.drawImage(c,-c.width/2,-c.height/2,c.width,c.height),void t.restore();if(!(isNaN(d)||d<=0)){switch(t.beginPath(),c){default:t.arc(i,n,d,0,yt),t.closePath();break;case"triangle":t.moveTo(i+Math.sin(u)*d,n-Math.cos(u)*d),u+=wt,t.lineTo(i+Math.sin(u)*d,n-Math.cos(u)*d),u+=wt,t.lineTo(i+Math.sin(u)*d,n-Math.cos(u)*d),t.closePath();break;case"rectRounded":l=.516*d,a=d-l,o=Math.cos(u+kt)*a,r=Math.sin(u+kt)*a,t.arc(i-o,n-r,l,u-mt,u-vt),t.arc(i+r,n-o,l,u-vt,u),t.arc(i+o,n+r,l,u,u+vt),t.arc(i-r,n+o,l,u+vt,u+mt),t.closePath();break;case"rect":if(!h){a=Math.SQRT1_2*d,t.rect(i-a,n-a,2*a,2*a);break}u+=kt;case"rectRot":o=Math.cos(u)*d,r=Math.sin(u)*d,t.moveTo(i-o,n-r),t.lineTo(i+r,n-o),t.lineTo(i+o,n+r),t.lineTo(i-r,n+o),t.closePath();break;case"crossRot":u+=kt;case"cross":o=Math.cos(u)*d,r=Math.sin(u)*d,t.moveTo(i-o,n-r),t.lineTo(i+o,n+r),t.moveTo(i+r,n-o),t.lineTo(i-r,n+o);break;case"star":o=Math.cos(u)*d,r=Math.sin(u)*d,t.moveTo(i-o,n-r),t.lineTo(i+o,n+r),t.moveTo(i+r,n-o),t.lineTo(i-r,n+o),u+=kt,o=Math.cos(u)*d,r=Math.sin(u)*d,t.moveTo(i-o,n-r),t.lineTo(i+o,n+r),t.moveTo(i+r,n-o),t.lineTo(i-r,n+o);break;case"line":o=Math.cos(u)*d,r=Math.sin(u)*d,t.moveTo(i-o,n-r),t.lineTo(i+o,n+r);break;case"dash":t.moveTo(i,n),t.lineTo(i+Math.cos(u)*d,n+Math.sin(u)*d)}t.fill(),e.borderWidth>0&&t.stroke()}}function Xt(t,e,i){return i=i||.5,!e||t&&t.x>e.left-i&&t.x<e.right+i&&t.y>e.top-i&&t.y<e.bottom+i}function Gt(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()}function Qt(t){t.restore()}function Jt(t,e,i,n,s){if(!e)return t.lineTo(i.x,i.y);if("middle"===s){const n=(e.x+i.x)/2;t.lineTo(n,e.y),t.lineTo(n,i.y)}else"after"===s!=!!n?t.lineTo(e.x,i.y):t.lineTo(i.x,e.y);t.lineTo(i.x,i.y)}function Zt(t,e,i,n){if(!e)return t.lineTo(i.x,i.y);t.bezierCurveTo(n?e.cp1x:e.cp2x,n?e.cp1y:e.cp2y,n?i.cp2x:i.cp1x,n?i.cp2y:i.cp1y,i.x,i.y)}function te(t,e,i,n,s,o={}){const r=W(e)?e:[e],a=o.strokeWidth>0&&""!==o.strokeColor;let l,c;for(t.save(),t.font=s.string,function(t,e){e.translation&&t.translate(e.translation[0],e.translation[1]),z(e.rotation)||t.rotate(e.rotation),e.color&&(t.fillStyle=e.color),e.textAlign&&(t.textAlign=e.textAlign),e.textBaseline&&(t.textBaseline=e.textBaseline)}(t,o),l=0;l<r.length;++l)c=r[l],a&&(o.strokeColor&&(t.strokeStyle=o.strokeColor),z(o.strokeWidth)||(t.lineWidth=o.strokeWidth),t.strokeText(c,i,n,o.maxWidth)),t.fillText(c,i,n,o.maxWidth),ee(t,i,n,c,o),n+=s.lineHeight;t.restore()}function ee(t,e,i,n,s){if(s.strikethrough||s.underline){const o=t.measureText(n),r=e-o.actualBoundingBoxLeft,a=e+o.actualBoundingBoxRight,l=i-o.actualBoundingBoxAscent,c=i+o.actualBoundingBoxDescent,h=s.strikethrough?(l+c)/2:c;t.strokeStyle=t.fillStyle,t.beginPath(),t.lineWidth=s.decorationWidth||2,t.moveTo(r,h),t.lineTo(a,h),t.stroke()}}function ie(t,e){const{x:i,y:n,w:s,h:o,radius:r}=e;t.arc(i+r.topLeft,n+r.topLeft,r.topLeft,-vt,mt,!0),t.lineTo(i,n+o-r.bottomLeft),t.arc(i+r.bottomLeft,n+o-r.bottomLeft,r.bottomLeft,mt,vt,!0),t.lineTo(i+s-r.bottomRight,n+o),t.arc(i+s-r.bottomRight,n+o-r.bottomRight,r.bottomRight,vt,0,!0),t.lineTo(i+s,n+r.topRight),t.arc(i+s-r.topRight,n+r.topRight,r.topRight,0,-vt,!0),t.lineTo(i+r.topLeft,n)}function ne(t,e,i){i=i||(i=>t[i]<e);let n,s=t.length-1,o=0;for(;s-o>1;)n=o+s>>1,i(n)?o=n:s=n;return{lo:o,hi:s}}const se=(t,e,i)=>ne(t,i,(n=>t[n][e]<i)),oe=(t,e,i)=>ne(t,i,(n=>t[n][e]>=i));function re(t,e,i){let n=0,s=t.length;for(;n<s&&t[n]<e;)n++;for(;s>n&&t[s-1]>i;)s--;return n>0||s<t.length?t.slice(n,s):t}const ae=["push","pop","shift","splice","unshift"];function le(t,e){t._chartjs?t._chartjs.listeners.push(e):(Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[e]}}),ae.forEach((e=>{const i="_onData"+rt(e),n=t[e];Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value(...e){const s=n.apply(this,e);return t._chartjs.listeners.forEach((t=>{"function"==typeof t[i]&&t[i](...e)})),s}})})))}function ce(t,e){const i=t._chartjs;if(!i)return;const n=i.listeners,s=n.indexOf(e);-1!==s&&n.splice(s,1),n.length>0||(ae.forEach((e=>{delete t[e]})),delete t._chartjs)}function he(t){const e=new Set;let i,n;for(i=0,n=t.length;i<n;++i)e.add(t[i]);return e.size===n?t:Array.from(e)}function de(){return"undefined"!=typeof window&&"undefined"!=typeof document}function ue(t){let e=t.parentNode;return e&&"[object ShadowRoot]"===e.toString()&&(e=e.host),e}function fe(t,e,i){let n;return"string"==typeof t?(n=parseInt(t,10),-1!==t.indexOf("%")&&(n=n/100*e.parentNode[i])):n=t,n}const pe=t=>window.getComputedStyle(t,null);function ge(t,e){return pe(t).getPropertyValue(e)}const me=["top","right","bottom","left"];function ye(t,e,i){const n={};i=i?"-"+i:"";for(let s=0;s<4;s++){const o=me[s];n[o]=parseFloat(t[e+"-"+o+i])||0}return n.width=n.left+n.right,n.height=n.top+n.bottom,n}function be(t,e){const{canvas:i,currentDevicePixelRatio:n}=e,s=pe(i),o="border-box"===s.boxSizing,r=ye(s,"padding"),a=ye(s,"border","width"),{x:l,y:c,box:h}=function(t,e){const i=t.native||t,n=i.touches,s=n&&n.length?n[0]:i,{offsetX:o,offsetY:r}=s;let a,l,c=!1;if(((t,e,i)=>(t>0||e>0)&&(!i||!i.shadowRoot))(o,r,i.target))a=o,l=r;else{const t=e.getBoundingClientRect();a=s.clientX-t.left,l=s.clientY-t.top,c=!0}return{x:a,y:l,box:c}}(t,i),d=r.left+(h&&a.left),u=r.top+(h&&a.top);let{width:f,height:p}=e;return o&&(f-=r.width+a.width,p-=r.height+a.height),{x:Math.round((l-d)/f*i.width/n),y:Math.round((c-u)/p*i.height/n)}}const xe=t=>Math.round(10*t)/10;function _e(t,e,i,n){const s=pe(t),o=ye(s,"margin"),r=fe(s.maxWidth,t,"clientWidth")||xt,a=fe(s.maxHeight,t,"clientHeight")||xt,l=function(t,e,i){let n,s;if(void 0===e||void 0===i){const o=ue(t);if(o){const t=o.getBoundingClientRect(),r=pe(o),a=ye(r,"border","width"),l=ye(r,"padding");e=t.width-l.width-a.width,i=t.height-l.height-a.height,n=fe(r.maxWidth,o,"clientWidth"),s=fe(r.maxHeight,o,"clientHeight")}else e=t.clientWidth,i=t.clientHeight}return{width:e,height:i,maxWidth:n||xt,maxHeight:s||xt}}(t,e,i);let{width:c,height:h}=l;if("content-box"===s.boxSizing){const t=ye(s,"border","width"),e=ye(s,"padding");c-=e.width+t.width,h-=e.height+t.height}return c=Math.max(0,c-o.width),h=Math.max(0,n?Math.floor(c/n):h-o.height),c=xe(Math.min(c,r,l.maxWidth)),h=xe(Math.min(h,a,l.maxHeight)),c&&!h&&(h=xe(c/2)),{width:c,height:h}}function ve(t,e,i){const n=e||1,s=Math.floor(t.height*n),o=Math.floor(t.width*n);t.height=s/n,t.width=o/n;const r=t.canvas;return r.style&&(i||!r.style.height&&!r.style.width)&&(r.style.height=`${t.height}px`,r.style.width=`${t.width}px`),(t.currentDevicePixelRatio!==n||r.height!==s||r.width!==o)&&(t.currentDevicePixelRatio=n,r.height=s,r.width=o,t.ctx.setTransform(n,0,0,n,0,0),!0)}const ke=function(){let t=!1;try{const e={get passive(){return t=!0,!1}};window.addEventListener("test",null,e),window.removeEventListener("test",null,e)}catch(t){}return t}();function we(t,e){const i=ge(t,e),n=i&&i.match(/^(\d+)(\.\d+)?px$/);return n?+n[1]:void 0}function Se(t,e){return"native"in t?{x:t.x,y:t.y}:be(t,e)}function Ce(t,e,i,n){const{controller:s,data:o,_sorted:r}=t,a=s._cachedMeta.iScale;if(a&&e===a.axis&&"r"!==e&&r&&o.length){const t=a._reversePixels?oe:se;if(!n)return t(o,e,i);if(s._sharedOptions){const n=o[0],s="function"==typeof n.getRange&&n.getRange(e);if(s){const n=t(o,e,i-s),r=t(o,e,i+s);return{lo:n.lo,hi:r.hi}}}}return{lo:0,hi:o.length-1}}function Le(t,e,i,n,s){const o=t.getSortedVisibleDatasetMetas(),r=i[e];for(let t=0,i=o.length;t<i;++t){const{index:i,data:a}=o[t],{lo:l,hi:c}=Ce(o[t],e,r,s);for(let t=l;t<=c;++t){const e=a[t];e.skip||n(e,i,t)}}}function Me(t,e,i,n){const s=[];return Xt(e,t.chartArea,t._minPadding)?(Le(t,i,e,(function(t,i,o){t.inRange(e.x,e.y,n)&&s.push({element:t,datasetIndex:i,index:o})}),!0),s):s}function Te(t,e,i,n,s){return Xt(e,t.chartArea,t._minPadding)?"r"!==i||n?function(t,e,i,n,s){let o=[];const r=function(t){const e=-1!==t.indexOf("x"),i=-1!==t.indexOf("y");return function(t,n){const s=e?Math.abs(t.x-n.x):0,o=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(s,2)+Math.pow(o,2))}}(i);let a=Number.POSITIVE_INFINITY;return Le(t,i,e,(function(i,l,c){const h=i.inRange(e.x,e.y,s);if(n&&!h)return;const d=i.getCenterPoint(s);if(!Xt(d,t.chartArea,t._minPadding)&&!h)return;const u=r(e,d);u<a?(o=[{element:i,datasetIndex:l,index:c}],a=u):u===a&&o.push({element:i,datasetIndex:l,index:c})})),o}(t,e,i,n,s):function(t,e,i,n){let s=[];return Le(t,i,e,(function(t,i,o){const{startAngle:r,endAngle:a}=t.getProps(["startAngle","endAngle"],n),{angle:l}=Rt(t,{x:e.x,y:e.y});Ft(l,r,a)&&s.push({element:t,datasetIndex:i,index:o})})),s}(t,e,i,s):[]}function De(t,e,i,n){const s=Se(e,t),o=[],r=i.axis,a="x"===r?"inXRange":"inYRange";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,s,o;for(let t=0,r=i.length;t<r;++t){({index:n,data:s}=i[t]);for(let t=0,i=s.length;t<i;++t)o=s[t],o.skip||e(o,n,t)}}(t,((t,e,i)=>{t[a](s[r],n)&&o.push({element:t,datasetIndex:e,index:i}),t.inRange(s.x,s.y,n)&&(l=!0)})),i.intersect&&!l?[]:o}var Ae={modes:{index(t,e,i,n){const s=Se(e,t),o=i.axis||"x",r=i.intersect?Me(t,s,o,n):Te(t,s,o,!1,n),a=[];return r.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=r[0].index,i=t.data[e];i&&!i.skip&&a.push({element:i,datasetIndex:t.index,index:e})})),a):[]},dataset(t,e,i,n){const s=Se(e,t),o=i.axis||"xy";let r=i.intersect?Me(t,s,o,n):Te(t,s,o,!1,n);if(r.length>0){const e=r[0].datasetIndex,i=t.getDatasetMeta(e).data;r=[];for(let t=0;t<i.length;++t)r.push({element:i[t],datasetIndex:e,index:t})}return r},point:(t,e,i,n)=>Me(t,Se(e,t),i.axis||"xy",n),nearest:(t,e,i,n)=>Te(t,Se(e,t),i.axis||"xy",i.intersect,n),x:(t,e,i,n)=>De(t,e,{axis:"x",intersect:i.intersect},n),y:(t,e,i,n)=>De(t,e,{axis:"y",intersect:i.intersect},n)}};const Ee=new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),Pe=new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);function Oe(t,e){const i=(""+t).match(Ee);if(!i||"normal"===i[1])return 1.2*e;switch(t=+i[2],i[3]){case"px":return t;case"%":t/=100}return e*t}function je(t,e){const i={},n=q(e),s=n?Object.keys(e):e,o=q(t)?n?i=>K(t[i],t[e[i]]):e=>t[e]:()=>t;for(const t of s)i[t]=+o(t)||0;return i}function Re(t){return je(t,{top:"y",right:"x",bottom:"y",left:"x"})}function Ne(t){return je(t,["topLeft","topRight","bottomLeft","bottomRight"])}function Ie(t){const e=Re(t);return e.width=e.left+e.right,e.height=e.top+e.bottom,e}function Be(t,e){t=t||{},e=e||gt.font;let i=K(t.size,e.size);"string"==typeof i&&(i=parseInt(i,10));let n=K(t.style,e.style);n&&!(""+n).match(Pe)&&(console.warn('Invalid font style specified: "'+n+'"'),n="");const s={family:K(t.family,e.family),lineHeight:Oe(K(t.lineHeight,e.lineHeight),i),size:i,style:n,weight:K(t.weight,e.weight),string:""};return s.string=qt(s),s}function Fe(t,e,i,n){let s,o,r,a=!0;for(s=0,o=t.length;s<o;++s)if(r=t[s],void 0!==r&&(void 0!==e&&"function"==typeof r&&(r=r(e),a=!1),void 0!==i&&W(r)&&(r=r[i%r.length],a=!1),void 0!==r))return n&&!a&&(n.cacheable=!1),r}function He(t,e,i){const{min:n,max:s}=t,o=Y(e,(s-n)/2),r=(t,e)=>i&&0===t?0:t+e;return{min:r(n,-Math.abs(o)),max:r(s,o)}}function ze(t,e){return Object.assign(Object.create(t),e)}const We=["left","top","right","bottom"];function qe(t,e){return t.filter((t=>t.pos===e))}function Ve(t,e){return t.filter((t=>-1===We.indexOf(t.pos)&&t.box.axis===e))}function $e(t,e){return t.sort(((t,i)=>{const n=e?i:t,s=e?t:i;return n.weight===s.weight?n.index-s.index:n.weight-s.weight}))}function Ke(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function Ue(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function Ye(t,e,i,n){const{pos:s,box:o}=i,r=t.maxPadding;if(!q(s)){i.size&&(t[s]-=i.size);const e=n[i.stack]||{size:0,count:1};e.size=Math.max(e.size,i.horizontal?o.height:o.width),i.size=e.size/e.count,t[s]+=i.size}o.getPadding&&Ue(r,o.getPadding());const a=Math.max(0,e.outerWidth-Ke(r,t,"left","right")),l=Math.max(0,e.outerHeight-Ke(r,t,"top","bottom")),c=a!==t.w,h=l!==t.h;return t.w=a,t.h=l,i.horizontal?{same:c,other:h}:{same:h,other:c}}function Xe(t,e){const i=e.maxPadding;return function(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}(t?["left","right"]:["top","bottom"])}function Ge(t,e,i,n){const s=[];let o,r,a,l,c,h;for(o=0,r=t.length,c=0;o<r;++o){a=t[o],l=a.box,l.update(a.width||e.w,a.height||e.h,Xe(a.horizontal,e));const{same:r,other:d}=Ye(e,i,a,n);c|=r&&s.length,h=h||d,l.fullSize||s.push(a)}return c&&Ge(s,e,i,n)||h}function Qe(t,e,i,n,s){t.top=i,t.left=e,t.right=e+n,t.bottom=i+s,t.width=n,t.height=s}function Je(t,e,i,n){const s=i.padding;let{x:o,y:r}=e;for(const a of t){const t=a.box,l=n[a.stack]||{count:1,placed:0,weight:1},c=a.stackWeight/l.weight||1;if(a.horizontal){const n=e.w*c,o=l.size||t.height;at(l.start)&&(r=l.start),t.fullSize?Qe(t,s.left,r,i.outerWidth-s.right-s.left,o):Qe(t,e.left+l.placed,r,n,o),l.start=r,l.placed+=n,r=t.bottom}else{const n=e.h*c,r=l.size||t.width;at(l.start)&&(o=l.start),t.fullSize?Qe(t,o,s.top,r,i.outerHeight-s.bottom-s.top):Qe(t,o,e.top+l.placed,r,n),l.start=o,l.placed+=n,o=t.right}}e.x=o,e.y=r}gt.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}});var Ze={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||"top",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,n){if(!t)return;const s=Ie(t.options.layout.padding),o=Math.max(e-s.width,0),r=Math.max(i-s.height,0),a=function(t){const e=function(t){const e=[];let i,n,s,o,r,a;for(i=0,n=(t||[]).length;i<n;++i)s=t[i],({position:o,options:{stack:r,stackWeight:a=1}}=s),e.push({index:i,box:s,pos:o,horizontal:s.isHorizontal(),weight:s.weight,stack:r&&o+r,stackWeight:a});return e}(t),i=$e(e.filter((t=>t.box.fullSize)),!0),n=$e(qe(e,"left"),!0),s=$e(qe(e,"right")),o=$e(qe(e,"top"),!0),r=$e(qe(e,"bottom")),a=Ve(e,"x"),l=Ve(e,"y");return{fullSize:i,leftAndTop:n.concat(o),rightAndBottom:s.concat(l).concat(r).concat(a),chartArea:qe(e,"chartArea"),vertical:n.concat(s).concat(l),horizontal:o.concat(r).concat(a)}}(t.boxes),l=a.vertical,c=a.horizontal;G(t.boxes,(t=>{"function"==typeof t.beforeLayout&&t.beforeLayout()}));const h=l.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,d=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:o,availableHeight:r,vBoxMaxWidth:o/2/h,hBoxMaxHeight:r/2}),u=Object.assign({},s);Ue(u,Ie(n));const f=Object.assign({maxPadding:u,w:o,h:r,x:s.left,y:s.top},s),p=function(t,e){const i=function(t){const e={};for(const i of t){const{stack:t,pos:n,stackWeight:s}=i;if(!t||!We.includes(n))continue;const o=e[t]||(e[t]={count:0,placed:0,weight:0,size:0});o.count++,o.weight+=s}return e}(t),{vBoxMaxWidth:n,hBoxMaxHeight:s}=e;let o,r,a;for(o=0,r=t.length;o<r;++o){a=t[o];const{fullSize:r}=a.box,l=i[a.stack],c=l&&a.stackWeight/l.weight;a.horizontal?(a.width=c?c*n:r&&e.availableWidth,a.height=s):(a.width=n,a.height=c?c*s:r&&e.availableHeight)}return i}(l.concat(c),d);Ge(a.fullSize,f,d,p),Ge(l,f,d,p),Ge(c,f,d,p)&&Ge(l,f,d,p),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i("top"),t.x+=i("left"),i("right"),i("bottom")}(f),Je(a.leftAndTop,f,d,p),f.x+=f.w,f.y+=f.h,Je(a.rightAndBottom,f,d,p),t.chartArea={left:f.left,top:f.top,right:f.left+f.w,bottom:f.top+f.h,height:f.h,width:f.w},G(a.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(f.w,f.h,{left:0,top:0,right:0,bottom:0})}))}};function ti(t,e=[""],i=t,n,s=(()=>t[0])){at(n)||(n=di("_fallback",t));const o={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:t,_rootScopes:i,_fallback:n,_getTarget:s,override:s=>ti([s,...t],e,i,n)};return new Proxy(o,{deleteProperty:(e,i)=>(delete e[i],delete e._keys,delete t[0][i],!0),get:(i,n)=>oi(i,n,(()=>function(t,e,i,n){let s;for(const o of e)if(s=di(ni(o,t),i),at(s))return si(t,s)?ci(i,n,t,s):s}(n,e,t,i))),getOwnPropertyDescriptor:(t,e)=>Reflect.getOwnPropertyDescriptor(t._scopes[0],e),getPrototypeOf:()=>Reflect.getPrototypeOf(t[0]),has:(t,e)=>ui(t).includes(e),ownKeys:t=>ui(t),set(t,e,i){const n=t._storage||(t._storage=s());return t[e]=n[e]=i,delete t._keys,!0}})}function ei(t,e,i,n){const s={_cacheable:!1,_proxy:t,_context:e,_subProxy:i,_stack:new Set,_descriptors:ii(t,n),setContext:e=>ei(t,e,i,n),override:s=>ei(t.override(s),e,i,n)};return new Proxy(s,{deleteProperty:(e,i)=>(delete e[i],delete t[i],!0),get:(t,e,i)=>oi(t,e,(()=>function(t,e,i){const{_proxy:n,_context:s,_subProxy:o,_descriptors:r}=t;let a=n[e];return lt(a)&&r.isScriptable(e)&&(a=function(t,e,i,n){const{_proxy:s,_context:o,_subProxy:r,_stack:a}=i;if(a.has(t))throw new Error("Recursion detected: "+Array.from(a).join("->")+"->"+t);return a.add(t),e=e(o,r||n),a.delete(t),si(t,e)&&(e=ci(s._scopes,s,t,e)),e}(e,a,t,i)),W(a)&&a.length&&(a=function(t,e,i,n){const{_proxy:s,_context:o,_subProxy:r,_descriptors:a}=i;if(at(o.index)&&n(t))e=e[o.index%e.length];else if(q(e[0])){const i=e,n=s._scopes.filter((t=>t!==i));e=[];for(const l of i){const i=ci(n,s,t,l);e.push(ei(i,o,r&&r[t],a))}}return e}(e,a,t,r.isIndexable)),si(e,a)&&(a=ei(a,s,o&&o[e],r)),a}(t,e,i))),getOwnPropertyDescriptor:(e,i)=>e._descriptors.allKeys?Reflect.has(t,i)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(t,i),getPrototypeOf:()=>Reflect.getPrototypeOf(t),has:(e,i)=>Reflect.has(t,i),ownKeys:()=>Reflect.ownKeys(t),set:(e,i,n)=>(t[i]=n,delete e[i],!0)})}function ii(t,e={scriptable:!0,indexable:!0}){const{_scriptable:i=e.scriptable,_indexable:n=e.indexable,_allKeys:s=e.allKeys}=t;return{allKeys:s,scriptable:i,indexable:n,isScriptable:lt(i)?i:()=>i,isIndexable:lt(n)?n:()=>n}}const ni=(t,e)=>t?t+rt(e):e,si=(t,e)=>q(e)&&"adapters"!==t&&(null===Object.getPrototypeOf(e)||e.constructor===Object);function oi(t,e,i){if(Object.prototype.hasOwnProperty.call(t,e))return t[e];const n=i();return t[e]=n,n}function ri(t,e,i){return lt(t)?t(e,i):t}const ai=(t,e)=>!0===t?e:"string"==typeof t?ot(e,t):void 0;function li(t,e,i,n,s){for(const o of e){const e=ai(i,o);if(e){t.add(e);const o=ri(e._fallback,i,s);if(at(o)&&o!==i&&o!==n)return o}else if(!1===e&&at(n)&&i!==n)return null}return!1}function ci(t,e,i,n){const s=e._rootScopes,o=ri(e._fallback,i,n),r=[...t,...s],a=new Set;a.add(n);let l=hi(a,r,i,o||i,n);return null!==l&&(!at(o)||o===i||(l=hi(a,r,o,l,n),null!==l))&&ti(Array.from(a),[""],s,o,(()=>function(t,e,i){const n=t._getTarget();e in n||(n[e]={});const s=n[e];return W(s)&&q(i)?i:s}(e,i,n)))}function hi(t,e,i,n,s){for(;i;)i=li(t,e,i,n,s);return i}function di(t,e){for(const i of e){if(!i)continue;const e=i[t];if(at(e))return e}}function ui(t){let e=t._keys;return e||(e=t._keys=function(t){const e=new Set;for(const i of t)for(const t of Object.keys(i).filter((t=>!t.startsWith("_"))))e.add(t);return Array.from(e)}(t._scopes)),e}const fi=Number.EPSILON||1e-14,pi=(t,e)=>e<t.length&&!t[e].skip&&t[e],gi=t=>"x"===t?"y":"x";function mi(t,e,i,n){const s=t.skip?e:t,o=e,r=i.skip?e:i,a=Nt(o,s),l=Nt(r,o);let c=a/(a+l),h=l/(a+l);c=isNaN(c)?0:c,h=isNaN(h)?0:h;const d=n*c,u=n*h;return{previous:{x:o.x-d*(r.x-s.x),y:o.y-d*(r.y-s.y)},next:{x:o.x+u*(r.x-s.x),y:o.y+u*(r.y-s.y)}}}function yi(t,e="x"){const i=gi(e),n=t.length,s=Array(n).fill(0),o=Array(n);let r,a,l,c=pi(t,0);for(r=0;r<n;++r)if(a=l,l=c,c=pi(t,r+1),l){if(c){const t=c[e]-l[e];s[r]=0!==t?(c[i]-l[i])/t:0}o[r]=a?c?Ct(s[r-1])!==Ct(s[r])?0:(s[r-1]+s[r])/2:s[r-1]:s[r]}!function(t,e,i){const n=t.length;let s,o,r,a,l,c=pi(t,0);for(let h=0;h<n-1;++h)l=c,c=pi(t,h+1),l&&c&&(Dt(e[h],0,fi)?i[h]=i[h+1]=0:(s=i[h]/e[h],o=i[h+1]/e[h],a=Math.pow(s,2)+Math.pow(o,2),a<=9||(r=3/Math.sqrt(a),i[h]=s*r*e[h],i[h+1]=o*r*e[h])))}(t,s,o),function(t,e,i="x"){const n=gi(i),s=t.length;let o,r,a,l=pi(t,0);for(let c=0;c<s;++c){if(r=a,a=l,l=pi(t,c+1),!a)continue;const s=a[i],h=a[n];r&&(o=(s-r[i])/3,a[`cp1${i}`]=s-o,a[`cp1${n}`]=h-o*e[c]),l&&(o=(l[i]-s)/3,a[`cp2${i}`]=s+o,a[`cp2${n}`]=h+o*e[c])}}(t,o,e)}function bi(t,e,i){return Math.max(Math.min(t,i),e)}function xi(t,e,i,n,s){let o,r,a,l;if(e.spanGaps&&(t=t.filter((t=>!t.skip))),"monotone"===e.cubicInterpolationMode)yi(t,s);else{let i=n?t[t.length-1]:t[0];for(o=0,r=t.length;o<r;++o)a=t[o],l=mi(i,a,t[Math.min(o+1,r-(n?0:1))%r],e.tension),a.cp1x=l.previous.x,a.cp1y=l.previous.y,a.cp2x=l.next.x,a.cp2y=l.next.y,i=a}e.capBezierPoints&&function(t,e){let i,n,s,o,r,a=Xt(t[0],e);for(i=0,n=t.length;i<n;++i)r=o,o=a,a=i<n-1&&Xt(t[i+1],e),o&&(s=t[i],r&&(s.cp1x=bi(s.cp1x,e.left,e.right),s.cp1y=bi(s.cp1y,e.top,e.bottom)),a&&(s.cp2x=bi(s.cp2x,e.left,e.right),s.cp2y=bi(s.cp2y,e.top,e.bottom)))}(t,i)}const _i=t=>0===t||1===t,vi=(t,e,i)=>-Math.pow(2,10*(t-=1))*Math.sin((t-e)*yt/i),ki=(t,e,i)=>Math.pow(2,-10*t)*Math.sin((t-e)*yt/i)+1,wi={linear:t=>t,easeInQuad:t=>t*t,easeOutQuad:t=>-t*(t-2),easeInOutQuad:t=>(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1),easeInCubic:t=>t*t*t,easeOutCubic:t=>(t-=1)*t*t+1,easeInOutCubic:t=>(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2),easeInQuart:t=>t*t*t*t,easeOutQuart:t=>-((t-=1)*t*t*t-1),easeInOutQuart:t=>(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2),easeInQuint:t=>t*t*t*t*t,easeOutQuint:t=>(t-=1)*t*t*t*t+1,easeInOutQuint:t=>(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2),easeInSine:t=>1-Math.cos(t*vt),easeOutSine:t=>Math.sin(t*vt),easeInOutSine:t=>-.5*(Math.cos(mt*t)-1),easeInExpo:t=>0===t?0:Math.pow(2,10*(t-1)),easeOutExpo:t=>1===t?1:1-Math.pow(2,-10*t),easeInOutExpo:t=>_i(t)?t:t<.5?.5*Math.pow(2,10*(2*t-1)):.5*(2-Math.pow(2,-10*(2*t-1))),easeInCirc:t=>t>=1?t:-(Math.sqrt(1-t*t)-1),easeOutCirc:t=>Math.sqrt(1-(t-=1)*t),easeInOutCirc:t=>(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1),easeInElastic:t=>_i(t)?t:vi(t,.075,.3),easeOutElastic:t=>_i(t)?t:ki(t,.075,.3),easeInOutElastic(t){const e=.1125;return _i(t)?t:t<.5?.5*vi(2*t,e,.45):.5+.5*ki(2*t-1,e,.45)},easeInBack(t){const e=1.70158;return t*t*((e+1)*t-e)},easeOutBack(t){const e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},easeInOutBack(t){let e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},easeInBounce:t=>1-wi.easeOutBounce(1-t),easeOutBounce(t){const e=7.5625,i=2.75;return t<1/i?e*t*t:t<2/i?e*(t-=1.5/i)*t+.75:t<2.5/i?e*(t-=2.25/i)*t+.9375:e*(t-=2.625/i)*t+.984375},easeInOutBounce:t=>t<.5?.5*wi.easeInBounce(2*t):.5*wi.easeOutBounce(2*t-1)+.5};function Si(t,e,i,n){return{x:t.x+i*(e.x-t.x),y:t.y+i*(e.y-t.y)}}function Ci(t,e,i,n){return{x:t.x+i*(e.x-t.x),y:"middle"===n?i<.5?t.y:e.y:"after"===n?i<1?t.y:e.y:i>0?e.y:t.y}}function Li(t,e,i,n){const s={x:t.cp2x,y:t.cp2y},o={x:e.cp1x,y:e.cp1y},r=Si(t,s,i),a=Si(s,o,i),l=Si(o,e,i),c=Si(r,a,i),h=Si(a,l,i);return Si(c,h,i)}const Mi=new Map;function Ti(t,e,i){return function(t,e){e=e||{};const i=t+JSON.stringify(e);let n=Mi.get(i);return n||(n=new Intl.NumberFormat(t,e),Mi.set(i,n)),n}(e,i).format(t)}function Di(t,e,i){return t?function(t,e){return{x:i=>t+t+e-i,setWidth(t){e=t},textAlign:t=>"center"===t?t:"right"===t?"left":"right",xPlus:(t,e)=>t-e,leftForLtr:(t,e)=>t-e}}(e,i):{x:t=>t,setWidth(t){},textAlign:t=>t,xPlus:(t,e)=>t+e,leftForLtr:(t,e)=>t}}function Ai(t,e){let i,n;"ltr"!==e&&"rtl"!==e||(i=t.canvas.style,n=[i.getPropertyValue("direction"),i.getPropertyPriority("direction")],i.setProperty("direction",e,"important"),t.prevTextDirection=n)}function Ei(t,e){void 0!==e&&(delete t.prevTextDirection,t.canvas.style.setProperty("direction",e[0],e[1]))}function Pi(t){return"angle"===t?{between:Ft,compare:It,normalize:Bt}:{between:Wt,compare:(t,e)=>t-e,normalize:t=>t}}function Oi({start:t,end:e,count:i,loop:n,style:s}){return{start:t%i,end:e%i,loop:n&&(e-t+1)%i==0,style:s}}function ji(t,e,i){if(!i)return[t];const{property:n,start:s,end:o}=i,r=e.length,{compare:a,between:l,normalize:c}=Pi(n),{start:h,end:d,loop:u,style:f}=function(t,e,i){const{property:n,start:s,end:o}=i,{between:r,normalize:a}=Pi(n),l=e.length;let c,h,{start:d,end:u,loop:f}=t;if(f){for(d+=l,u+=l,c=0,h=l;c<h&&r(a(e[d%l][n]),s,o);++c)d--,u--;d%=l,u%=l}return u<d&&(u+=l),{start:d,end:u,loop:f,style:t.style}}(t,e,i),p=[];let g,m,y,b=!1,x=null;for(let t=h,i=h;t<=d;++t)m=e[t%r],m.skip||(g=c(m[n]),g!==y&&(b=l(g,s,o),null===x&&(b||l(s,y,g)&&0!==a(s,y))&&(x=0===a(g,s)?t:i),null!==x&&(!b||0===a(o,g)||l(o,y,g))&&(p.push(Oi({start:x,end:t,loop:u,count:r,style:f})),x=null),i=t,y=g));return null!==x&&p.push(Oi({start:x,end:d,loop:u,count:r,style:f})),p}function Ri(t,e){const i=[],n=t.segments;for(let s=0;s<n.length;s++){const o=ji(n[s],t.points,e);o.length&&i.push(...o)}return i}function Ni(t,e){const i=t.points,n=t.options.spanGaps,s=i.length;if(!s)return[];const o=!!t._loop,{start:r,end:a}=function(t,e,i,n){let s=0,o=e-1;if(i&&!n)for(;s<e&&!t[s].skip;)s++;for(;s<e&&t[s].skip;)s++;for(s%=e,i&&(o+=s);o>s&&t[o%e].skip;)o--;return o%=e,{start:s,end:o}}(i,s,o,n);return Ii(t,!0===n?[{start:r,end:a,loop:o}]:function(t,e,i,n){const s=t.length,o=[];let r,a=e,l=t[e];for(r=e+1;r<=i;++r){const i=t[r%s];i.skip||i.stop?l.skip||(n=!1,o.push({start:e%s,end:(r-1)%s,loop:n}),e=a=i.stop?r:null):(a=r,l.skip&&(e=r)),l=i}return null!==a&&o.push({start:e%s,end:a%s,loop:n}),o}(i,r,a<r?a+s:a,!!t._fullLoop&&0===r&&a===s-1),i,e)}function Ii(t,e,i,n){return n&&n.setContext&&i?function(t,e,i,n){const s=t._chart.getContext(),o=Bi(t.options),{_datasetIndex:r,options:{spanGaps:a}}=t,l=i.length,c=[];let h=o,d=e[0].start,u=d;function f(t,e,n,s){const o=a?-1:1;if(t!==e){for(t+=l;i[t%l].skip;)t-=o;for(;i[e%l].skip;)e+=o;t%l!=e%l&&(c.push({start:t%l,end:e%l,loop:n,style:s}),h=s,d=e%l)}}for(const t of e){d=a?d:t.start;let e,o=i[d%l];for(u=d+1;u<=t.end;u++){const a=i[u%l];e=Bi(n.setContext(ze(s,{type:"segment",p0:o,p1:a,p0DataIndex:(u-1)%l,p1DataIndex:u%l,datasetIndex:r}))),Fi(e,h)&&f(d,u-1,t.loop,h),o=a,h=e}d<u-1&&f(d,u-1,t.loop,h)}return c}(t,e,i,n):e}function Bi(t){return{backgroundColor:t.backgroundColor,borderCapStyle:t.borderCapStyle,borderDash:t.borderDash,borderDashOffset:t.borderDashOffset,borderJoinStyle:t.borderJoinStyle,borderWidth:t.borderWidth,borderColor:t.borderColor}}function Fi(t,e){return e&&JSON.stringify(t)!==JSON.stringify(e)}var Hi=Object.freeze({__proto__:null,easingEffects:wi,color:I,getHoverColor:B,noop:F,uid:H,isNullOrUndef:z,isArray:W,isObject:q,isFinite:V,finiteOrDefault:$,valueOrDefault:K,toPercentage:U,toDimension:Y,callback:X,each:G,_elementsEqual:Q,clone:J,_merger:tt,merge:et,mergeIf:it,_mergerIf:nt,_deprecated:function(t,e,i,n){void 0!==e&&console.warn(t+': "'+i+'" is deprecated. Please use "'+n+'" instead')},resolveObjectKey:ot,_capitalize:rt,defined:at,isFunction:lt,setsEqual:ct,_isClickEvent:ht,toFontString:qt,_measureText:Vt,_longestText:$t,_alignPixel:Kt,clearCanvas:Ut,drawPoint:Yt,_isPointInArea:Xt,clipArea:Gt,unclipArea:Qt,_steppedLineTo:Jt,_bezierCurveTo:Zt,renderText:te,addRoundedRectPath:ie,_lookup:ne,_lookupByKey:se,_rlookupByKey:oe,_filterBetween:re,listenArrayEvents:le,unlistenArrayEvents:ce,_arrayUnique:he,_createResolver:ti,_attachContext:ei,_descriptors:ii,splineCurve:mi,splineCurveMonotone:yi,_updateBezierControlPoints:xi,_isDomSupported:de,_getParentNode:ue,getStyle:ge,getRelativePosition:be,getMaximumSize:_e,retinaScale:ve,supportsEventListenerOptions:ke,readUsedSize:we,fontString:function(t,e,i){return e+" "+t+"px "+i},requestAnimFrame:t,throttled:e,debounce:i,_toLeftRightCenter:n,_alignStartEnd:s,_textX:o,_pointInLine:Si,_steppedInterpolation:Ci,_bezierInterpolation:Li,formatNumber:Ti,toLineHeight:Oe,_readValueToProps:je,toTRBL:Re,toTRBLCorners:Ne,toPadding:Ie,toFont:Be,resolve:Fe,_addGrace:He,createContext:ze,PI:mt,TAU:yt,PITAU:bt,INFINITY:xt,RAD_PER_DEG:_t,HALF_PI:vt,QUARTER_PI:kt,TWO_THIRDS_PI:wt,log10:St,sign:Ct,niceNum:Lt,_factorize:Mt,isNumber:Tt,almostEquals:Dt,almostWhole:At,_setMinAndMaxByKey:Et,toRadians:Pt,toDegrees:Ot,_decimalPlaces:jt,getAngleFromPoint:Rt,distanceBetweenPoints:Nt,_angleDiff:It,_normalizeAngle:Bt,_angleBetween:Ft,_limitValue:Ht,_int16Range:zt,_isBetween:Wt,getRtlAdapter:Di,overrideTextDirection:Ai,restoreTextDirection:Ei,_boundSegment:ji,_boundSegments:Ri,_computeSegments:Ni});class zi{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}updateConfig(t){}}class Wi extends zi{acquireContext(t){return t&&t.getContext&&t.getContext("2d")||null}updateConfig(t){t.options.animation=!1}}const qi={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},Vi=t=>null===t||""===t,$i=!!ke&&{passive:!0};function Ki(t,e,i){t.canvas.removeEventListener(e,i,$i)}function Ui(t,e){for(const i of t)if(i===e||i.contains(e))return!0}function Yi(t,e,i){const n=t.canvas,s=new MutationObserver((t=>{let e=!1;for(const i of t)e=e||Ui(i.addedNodes,n),e=e&&!Ui(i.removedNodes,n);e&&i()}));return s.observe(document,{childList:!0,subtree:!0}),s}function Xi(t,e,i){const n=t.canvas,s=new MutationObserver((t=>{let e=!1;for(const i of t)e=e||Ui(i.removedNodes,n),e=e&&!Ui(i.addedNodes,n);e&&i()}));return s.observe(document,{childList:!0,subtree:!0}),s}const Gi=new Map;let Qi=0;function Ji(){const t=window.devicePixelRatio;t!==Qi&&(Qi=t,Gi.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function Zi(t,i,n){const s=t.canvas,o=s&&ue(s);if(!o)return;const r=e(((t,e)=>{const i=o.clientWidth;n(t,e),i<o.clientWidth&&n()}),window),a=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||r(i,n)}));return a.observe(o),function(t,e){Gi.size||window.addEventListener("resize",Ji),Gi.set(t,e)}(t,r),a}function tn(t,e,i){i&&i.disconnect(),"resize"===e&&function(t){Gi.delete(t),Gi.size||window.removeEventListener("resize",Ji)}(t)}function en(t,i,n){const s=t.canvas,o=e((e=>{null!==t.ctx&&n(function(t,e){const i=qi[t.type]||t.type,{x:n,y:s}=be(t,e);return{type:i,chart:e,native:t,x:void 0!==n?n:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,$i)}(s,i,o),o}class nn extends zi{acquireContext(t,e){const i=t&&t.getContext&&t.getContext("2d");return i&&i.canvas===t?(function(t,e){const i=t.style,n=t.getAttribute("height"),s=t.getAttribute("width");if(t.$chartjs={initial:{height:n,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||"block",i.boxSizing=i.boxSizing||"border-box",Vi(s)){const e=we(t,"width");void 0!==e&&(t.width=e)}if(Vi(n))if(""===t.style.height)t.height=t.width/(e||2);else{const e=we(t,"height");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;["height","width"].forEach((t=>{const n=i[t];z(n)?e.removeAttribute(t):e.setAttribute(t,n)}));const n=i.style||{};return Object.keys(n).forEach((t=>{e.style[t]=n[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),s={attach:Yi,detach:Xi,resize:Zi}[e]||en;n[e]=s(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];n&&(({attach:tn,detach:tn,resize:tn}[e]||Ki)(t,e,n),i[e]=void 0)}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,n){return _e(t,e,i,n)}isAttached(t){const e=ue(t);return!(!e||!e.isConnected)}}function sn(t){return!de()||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas?Wi:nn}var on=Object.freeze({__proto__:null,_detectPlatform:sn,BasePlatform:zi,BasicPlatform:Wi,DomPlatform:nn});const rn="transparent",an={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const n=I(t||rn),s=n.valid&&I(e||rn);return s&&s.valid?s.mix(n,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class ln{constructor(t,e,i,n){const s=e[i];n=Fe([t.to,n,s,t.from]);const o=Fe([t.from,s,n]);this._active=!0,this._fn=t.fn||an[t.type||typeof o],this._easing=wi[t.easing]||wi.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=o,this._to=n,this._promises=void 0}active(){return this._active}update(t,e,i){if(this._active){this._notify(!1);const n=this._target[this._prop],s=i-this._start,o=this._duration-s;this._start=i,this._duration=Math.floor(Math.max(o,t.duration)),this._total+=s,this._loop=!!t.loop,this._to=Fe([t.to,e,n,t.from]),this._from=Fe([t.from,n,e])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(t){const e=t-this._start,i=this._duration,n=this._prop,s=this._from,o=this._loop,r=this._to;let a;if(this._active=s!==r&&(o||e<i),!this._active)return this._target[n]=r,void this._notify(!0);e<0?this._target[n]=s:(a=e/i%2,a=o&&a>1?2-a:a,a=this._easing(Math.min(1,Math.max(0,a))),this._target[n]=this._fn(s,r,a))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?"res":"rej",i=this._promises||[];for(let t=0;t<i.length;t++)i[t][e]()}}gt.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const cn=Object.keys(gt.animation);gt.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:t=>"onProgress"!==t&&"onComplete"!==t&&"fn"!==t}),gt.set("animations",{colors:{type:"color",properties:["color","borderColor","backgroundColor"]},numbers:{type:"number",properties:["x","y","borderWidth","radius","tension"]}}),gt.describe("animations",{_fallback:"animation"}),gt.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:t=>0|t}}}});class hn{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!q(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const n=t[i];if(!q(n))return;const s={};for(const t of cn)s[t]=n[t];(W(n.properties)&&n.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(i)return i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}})),i;t.options=e}(t,i);if(!n)return[];const s=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let e=0;e<n.length;e++){const s=t[n[e]];s&&s.active()&&i.push(s.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),s}_createAnimations(t,e){const i=this._properties,n=[],s=t.$animations||(t.$animations={}),o=Object.keys(e),r=Date.now();let a;for(a=o.length-1;a>=0;--a){const l=o[a];if("$"===l.charAt(0))continue;if("options"===l){n.push(...this._animateOptions(t,e));continue}const c=e[l];let h=s[l];const d=i.get(l);if(h){if(d&&h.active()){h.update(d,c,r);continue}h.cancel()}d&&d.duration?(s[l]=h=new ln(d,t,l,c),n.push(h)):t[l]=c}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(r.add(this._chart,i),!0):void 0}}function dn(t,e){const i=t&&t.options||{},n=i.reverse,s=void 0===i.min?e:0,o=void 0===i.max?e:0;return{start:n?o:s,end:n?s:o}}function un(t,e){const i=[],n=t._getSortedDatasetMetas(e);let s,o;for(s=0,o=n.length;s<o;++s)i.push(n[s].index);return i}function fn(t,e,i,n={}){const s=t.keys,o="single"===n.mode;let r,a,l,c;if(null!==e){for(r=0,a=s.length;r<a;++r){if(l=+s[r],l===i){if(n.all)continue;break}c=t.values[l],V(c)&&(o||0===e||Ct(e)===Ct(c))&&(e+=c)}return e}}function pn(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function gn(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function mn(t,e,i,n){for(const s of e.getMatchingVisibleMetas(n).reverse()){const e=t[s.index];if(i&&e>0||!i&&e<0)return s.index}return null}function yn(t,e){const{chart:i,_cachedMeta:n}=t,s=i._stacks||(i._stacks={}),{iScale:o,vScale:r,index:a}=n,l=o.axis,c=r.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(o,r,n),d=e.length;let u;for(let t=0;t<d;++t){const i=e[t],{[l]:o,[c]:d}=i;u=(i._stacks||(i._stacks={}))[c]=gn(s,h,o),u[a]=d,u._top=mn(u,r,!0,n.type),u._bottom=mn(u,r,!1,n.type)}}function bn(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function xn(t,e){const i=t.controller.index,n=t.vScale&&t.vScale.axis;if(n){e=e||t._parsed;for(const t of e){const e=t._stacks;if(!e||void 0===e[n]||void 0===e[n][i])return;delete e[n][i]}}}const _n=t=>"reset"===t||"none"===t,vn=(t,e)=>e?t:Object.assign({},t);class kn{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this._syncList=[],this.initialize()}initialize(){const t=this._cachedMeta;this.configure(),this.linkScales(),t._stacked=pn(t.vScale,t),this.addElements()}updateIndex(t){this.index!==t&&xn(this._cachedMeta),this.index=t}linkScales(){const t=this.chart,e=this._cachedMeta,i=this.getDataset(),n=(t,e,i,n)=>"x"===t?e:"r"===t?n:i,s=e.xAxisID=K(i.xAxisID,bn(t,"x")),o=e.yAxisID=K(i.yAxisID,bn(t,"y")),r=e.rAxisID=K(i.rAxisID,bn(t,"r")),a=e.indexAxis,l=e.iAxisID=n(a,s,o,r),c=e.vAxisID=n(a,o,s,r);e.xScale=this.getScaleForId(s),e.yScale=this.getScaleForId(o),e.rScale=this.getScaleForId(r),e.iScale=this.getScaleForId(l),e.vScale=this.getScaleForId(c)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update("reset")}_destroy(){const t=this._cachedMeta;this._data&&ce(this._data,this),t._stacked&&xn(t)}_dataCheck(){const t=this.getDataset(),e=t.data||(t.data=[]),i=this._data;if(q(e))this._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,s,o;for(n=0,s=e.length;n<s;++n)o=e[n],i[n]={x:o,y:t[o]};return i}(e);else if(i!==e){if(i){ce(i,this);const t=this._cachedMeta;xn(t),t._parsed=[]}e&&Object.isExtensible(e)&&le(e,this),this._syncList=[],this._data=e}}addElements(){const t=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(t.dataset=new this.datasetElementType)}buildOrUpdateElements(t){const e=this._cachedMeta,i=this.getDataset();let n=!1;this._dataCheck();const s=e._stacked;e._stacked=pn(e.vScale,e),e.stack!==i.stack&&(n=!0,xn(e),e.stack=i.stack),this._resyncElements(t),(n||s!==e._stacked)&&yn(this,e._parsed)}configure(){const t=this.chart.config,e=t.datasetScopeKeys(this._type),i=t.getOptionScopes(this.getDataset(),e,!0);this.options=t.createResolver(i,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(t,e){const{_cachedMeta:i,_data:n}=this,{iScale:s,_stacked:o}=i,r=s.axis;let a,l,c,h=0===t&&e===n.length||i._sorted,d=t>0&&i._parsed[t-1];if(!1===this._parsing)i._parsed=n,i._sorted=!0,c=n;else{c=W(n[t])?this.parseArrayData(i,n,t,e):q(n[t])?this.parseObjectData(i,n,t,e):this.parsePrimitiveData(i,n,t,e);const s=()=>null===l[r]||d&&l[r]<d[r];for(a=0;a<e;++a)i._parsed[a+t]=l=c[a],h&&(s()&&(h=!1),d=l);i._sorted=h}o&&yn(this,c)}parsePrimitiveData(t,e,i,n){const{iScale:s,vScale:o}=t,r=s.axis,a=o.axis,l=s.getLabels(),c=s===o,h=new Array(n);let d,u,f;for(d=0,u=n;d<u;++d)f=d+i,h[d]={[r]:c||s.parse(l[f],f),[a]:o.parse(e[f],f)};return h}parseArrayData(t,e,i,n){const{xScale:s,yScale:o}=t,r=new Array(n);let a,l,c,h;for(a=0,l=n;a<l;++a)c=a+i,h=e[c],r[a]={x:s.parse(h[0],c),y:o.parse(h[1],c)};return r}parseObjectData(t,e,i,n){const{xScale:s,yScale:o}=t,{xAxisKey:r="x",yAxisKey:a="y"}=this._parsing,l=new Array(n);let c,h,d,u;for(c=0,h=n;c<h;++c)d=c+i,u=e[d],l[c]={x:s.parse(ot(u,r),d),y:o.parse(ot(u,a),d)};return l}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,s=this._cachedMeta,o=e[t.axis];return fn({keys:un(n,!0),values:e._stacks[t.axis]},o,s.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const s=i[e.axis];let o=null===s?NaN:s;const r=n&&i._stacks[e.axis];n&&r&&(n.values=r,o=fn(n,s,this._cachedMeta.index)),t.min=Math.min(t.min,o),t.max=Math.max(t.max,o)}getMinMax(t,e){const i=this._cachedMeta,n=i._parsed,s=i._sorted&&t===i.iScale,o=n.length,r=this._getOtherScale(t),a=((t,e,i)=>t&&!e.hidden&&e._stacked&&{keys:un(i,!0),values:null})(e,i,this.chart),l={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:c,max:h}=function(t){const{min:e,max:i,minDefined:n,maxDefined:s}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:s?i:Number.POSITIVE_INFINITY}}(r);let d,u;function f(){u=n[d];const e=u[r.axis];return!V(u[t.axis])||c>e||h<e}for(d=0;d<o&&(f()||(this.updateRangeFromParsed(l,t,u,a),!s));++d);if(s)for(d=o-1;d>=0;--d)if(!f()){this.updateRangeFromParsed(l,t,u,a);break}return l}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let n,s,o;for(n=0,s=e.length;n<s;++n)o=e[n][t.axis],V(o)&&i.push(o);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,s=this.getParsed(t);return{label:i?""+i.getLabelForValue(s[i.axis]):"",value:n?""+n.getLabelForValue(s[n.axis]):""}}_update(t){const e=this._cachedMeta;this.update(t||"default"),e._clip=function(t){let e,i,n,s;return q(t)?(e=t.top,i=t.right,n=t.bottom,s=t.left):e=i=n=s=t,{top:e,right:i,bottom:n,left:s,disabled:!1===t}}(K(this.options.clip,function(t,e,i){if(!1===i)return!1;const n=dn(t,i),s=dn(e,i);return{top:s.end,right:n.end,bottom:s.start,left:n.start}}(e.xScale,e.yScale,this.getMaxOverflow())))}update(t){}draw(){const t=this._ctx,e=this.chart,i=this._cachedMeta,n=i.data||[],s=e.chartArea,o=[],r=this._drawStart||0,a=this._drawCount||n.length-r,l=this.options.drawActiveElementsOnTop;let c;for(i.dataset&&i.dataset.draw(t,s,r,a),c=r;c<r+a;++c){const e=n[c];e.hidden||(e.active&&l?o.push(e):e.draw(t,s))}for(c=0;c<o.length;++c)o[c].draw(t,s)}getStyle(t,e){const i=e?"active":"default";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this.getDataset();let s;if(t>=0&&t<this._cachedMeta.data.length){const e=this._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return ze(t,{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:"default",type:"data"})}(this.getContext(),t,e)),s.parsed=this.getParsed(t),s.raw=n.data[t],s.index=s.dataIndex=t}else s=this.$context||(this.$context=function(t,e){return ze(t,{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:"default",type:"dataset"})}(this.chart.getContext(),this.index)),s.dataset=n,s.index=s.datasetIndex=this.index;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e="default",i){const n="active"===e,s=this._cachedDataOpts,o=t+"-"+e,r=s[o],a=this.enableOptionSharing&&at(i);if(r)return vn(r,a);const l=this.chart.config,c=l.datasetElementScopeKeys(this._type,t),h=n?[`${t}Hover`,"hover",t,""]:[t,""],d=l.getOptionScopes(this.getDataset(),c),u=Object.keys(gt.elements[t]),f=l.resolveNamedOptions(d,u,(()=>this.getContext(i,n)),h);return f.$shared&&(f.$shared=a,s[o]=Object.freeze(vn(f,a))),f}_resolveAnimations(t,e,i){const n=this.chart,s=this._cachedDataOpts,o=`animation-${e}`,r=s[o];if(r)return r;let a;if(!1!==n.options.animation){const n=this.chart.config,s=n.datasetAnimationScopeKeys(this._type,e),o=n.getOptionScopes(this.getDataset(),s);a=n.createResolver(o,this.getContext(t,i,e))}const l=new hn(n,a&&a.animations);return a&&a._cacheable&&(s[o]=Object.freeze(l)),l}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||_n(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){_n(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!_n(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const s=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(s)||s})}removeHoverStyle(t,e,i){this._setStyle(t,i,"active",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,"active",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!0)}_resyncElements(t){const e=this._data,i=this._cachedMeta.data;for(const[t,e,i]of this._syncList)this[t](e,i);this._syncList=[];const n=i.length,s=e.length,o=Math.min(s,n);o&&this.parse(0,o),s>n?this._insertElements(n,s-n,t):s<n&&this._removeElements(s,n-s)}_insertElements(t,e,i=!0){const n=this._cachedMeta,s=n.data,o=t+e;let r;const a=t=>{for(t.length+=e,r=t.length-1;r>=o;r--)t[r]=t[r-e]};for(a(s),r=t;r<o;++r)s[r]=new this.dataElementType;this._parsing&&a(n._parsed),this.parse(t,e),i&&this.updateElements(s,t,e,"reset")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&xn(i,n)}i.data.splice(t,e)}_sync(t){if(this._parsing)this._syncList.push(t);else{const[e,i,n]=t;this[e](i,n)}this.chart._dataChanges.push([this.index,...t])}_onDataPush(){const t=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-t,t])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(t,e){e&&this._sync(["_removeElements",t,e]);const i=arguments.length-2;i&&this._sync(["_insertElements",t,i])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}kn.defaults={},kn.prototype.datasetElementType=null,kn.prototype.dataElementType=null;class wn{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps(["x","y"],t);return{x:e,y:i}}hasValue(){return Tt(this.x)&&Tt(this.y)}getProps(t,e){const i=this.$animations;if(!e||!i)return this;const n={};return t.forEach((t=>{n[t]=i[t]&&i[t].active()?i[t]._to:this[t]})),n}}wn.defaults={},wn.defaultRoutes=void 0;const Sn={values:t=>W(t)?t:""+t,numeric(t,e,i){if(0===t)return"0";const n=this.chart.options.locale;let s,o=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s="scientific"),o=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;return Math.abs(i)>=1&&t!==Math.floor(t)&&(i=t-Math.floor(t)),i}(t,i)}const r=St(Math.abs(o)),a=Math.max(Math.min(-1*Math.floor(r),20),0),l={notation:s,minimumFractionDigits:a,maximumFractionDigits:a};return Object.assign(l,this.options.ticks.format),Ti(t,n,l)},logarithmic(t,e,i){if(0===t)return"0";const n=t/Math.pow(10,Math.floor(St(t)));return 1===n||2===n||5===n?Sn.numeric.call(this,t,e,i):""}};var Cn={formatters:Sn};function Ln(t,e,i,n,s){const o=K(n,0),r=Math.min(K(s,t.length),t.length);let a,l,c,h=0;for(i=Math.ceil(i),s&&(a=s-n,i=a/Math.floor(a/i)),c=o;c<0;)h++,c=Math.round(o+h*i);for(l=Math.max(o,0);l<r;l++)l===c&&(e.push(t[l]),h++,c=Math.round(o+h*i))}gt.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:Cn.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),gt.route("scale.ticks","color","","color"),gt.route("scale.grid","color","","borderColor"),gt.route("scale.grid","borderColor","","borderColor"),gt.route("scale.title","color","","color"),gt.describe("scale",{_fallback:!1,_scriptable:t=>!t.startsWith("before")&&!t.startsWith("after")&&"callback"!==t&&"parser"!==t,_indexable:t=>"borderDash"!==t&&"tickBorderDash"!==t}),gt.describe("scales",{_fallback:"scale"}),gt.describe("scale.ticks",{_scriptable:t=>"backdropPadding"!==t&&"callback"!==t,_indexable:t=>"backdropPadding"!==t});const Mn=(t,e,i)=>"top"===e||"left"===e?t[e]+i:t[e]-i;function Tn(t,e){const i=[],n=t.length/e,s=t.length;let o=0;for(;o<s;o+=n)i.push(t[Math.floor(o)]);return i}function Dn(t,e,i){const n=t.ticks.length,s=Math.min(e,n-1),o=t._startPixel,r=t._endPixel,a=1e-6;let l,c=t.getPixelForTick(s);if(!(i&&(l=1===n?Math.max(c-o,r-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(s-1))/2,c+=s<e?l:-l,c<o-a||c>r+a)))return c}function An(t){return t.drawTicks?t.tickLength:0}function En(t,e){if(!t.display)return 0;const i=Be(t.font,e),n=Ie(t.padding);return(W(t.text)?t.text.length:1)*i.lineHeight+n.height}function Pn(t,e,i){let s=n(t);return(i&&"right"!==e||!i&&"right"===e)&&(s=(t=>"left"===t?"right":"right"===t?"left":t)(s)),s}class On extends wn{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){this.options=t.setContext(this.getContext()),this.axis=t.axis,this._userMin=this.parse(t.min),this._userMax=this.parse(t.max),this._suggestedMin=this.parse(t.suggestedMin),this._suggestedMax=this.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:n}=this;return t=$(t,Number.POSITIVE_INFINITY),e=$(e,Number.NEGATIVE_INFINITY),i=$(i,Number.POSITIVE_INFINITY),n=$(n,Number.NEGATIVE_INFINITY),{min:$(t,i),max:$(e,n),minDefined:V(t),maxDefined:V(e)}}getMinMax(t){let e,{min:i,max:n,minDefined:s,maxDefined:o}=this.getUserBounds();if(s&&o)return{min:i,max:n};const r=this.getMatchingVisibleMetas();for(let a=0,l=r.length;a<l;++a)e=r[a].controller.getMinMax(this,t),s||(i=Math.min(i,e.min)),o||(n=Math.max(n,e.max));return i=o&&i>n?n:i,n=s&&i>n?i:n,{min:$(i,$(n,i)),max:$(n,$(i,n))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){X(this.options.beforeUpdate,[this])}update(t,e,i){const{beginAtZero:n,grace:s,ticks:o}=this.options,r=o.sampleSize;this.beforeUpdate(),this.maxWidth=t,this.maxHeight=e,this._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+i.left+i.right:this.height+i.top+i.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=He(this,s,n),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const a=r<this.ticks.length;this._convertTicksToLabels(a?Tn(this.ticks,r):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),o.display&&(o.autoSkip||"auto"===o.source)&&(this.ticks=function(t,e){const i=t.options.ticks,n=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),s=t._maxLength/i;return Math.floor(Math.min(n,s))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],o=s.length,r=s[0],a=s[o-1],l=[];if(o>n)return function(t,e,i,n){let s,o=0,r=i[0];for(n=Math.ceil(n),s=0;s<t.length;s++)s===r&&(e.push(t[s]),o++,r=i[o*n])}(e,l,s,o/n),l;const c=function(t,e,i){const n=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!n)return Math.max(s,1);const o=Mt(n);for(let t=0,e=o.length-1;t<e;t++){const e=o[t];if(e>s)return e}return Math.max(s,1)}(s,e,n);if(o>0){let t,i;const n=o>1?Math.round((a-r)/(o-1)):null;for(Ln(e,l,c,z(n)?0:r-n,r),t=0,i=o-1;t<i;t++)Ln(e,l,c,s[t],s[t+1]);return Ln(e,l,c,a,z(n)?e.length:a+n),l}return Ln(e,l,c),l}(this,this.ticks),this._labelSizes=null),a&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let t,e,i=this.options.reverse;this.isHorizontal()?(t=this.left,e=this.right):(t=this.top,e=this.bottom,i=!i),this._startPixel=t,this._endPixel=e,this._reversePixels=i,this._length=e-t,this._alignToPixels=this.options.alignToPixels}afterUpdate(){X(this.options.afterUpdate,[this])}beforeSetDimensions(){X(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){X(this.options.afterSetDimensions,[this])}_callHooks(t){this.chart.notifyPlugins(t,this.getContext()),X(this.options[t],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){X(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this.options.ticks;let i,n,s;for(i=0,n=t.length;i<n;i++)s=t[i],s.label=X(e.callback,[s.value,i,t],this)}afterTickToLabelConversion(){X(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){X(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this.options,e=t.ticks,i=this.ticks.length,n=e.minRotation||0,s=e.maxRotation;let o,r,a,l=n;if(!this._isVisible()||!e.display||n>=s||i<=1||!this.isHorizontal())return void(this.labelRotation=n);const c=this._getLabelSizes(),h=c.widest.width,d=c.highest.height,u=Ht(this.chart.width-h,0,this.maxWidth);o=t.offset?this.maxWidth/i:u/(i-1),h+6>o&&(o=u/(i-(t.offset?.5:1)),r=this.maxHeight-An(t.grid)-e.padding-En(t.title,this.chart.options.font),a=Math.sqrt(h*h+d*d),l=Ot(Math.min(Math.asin(Ht((c.highest.height+6)/o,-1,1)),Math.asin(Ht(r/a,-1,1))-Math.asin(Ht(d/a,-1,1)))),l=Math.max(n,Math.min(s,l))),this.labelRotation=l}afterCalculateLabelRotation(){X(this.options.afterCalculateLabelRotation,[this])}beforeFit(){X(this.options.beforeFit,[this])}fit(){const t={width:0,height:0},{chart:e,options:{ticks:i,title:n,grid:s}}=this,o=this._isVisible(),r=this.isHorizontal();if(o){const o=En(n,e.options.font);if(r?(t.width=this.maxWidth,t.height=An(s)+o):(t.height=this.maxHeight,t.width=An(s)+o),i.display&&this.ticks.length){const{first:e,last:n,widest:s,highest:o}=this._getLabelSizes(),a=2*i.padding,l=Pt(this.labelRotation),c=Math.cos(l),h=Math.sin(l);if(r){const e=i.mirror?0:h*s.width+c*o.height;t.height=Math.min(this.maxHeight,t.height+e+a)}else{const e=i.mirror?0:c*s.width+h*o.height;t.width=Math.min(this.maxWidth,t.width+e+a)}this._calculatePadding(e,n,h,c)}}this._handleMargins(),r?(this.width=this._length=e.width-this._margins.left-this._margins.right,this.height=t.height):(this.width=t.width,this.height=this._length=e.height-this._margins.top-this._margins.bottom)}_calculatePadding(t,e,i,n){const{ticks:{align:s,padding:o},position:r}=this.options,a=0!==this.labelRotation,l="top"!==r&&"x"===this.axis;if(this.isHorizontal()){const r=this.getPixelForTick(0)-this.left,c=this.right-this.getPixelForTick(this.ticks.length-1);let h=0,d=0;a?l?(h=n*t.width,d=i*e.height):(h=i*t.height,d=n*e.width):"start"===s?d=e.width:"end"===s?h=t.width:(h=t.width/2,d=e.width/2),this.paddingLeft=Math.max((h-r+o)*this.width/(this.width-r),0),this.paddingRight=Math.max((d-c+o)*this.width/(this.width-c),0)}else{let i=e.height/2,n=t.height/2;"start"===s?(i=0,n=t.height):"end"===s&&(i=e.height,n=0),this.paddingTop=i+o,this.paddingBottom=n+o}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){X(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return"top"===e||"bottom"===e||"x"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){let e,i;for(this.beforeTickToLabelConversion(),this.generateTickLabels(t),e=0,i=t.length;e<i;e++)z(t[e].label)&&(t.splice(e,1),i--,e--);this.afterTickToLabelConversion()}_getLabelSizes(){let t=this._labelSizes;if(!t){const e=this.options.ticks.sampleSize;let i=this.ticks;e<i.length&&(i=Tn(i,e)),this._labelSizes=t=this._computeLabelSizes(i,i.length)}return t}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:n}=this,s=[],o=[];let r,a,l,c,h,d,u,f,p,g,m,y=0,b=0;for(r=0;r<e;++r){if(c=t[r].label,h=this._resolveTickFontOptions(r),i.font=d=h.string,u=n[d]=n[d]||{data:{},gc:[]},f=h.lineHeight,p=g=0,z(c)||W(c)){if(W(c))for(a=0,l=c.length;a<l;++a)m=c[a],z(m)||W(m)||(p=Vt(i,u.data,u.gc,p,m),g+=f)}else p=Vt(i,u.data,u.gc,p,c),g=f;s.push(p),o.push(g),y=Math.max(p,y),b=Math.max(g,b)}!function(t,e){G(t,(t=>{const i=t.gc,n=i.length/2;let s;if(n>e){for(s=0;s<n;++s)delete t.data[i[s]];i.splice(0,n)}}))}(n,e);const x=s.indexOf(y),_=o.indexOf(b),v=t=>({width:s[t]||0,height:o[t]||0});return{first:v(0),last:v(e-1),widest:v(x),highest:v(_),widths:s,heights:o}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){this._reversePixels&&(t=1-t);const e=this._startPixel+t*this._length;return zt(this._alignToPixels?Kt(this.chart,e,0):e)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this.ticks||[];if(t>=0&&t<e.length){const i=e[t];return i.$context||(i.$context=function(t,e,i){return ze(t,{tick:i,index:e,type:"tick"})}(this.getContext(),t,i))}return this.$context||(this.$context=ze(this.chart.getContext(),{scale:this,type:"scale"}))}_tickSize(){const t=this.options.ticks,e=Pt(this.labelRotation),i=Math.abs(Math.cos(e)),n=Math.abs(Math.sin(e)),s=this._getLabelSizes(),o=t.autoSkipPadding||0,r=s?s.widest.width+o:0,a=s?s.highest.height+o:0;return this.isHorizontal()?a*i>r*n?r/i:a/n:a*n<r*i?a/i:r/n}_isVisible(){const t=this.options.display;return"auto"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this.axis,i=this.chart,n=this.options,{grid:s,position:o}=n,r=s.offset,a=this.isHorizontal(),l=this.ticks.length+(r?1:0),c=An(s),h=[],d=s.setContext(this.getContext()),u=d.drawBorder?d.borderWidth:0,f=u/2,p=function(t){return Kt(i,t,u)};let g,m,y,b,x,_,v,k,w,S,C,L;if("top"===o)g=p(this.bottom),_=this.bottom-c,k=g-f,S=p(t.top)+f,L=t.bottom;else if("bottom"===o)g=p(this.top),S=t.top,L=p(t.bottom)-f,_=g+f,k=this.top+c;else if("left"===o)g=p(this.right),x=this.right-c,v=g-f,w=p(t.left)+f,C=t.right;else if("right"===o)g=p(this.left),w=t.left,C=p(t.right)-f,x=g+f,v=this.left+c;else if("x"===e){if("center"===o)g=p((t.top+t.bottom)/2+.5);else if(q(o)){const t=Object.keys(o)[0],e=o[t];g=p(this.chart.scales[t].getPixelForValue(e))}S=t.top,L=t.bottom,_=g+f,k=_+c}else if("y"===e){if("center"===o)g=p((t.left+t.right)/2);else if(q(o)){const t=Object.keys(o)[0],e=o[t];g=p(this.chart.scales[t].getPixelForValue(e))}x=g-f,v=x-c,w=t.left,C=t.right}const M=K(n.ticks.maxTicksLimit,l),T=Math.max(1,Math.ceil(l/M));for(m=0;m<l;m+=T){const t=s.setContext(this.getContext(m)),e=t.lineWidth,n=t.color,o=s.borderDash||[],l=t.borderDashOffset,c=t.tickWidth,d=t.tickColor,u=t.tickBorderDash||[],f=t.tickBorderDashOffset;y=Dn(this,m,r),void 0!==y&&(b=Kt(i,y,e),a?x=v=w=C=b:_=k=S=L=b,h.push({tx1:x,ty1:_,tx2:v,ty2:k,x1:w,y1:S,x2:C,y2:L,width:e,color:n,borderDash:o,borderDashOffset:l,tickWidth:c,tickColor:d,tickBorderDash:u,tickBorderDashOffset:f}))}return this._ticksLength=l,this._borderValue=g,h}_computeLabelItems(t){const e=this.axis,i=this.options,{position:n,ticks:s}=i,o=this.isHorizontal(),r=this.ticks,{align:a,crossAlign:l,padding:c,mirror:h}=s,d=An(i.grid),u=d+c,f=h?-c:u,p=-Pt(this.labelRotation),g=[];let m,y,b,x,_,v,k,w,S,C,L,M,T="middle";if("top"===n)v=this.bottom-f,k=this._getXAxisLabelAlignment();else if("bottom"===n)v=this.top+f,k=this._getXAxisLabelAlignment();else if("left"===n){const t=this._getYAxisLabelAlignment(d);k=t.textAlign,_=t.x}else if("right"===n){const t=this._getYAxisLabelAlignment(d);k=t.textAlign,_=t.x}else if("x"===e){if("center"===n)v=(t.top+t.bottom)/2+u;else if(q(n)){const t=Object.keys(n)[0],e=n[t];v=this.chart.scales[t].getPixelForValue(e)+u}k=this._getXAxisLabelAlignment()}else if("y"===e){if("center"===n)_=(t.left+t.right)/2-u;else if(q(n)){const t=Object.keys(n)[0],e=n[t];_=this.chart.scales[t].getPixelForValue(e)}k=this._getYAxisLabelAlignment(d).textAlign}"y"===e&&("start"===a?T="top":"end"===a&&(T="bottom"));const D=this._getLabelSizes();for(m=0,y=r.length;m<y;++m){b=r[m],x=b.label;const t=s.setContext(this.getContext(m));w=this.getPixelForTick(m)+s.labelOffset,S=this._resolveTickFontOptions(m),C=S.lineHeight,L=W(x)?x.length:1;const e=L/2,i=t.color,a=t.textStrokeColor,c=t.textStrokeWidth;let d;if(o?(_=w,M="top"===n?"near"===l||0!==p?-L*C+C/2:"center"===l?-D.highest.height/2-e*C+C:-D.highest.height+C/2:"near"===l||0!==p?C/2:"center"===l?D.highest.height/2-e*C:D.highest.height-L*C,h&&(M*=-1)):(v=w,M=(1-L)*C/2),t.showLabelBackdrop){const e=Ie(t.backdropPadding),i=D.heights[m],n=D.widths[m];let s=v+M-e.top,o=_-e.left;switch(T){case"middle":s-=i/2;break;case"bottom":s-=i}switch(k){case"center":o-=n/2;break;case"right":o-=n}d={left:o,top:s,width:n+e.width,height:i+e.height,color:t.backdropColor}}g.push({rotation:p,label:x,font:S,color:i,strokeColor:a,strokeWidth:c,textOffset:M,textAlign:k,textBaseline:T,translation:[_,v],backdrop:d})}return g}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Pt(this.labelRotation))return"top"===t?"left":"right";let i="center";return"start"===e.align?i="left":"end"===e.align&&(i="right"),i}_getYAxisLabelAlignment(t){const{position:e,ticks:{crossAlign:i,mirror:n,padding:s}}=this.options,o=t+s,r=this._getLabelSizes().widest.width;let a,l;return"left"===e?n?(l=this.right+s,"near"===i?a="left":"center"===i?(a="center",l+=r/2):(a="right",l+=r)):(l=this.right-o,"near"===i?a="right":"center"===i?(a="center",l-=r/2):(a="left",l=this.left)):"right"===e?n?(l=this.left+s,"near"===i?a="right":"center"===i?(a="center",l-=r/2):(a="left",l-=r)):(l=this.left+o,"near"===i?a="left":"center"===i?(a="center",l+=r/2):(a="right",l=this.right)):a="right",{textAlign:a,x:l}}_computeLabelArea(){if(this.options.ticks.mirror)return;const t=this.chart,e=this.options.position;return"left"===e||"right"===e?{top:0,left:this.left,bottom:t.height,right:this.right}:"top"===e||"bottom"===e?{top:this.top,left:0,bottom:this.bottom,right:t.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:s,height:o}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,s,o),t.restore())}getLineWidthForValue(t){const e=this.options.grid;if(!this._isVisible()||!e.display)return 0;const i=this.ticks.findIndex((e=>e.value===t));return i>=0?e.setContext(this.getContext(i)).lineWidth:0}drawGrid(t){const e=this.options.grid,i=this.ctx,n=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(t));let s,o;const r=(t,e,n)=>{n.width&&n.color&&(i.save(),i.lineWidth=n.width,i.strokeStyle=n.color,i.setLineDash(n.borderDash||[]),i.lineDashOffset=n.borderDashOffset,i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.stroke(),i.restore())};if(e.display)for(s=0,o=n.length;s<o;++s){const t=n[s];e.drawOnChartArea&&r({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),e.drawTicks&&r({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}}drawBorder(){const{chart:t,ctx:e,options:{grid:i}}=this,n=i.setContext(this.getContext()),s=i.drawBorder?n.borderWidth:0;if(!s)return;const o=i.setContext(this.getContext(0)).lineWidth,r=this._borderValue;let a,l,c,h;this.isHorizontal()?(a=Kt(t,this.left,s)-s/2,l=Kt(t,this.right,o)+o/2,c=h=r):(c=Kt(t,this.top,s)-s/2,h=Kt(t,this.bottom,o)+o/2,a=l=r),e.save(),e.lineWidth=n.borderWidth,e.strokeStyle=n.borderColor,e.beginPath(),e.moveTo(a,c),e.lineTo(l,h),e.stroke(),e.restore()}drawLabels(t){if(!this.options.ticks.display)return;const e=this.ctx,i=this._computeLabelArea();i&&Gt(e,i);const n=this._labelItems||(this._labelItems=this._computeLabelItems(t));let s,o;for(s=0,o=n.length;s<o;++s){const t=n[s],i=t.font,o=t.label;t.backdrop&&(e.fillStyle=t.backdrop.color,e.fillRect(t.backdrop.left,t.backdrop.top,t.backdrop.width,t.backdrop.height)),te(e,o,0,t.textOffset,i,t)}i&&Qt(e)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:n}}=this;if(!i.display)return;const o=Be(i.font),r=Ie(i.padding),a=i.align;let l=o.lineHeight/2;"bottom"===e||"center"===e||q(e)?(l+=r.bottom,W(i.text)&&(l+=o.lineHeight*(i.text.length-1))):l+=r.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,n){const{top:o,left:r,bottom:a,right:l,chart:c}=t,{chartArea:h,scales:d}=c;let u,f,p,g=0;const m=a-o,y=l-r;if(t.isHorizontal()){if(f=s(n,r,l),q(i)){const t=Object.keys(i)[0],n=i[t];p=d[t].getPixelForValue(n)+m-e}else p="center"===i?(h.bottom+h.top)/2+m-e:Mn(t,i,e);u=l-r}else{if(q(i)){const t=Object.keys(i)[0],n=i[t];f=d[t].getPixelForValue(n)-y+e}else f="center"===i?(h.left+h.right)/2-y+e:Mn(t,i,e);p=s(n,a,o),g="left"===i?-vt:vt}return{titleX:f,titleY:p,maxWidth:u,rotation:g}}(this,l,e,a);te(t,i.text,0,0,o,{color:i.color,maxWidth:d,rotation:u,textAlign:Pn(a,e,n),textBaseline:"middle",translation:[c,h]})}draw(t){this._isVisible()&&(this.drawBackground(),this.drawGrid(t),this.drawBorder(),this.drawTitle(),this.drawLabels(t))}_layers(){const t=this.options,e=t.ticks&&t.ticks.z||0,i=K(t.grid&&t.grid.z,-1);return this._isVisible()&&this.draw===On.prototype.draw?[{z:i,draw:t=>{this.drawBackground(),this.drawGrid(t),this.drawTitle()}},{z:i+1,draw:()=>{this.drawBorder()}},{z:e,draw:t=>{this.drawLabels(t)}}]:[{z:e,draw:t=>{this.draw(t)}}]}getMatchingVisibleMetas(t){const e=this.chart.getSortedVisibleDatasetMetas(),i=this.axis+"AxisID",n=[];let s,o;for(s=0,o=e.length;s<o;++s){const o=e[s];o[i]!==this.id||t&&o.type!==t||n.push(o)}return n}_resolveTickFontOptions(t){return Be(this.options.ticks.setContext(this.getContext(t)).font)}_maxDigits(){const t=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/t}}class jn{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=Object.getPrototypeOf(t);let i;(function(t){return"id"in t&&"defaults"in t})(e)&&(i=this.register(e));const n=this.items,s=t.id,o=this.scope+"."+s;if(!s)throw new Error("class does not have id: "+t);return s in n||(n[s]=t,function(t,e,i){const n=et(Object.create(null),[i?gt.get(i):{},gt.get(e),t.defaults]);gt.set(e,n),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const n=i.split("."),s=n.pop(),o=[t].concat(n).join("."),r=e[i].split("."),a=r.pop(),l=r.join(".");gt.route(o,s,l,a)}))}(e,t.defaultRoutes),t.descriptors&&gt.describe(e,t.descriptors)}(t,o,i),this.override&&gt.override(t.id,t.overrides)),o}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,n=this.scope;i in e&&delete e[i],n&&i in gt[n]&&(delete gt[n][i],this.override&&delete dt[i])}}var Rn=new class{constructor(){this.controllers=new jn(kn,"datasets",!0),this.elements=new jn(wn,"elements"),this.plugins=new jn(Object,"plugins"),this.scales=new jn(On,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each("register",t)}remove(...t){this._each("unregister",t)}addControllers(...t){this._each("register",t,this.controllers)}addElements(...t){this._each("register",t,this.elements)}addPlugins(...t){this._each("register",t,this.plugins)}addScales(...t){this._each("register",t,this.scales)}getController(t){return this._get(t,this.controllers,"controller")}getElement(t){return this._get(t,this.elements,"element")}getPlugin(t){return this._get(t,this.plugins,"plugin")}getScale(t){return this._get(t,this.scales,"scale")}removeControllers(...t){this._each("unregister",t,this.controllers)}removeElements(...t){this._each("unregister",t,this.elements)}removePlugins(...t){this._each("unregister",t,this.plugins)}removeScales(...t){this._each("unregister",t,this.scales)}_each(t,e,i){[...e].forEach((e=>{const n=i||this._getRegistryForType(e);i||n.isForType(e)||n===this.plugins&&e.id?this._exec(t,n,e):G(e,(e=>{const n=i||this._getRegistryForType(e);this._exec(t,n,e)}))}))}_exec(t,e,i){const n=rt(t);X(i["before"+n],[],i),e[t](i),X(i["after"+n],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('"'+t+'" is not a registered '+i+".");return n}};class Nn{constructor(){this._init=[]}notify(t,e,i,n){"beforeInit"===e&&(this._init=this._createDescriptors(t,!0),this._notify(this._init,t,"install"));const s=n?this._descriptors(t).filter(n):this._descriptors(t),o=this._notify(s,t,e,i);return"afterDestroy"===e&&(this._notify(s,t,"stop"),this._notify(this._init,t,"uninstall")),o}_notify(t,e,i,n){n=n||{};for(const s of t){const t=s.plugin;if(!1===X(t[i],[e,n,s.options],t)&&n.cancelable)return!1}return!0}invalidate(){z(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,n=K(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Rn.plugins.items);for(let t=0;t<i.length;t++)e.push(Rn.getPlugin(i[t]));const n=t.plugins||[];for(let t=0;t<n.length;t++){const i=n[t];-1===e.indexOf(i)&&e.push(i)}return e}(i);return!1!==n||e?function(t,e,i,n){const s=[],o=t.getContext();for(let r=0;r<e.length;r++){const a=e[r],l=In(i[a.id],n);null!==l&&s.push({plugin:a,options:Bn(t.config,a,l,o)})}return s}(t,s,n,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,"stop"),this._notify(n(i,e),t,"start")}}function In(t,e){return e||!1!==t?!0===t?{}:t:null}function Bn(t,e,i,n){const s=t.pluginScopeKeys(e),o=t.getOptionScopes(i,s);return t.createResolver(o,n,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function Fn(t,e){const i=gt.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||"x"}function Hn(t,e){return"x"===t||"y"===t?t:e.axis||("top"===(i=e.position)||"bottom"===i?"x":"left"===i||"right"===i?"y":void 0)||t.charAt(0).toLowerCase();var i}function zn(t){const e=t.options||(t.options={});e.plugins=K(e.plugins,{}),e.scales=function(t,e){const i=dt[t.type]||{scales:{}},n=e.scales||{},s=Fn(t.type,e),o=Object.create(null),r=Object.create(null);return Object.keys(n).forEach((t=>{const e=n[t];if(!q(e))return console.error(`Invalid scale configuration for scale: ${t}`);if(e._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${t}`);const a=Hn(t,e),l=function(t,e){return t===e?"_index_":"_value_"}(a,s),c=i.scales||{};o[a]=o[a]||t,r[t]=it(Object.create(null),[{axis:a},e,c[a],c[l]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,a=i.indexAxis||Fn(s,e),l=(dt[s]||{}).scales||{};Object.keys(l).forEach((t=>{const e=function(t,e){let i=t;return"_index_"===t?i=e:"_value_"===t&&(i="x"===e?"y":"x"),i}(t,a),s=i[e+"AxisID"]||o[e]||e;r[s]=r[s]||Object.create(null),it(r[s],[{axis:e},n[s],l[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];it(e,[gt.scales[e.type],gt.scale])})),r}(t,e)}function Wn(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const qn=new Map,Vn=new Set;function $n(t,e){let i=qn.get(t);return i||(i=e(),qn.set(t,i),Vn.add(i)),i}const Kn=(t,e,i)=>{const n=ot(e,i);void 0!==n&&t.add(n)};class Un{constructor(t){this._config=function(t){return(t=t||{}).data=Wn(t.data),zn(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=Wn(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),zn(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return $n(t,(()=>[[`datasets.${t}`,""]]))}datasetAnimationScopeKeys(t,e){return $n(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,""]]))}datasetElementScopeKeys(t,e){return $n(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,""]]))}pluginScopeKeys(t){const e=t.id;return $n(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:n,type:s}=this,o=this._cachedScopes(t,i),r=o.get(e);if(r)return r;const a=new Set;e.forEach((e=>{t&&(a.add(t),e.forEach((e=>Kn(a,t,e)))),e.forEach((t=>Kn(a,n,t))),e.forEach((t=>Kn(a,dt[s]||{},t))),e.forEach((t=>Kn(a,gt,t))),e.forEach((t=>Kn(a,ut,t)))}));const l=Array.from(a);return 0===l.length&&l.push(Object.create(null)),Vn.has(e)&&o.set(e,l),l}chartOptionScopes(){const{options:t,type:e}=this;return[t,dt[e]||{},gt.datasets[e]||{},{type:e},gt,ut]}resolveNamedOptions(t,e,i,n=[""]){const s={$shared:!0},{resolver:o,subPrefixes:r}=Yn(this._resolverCache,t,n);let a=o;(function(t,e){const{isScriptable:i,isIndexable:n}=ii(t);for(const s of e){const e=i(s),o=n(s),r=(o||e)&&t[s];if(e&&(lt(r)||Xn(r))||o&&W(r))return!0}return!1})(o,e)&&(s.$shared=!1,a=ei(o,i=lt(i)?i():i,this.createResolver(t,i,r)));for(const t of e)s[t]=a[t];return s}createResolver(t,e,i=[""],n){const{resolver:s}=Yn(this._resolverCache,t,i);return q(e)?ei(s,e,void 0,n):s}}function Yn(t,e,i){let n=t.get(e);n||(n=new Map,t.set(e,n));const s=i.join();let o=n.get(s);return o||(o={resolver:ti(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes("hover")))},n.set(s,o)),o}const Xn=t=>q(t)&&Object.getOwnPropertyNames(t).reduce(((e,i)=>e||lt(t[i])),!1),Gn=["top","bottom","left","right","chartArea"];function Qn(t,e){return"top"===t||"bottom"===t||-1===Gn.indexOf(t)&&"x"===e}function Jn(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Zn(t){const e=t.chart,i=e.options.animation;e.notifyPlugins("afterRender"),X(i&&i.onComplete,[t],e)}function ts(t){const e=t.chart,i=e.options.animation;X(i&&i.onProgress,[t],e)}function es(t){return de()&&"string"==typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const is={},ns=t=>{const e=es(t);return Object.values(is).filter((t=>t.canvas===e)).pop()};function ss(t,e,i){const n=Object.keys(t);for(const s of n){const n=+s;if(n>=e){const o=t[s];delete t[s],(i>0||n>e)&&(t[n+i]=o)}}}class os{constructor(t,e){const n=this.config=new Un(e),s=es(t),o=ns(s);if(o)throw new Error("Canvas is already in use. Chart with ID '"+o.id+"' must be destroyed before the canvas can be reused.");const a=n.createResolver(n.chartOptionScopes(),this.getContext());this.platform=new(n.platform||sn(s)),this.platform.updateConfig(n);const l=this.platform.acquireContext(s,a.aspectRatio),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;this.id=H(),this.ctx=l,this.canvas=c,this.width=d,this.height=h,this._options=a,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new Nn,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=i((t=>this.update(t)),a.resizeDelay||0),this._dataChanges=[],is[this.id]=this,l&&c?(r.listen(this,"complete",Zn),r.listen(this,"progress",ts),this._initialize(),this.attached&&this.update()):console.error("Failed to create chart: can't acquire context from the given item")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:n,_aspectRatio:s}=this;return z(t)?e&&s?s:n?i/n:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():ve(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return Ut(this.canvas,this.ctx),this}stop(){return r.stop(this),this}resize(t,e){r.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this.options,n=this.canvas,s=i.maintainAspectRatio&&this.aspectRatio,o=this.platform.getMaximumSize(n,t,e,s),r=i.devicePixelRatio||this.platform.getDevicePixelRatio(),a=this.width?"resize":"attach";this.width=o.width,this.height=o.height,this._aspectRatio=this.aspectRatio,ve(this,r,!0)&&(this.notifyPlugins("resize",{size:o}),X(i.onResize,[this,o],this),this.attached&&this._doResize(a)&&this.render())}ensureScalesHaveIDs(){G(this.options.scales||{},((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this.options,e=t.scales,i=this.scales,n=Object.keys(i).reduce(((t,e)=>(t[e]=!1,t)),{});let s=[];e&&(s=s.concat(Object.keys(e).map((t=>{const i=e[t],n=Hn(t,i),s="r"===n,o="x"===n;return{options:i,dposition:s?"chartArea":o?"bottom":"left",dtype:s?"radialLinear":o?"category":"linear"}})))),G(s,(e=>{const s=e.options,o=s.id,r=Hn(o,s),a=K(s.type,e.dtype);void 0!==s.position&&Qn(s.position,r)===Qn(e.dposition)||(s.position=e.dposition),n[o]=!0;let l=null;o in i&&i[o].type===a?l=i[o]:(l=new(Rn.getScale(a))({id:o,type:a,ctx:this.ctx,chart:this}),i[l.id]=l),l.init(s,t)})),G(n,((t,e)=>{t||delete i[e]})),G(i,(t=>{Ze.configure(this,t,t.options),Ze.addBox(this,t)}))}_updateMetasets(){const t=this._metasets,e=this.data.datasets.length,i=t.length;if(t.sort(((t,e)=>t.index-e.index)),i>e){for(let t=e;t<i;++t)this._destroyDatasetMeta(t);t.splice(e,i-e)}this._sortedMetasets=t.slice(0).sort(Jn("order","index"))}_removeUnreferencedMetasets(){const{_metasets:t,data:{datasets:e}}=this;t.length>e.length&&delete this._stacks,t.forEach(((t,i)=>{0===e.filter((e=>e===t._dataset)).length&&this._destroyDatasetMeta(i)}))}buildOrUpdateControllers(){const t=[],e=this.data.datasets;let i,n;for(this._removeUnreferencedMetasets(),i=0,n=e.length;i<n;i++){const n=e[i];let s=this.getDatasetMeta(i);const o=n.type||this.config.type;if(s.type&&s.type!==o&&(this._destroyDatasetMeta(i),s=this.getDatasetMeta(i)),s.type=o,s.indexAxis=n.indexAxis||Fn(o,this.options),s.order=n.order||0,s.index=i,s.label=""+n.label,s.visible=this.isDatasetVisible(i),s.controller)s.controller.updateIndex(i),s.controller.linkScales();else{const e=Rn.getController(o),{datasetElementType:n,dataElementType:r}=gt.datasets[o];Object.assign(e.prototype,{dataElementType:Rn.getElement(r),datasetElementType:n&&Rn.getElement(n)}),s.controller=new e(this,i),t.push(s.controller)}}return this._updateMetasets(),t}_resetElements(){G(this.data.datasets,((t,e)=>{this.getDatasetMeta(e).controller.reset()}),this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(t){const e=this.config;e.update();const i=this._options=e.createResolver(e.chartOptionScopes(),this.getContext()),n=this._animationsDisabled=!i.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),!1===this.notifyPlugins("beforeUpdate",{mode:t,cancelable:!0}))return;const s=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let o=0;for(let t=0,e=this.data.datasets.length;t<e;t++){const{controller:e}=this.getDatasetMeta(t),i=!n&&-1===s.indexOf(e);e.buildOrUpdateElements(i),o=Math.max(+e.getMaxOverflow(),o)}o=this._minPadding=i.layout.autoPadding?o:0,this._updateLayout(o),n||G(s,(t=>{t.reset()})),this._updateDatasets(t),this.notifyPlugins("afterUpdate",{mode:t}),this._layers.sort(Jn("z","_idx"));const{_active:r,_lastEvent:a}=this;a?this._eventHandler(a,!0):r.length&&this._updateHoverStyles(r,r,!0),this.render()}_updateScales(){G(this.scales,(t=>{Ze.removeBox(this,t)})),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const t=this.options,e=new Set(Object.keys(this._listeners)),i=new Set(t.events);ct(e,i)&&!!this._responsiveListeners===t.responsive||(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:t}=this,e=this._getUniformDataChanges()||[];for(const{method:i,start:n,count:s}of e)ss(t,n,"_removeElements"===i?-s:s)}_getUniformDataChanges(){const t=this._dataChanges;if(!t||!t.length)return;this._dataChanges=[];const e=this.data.datasets.length,i=e=>new Set(t.filter((t=>t[0]===e)).map(((t,e)=>e+","+t.splice(1).join(",")))),n=i(0);for(let t=1;t<e;t++)if(!ct(n,i(t)))return;return Array.from(n).map((t=>t.split(","))).map((t=>({method:t[1],start:+t[2],count:+t[3]})))}_updateLayout(t){if(!1===this.notifyPlugins("beforeLayout",{cancelable:!0}))return;Ze.update(this,this.width,this.height,t);const e=this.chartArea,i=e.width<=0||e.height<=0;this._layers=[],G(this.boxes,(t=>{i&&"chartArea"===t.position||(t.configure&&t.configure(),this._layers.push(...t._layers()))}),this),this._layers.forEach(((t,e)=>{t._idx=e})),this.notifyPlugins("afterLayout")}_updateDatasets(t){if(!1!==this.notifyPlugins("beforeDatasetsUpdate",{mode:t,cancelable:!0})){for(let t=0,e=this.data.datasets.length;t<e;++t)this.getDatasetMeta(t).controller.configure();for(let e=0,i=this.data.datasets.length;e<i;++e)this._updateDataset(e,lt(t)?t({datasetIndex:e}):t);this.notifyPlugins("afterDatasetsUpdate",{mode:t})}}_updateDataset(t,e){const i=this.getDatasetMeta(t),n={meta:i,index:t,mode:e,cancelable:!0};!1!==this.notifyPlugins("beforeDatasetUpdate",n)&&(i.controller._update(e),n.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",n))}render(){!1!==this.notifyPlugins("beforeRender",{cancelable:!0})&&(r.has(this)?this.attached&&!r.running(this)&&r.start(this):(this.draw(),Zn({chart:this})))}draw(){let t;if(this._resizeBeforeDraw){const{width:t,height:e}=this._resizeBeforeDraw;this._resize(t,e),this._resizeBeforeDraw=null}if(this.clear(),this.width<=0||this.height<=0)return;if(!1===this.notifyPlugins("beforeDraw",{cancelable:!0}))return;const e=this._layers;for(t=0;t<e.length&&e[t].z<=0;++t)e[t].draw(this.chartArea);for(this._drawDatasets();t<e.length;++t)e[t].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,s;for(n=0,s=e.length;n<s;++n){const s=e[n];t&&!s.visible||i.push(s)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(!1===this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0}))return;const t=this.getSortedVisibleDatasetMetas();for(let e=t.length-1;e>=0;--e)this._drawDataset(t[e]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(t){const e=this.ctx,i=t._clip,n=!i.disabled,s=this.chartArea,o={meta:t,index:t.index,cancelable:!0};!1!==this.notifyPlugins("beforeDatasetDraw",o)&&(n&&Gt(e,{left:!1===i.left?0:s.left-i.left,right:!1===i.right?this.width:s.right+i.right,top:!1===i.top?0:s.top-i.top,bottom:!1===i.bottom?this.height:s.bottom+i.bottom}),t.controller.draw(),n&&Qt(e),o.cancelable=!1,this.notifyPlugins("afterDatasetDraw",o))}getElementsAtEventForMode(t,e,i,n){const s=Ae.modes[e];return"function"==typeof s?s(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1},i.push(n)),n}getContext(){return this.$context||(this.$context=ze(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return"boolean"==typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateVisibility(t,e,i){const n=i?"show":"hide",s=this.getDatasetMeta(t),o=s.controller._resolveAnimations(void 0,n);at(e)?(s.data[e].hidden=!i,this.update()):(this.setDatasetVisibility(t,i),o.update(s,{visible:i}),this.update((e=>e.datasetIndex===t?n:void 0)))}hide(t,e){this._updateVisibility(t,e,!1)}show(t,e){this._updateVisibility(t,e,!0)}_destroyDatasetMeta(t){const e=this._metasets[t];e&&e.controller&&e.controller._destroy(),delete this._metasets[t]}_stop(){let t,e;for(this.stop(),r.remove(this),t=0,e=this.data.datasets.length;t<e;++t)this._destroyDatasetMeta(t)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:t,ctx:e}=this;this._stop(),this.config.clearCache(),t&&(this.unbindEvents(),Ut(t,e),this.platform.releaseContext(e),this.canvas=null,this.ctx=null),this.notifyPlugins("destroy"),delete is[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this._listeners,e=this.platform,i=(i,n)=>{e.addEventListener(this,i,n),t[i]=n},n=(t,e,i)=>{t.offsetX=e,t.offsetY=i,this._eventHandler(t)};G(this.options.events,(t=>i(t,n)))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const t=this._responsiveListeners,e=this.platform,i=(i,n)=>{e.addEventListener(this,i,n),t[i]=n},n=(i,n)=>{t[i]&&(e.removeEventListener(this,i,n),delete t[i])},s=(t,e)=>{this.canvas&&this.resize(t,e)};let o;const r=()=>{n("attach",r),this.attached=!0,this.resize(),i("resize",s),i("detach",o)};o=()=>{this.attached=!1,n("resize",s),this._stop(),this._resize(0,0),i("attach",r)},e.isAttached(this.canvas)?r():o()}unbindEvents(){G(this._listeners,((t,e)=>{this.platform.removeEventListener(this,e,t)})),this._listeners={},G(this._responsiveListeners,((t,e)=>{this.platform.removeEventListener(this,e,t)})),this._responsiveListeners=void 0}updateHoverStyle(t,e,i){const n=i?"set":"remove";let s,o,r,a;for("dataset"===e&&(s=this.getDatasetMeta(t[0].datasetIndex),s.controller["_"+n+"DatasetHoverStyle"]()),r=0,a=t.length;r<a;++r){o=t[r];const e=o&&this.getDatasetMeta(o.datasetIndex).controller;e&&e[n+"HoverStyle"](o.element,o.datasetIndex,o.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this._active||[],i=t.map((({datasetIndex:t,index:e})=>{const i=this.getDatasetMeta(t);if(!i)throw new Error("No dataset found at index "+t);return{datasetIndex:t,element:i.data[e],index:e}}));!Q(i,e)&&(this._active=i,this._lastEvent=null,this._updateHoverStyles(i,e))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),o=s(e,t),r=i?t:s(t,e);o.length&&this.updateHoverStyle(o,n.mode,!1),r.length&&n.mode&&this.updateHoverStyle(r,n.mode,!0)}_eventHandler(t,e){const i={event:t,replay:e,cancelable:!0,inChartArea:Xt(t,this.chartArea,this._minPadding)},n=e=>(e.options.events||this.options.events).includes(t.native.type);if(!1===this.notifyPlugins("beforeEvent",i,n))return;const s=this._handleEvent(t,e,i.inChartArea);return i.cancelable=!1,this.notifyPlugins("afterEvent",i,n),(s||i.changed)&&this.render(),this}_handleEvent(t,e,i){const{_active:n=[],options:s}=this,o=e,r=this._getActiveElements(t,n,i,o),a=ht(t),l=function(t,e,i,n){return i&&"mouseout"!==t.type?n?e:t:null}(t,this._lastEvent,i,a);i&&(this._lastEvent=null,X(s.onHover,[t,r,this],this),a&&X(s.onClick,[t,r,this],this));const c=!Q(r,n);return(c||e)&&(this._active=r,this._updateHoverStyles(r,n,e)),this._lastEvent=l,c}_getActiveElements(t,e,i,n){if("mouseout"===t.type)return[];if(!i)return e;const s=this.options.hover;return this.getElementsAtEventForMode(t,s.mode,s,n)}}const rs=()=>G(os.instances,(t=>t._plugins.invalidate())),as=!0;function ls(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}Object.defineProperties(os,{defaults:{enumerable:as,value:gt},instances:{enumerable:as,value:is},overrides:{enumerable:as,value:dt},registry:{enumerable:as,value:Rn},version:{enumerable:as,value:"3.7.1"},getChart:{enumerable:as,value:ns},register:{enumerable:as,value:(...t)=>{Rn.add(...t),rs()}},unregister:{enumerable:as,value:(...t)=>{Rn.remove(...t),rs()}}});class cs{constructor(t){this.options=t||{}}formats(){return ls()}parse(t,e){return ls()}format(t,e){return ls()}add(t,e,i){return ls()}diff(t,e,i){return ls()}startOf(t,e,i){return ls()}endOf(t,e){return ls()}}cs.override=function(t){Object.assign(cs.prototype,t)};var hs={_date:cs};function ds(t){const e=t.iScale,i=function(t,e){if(!t._cache.$bar){const i=t.getMatchingVisibleMetas(e);let n=[];for(let e=0,s=i.length;e<s;e++)n=n.concat(i[e].controller.getAllParsedValues(t));t._cache.$bar=he(n.sort(((t,e)=>t-e)))}return t._cache.$bar}(e,t.type);let n,s,o,r,a=e._length;const l=()=>{32767!==o&&-32768!==o&&(at(r)&&(a=Math.min(a,Math.abs(o-r)||a)),r=o)};for(n=0,s=i.length;n<s;++n)o=e.getPixelForValue(i[n]),l();for(r=void 0,n=0,s=e.ticks.length;n<s;++n)o=e.getPixelForTick(n),l();return a}function us(t,e,i,n){return W(t)?function(t,e,i,n){const s=i.parse(t[0],n),o=i.parse(t[1],n),r=Math.min(s,o),a=Math.max(s,o);let l=r,c=a;Math.abs(r)>Math.abs(a)&&(l=a,c=r),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:s,end:o,min:r,max:a}}(t,e,i,n):e[i.axis]=i.parse(t,n),e}function fs(t,e,i,n){const s=t.iScale,o=t.vScale,r=s.getLabels(),a=s===o,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[s.axis]=a||s.parse(r[c],c),l.push(us(u,d,o,c));return l}function ps(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}function gs(t,e,i,n){let s=e.borderSkipped;const o={};if(!s)return void(t.borderSkipped=o);const{start:r,end:a,reverse:l,top:c,bottom:h}=function(t){let e,i,n,s,o;return t.horizontal?(e=t.base>t.x,i="left",n="right"):(e=t.base<t.y,i="bottom",n="top"),e?(s="end",o="start"):(s="start",o="end"),{start:i,end:n,reverse:e,top:s,bottom:o}}(t);"middle"===s&&i&&(t.enableBorderRadius=!0,(i._top||0)===n?s=c:(i._bottom||0)===n?s=h:(o[ms(h,r,a,l)]=!0,s=c)),o[ms(s,r,a,l)]=!0,t.borderSkipped=o}function ms(t,e,i,n){var s,o,r;return n?(r=i,t=ys(t=(s=t)===(o=e)?r:s===r?o:s,i,e)):t=ys(t,e,i),t}function ys(t,e,i){return"start"===t?e:"end"===t?i:t}function bs(t,{inflateAmount:e},i){t.inflateAmount="auto"===e?1===i?.33:0:e}class xs extends kn{parsePrimitiveData(t,e,i,n){return fs(t,e,i,n)}parseArrayData(t,e,i,n){return fs(t,e,i,n)}parseObjectData(t,e,i,n){const{iScale:s,vScale:o}=t,{xAxisKey:r="x",yAxisKey:a="y"}=this._parsing,l="x"===s.axis?r:a,c="x"===o.axis?r:a,h=[];let d,u,f,p;for(d=i,u=i+n;d<u;++d)p=e[d],f={},f[s.axis]=s.parse(ot(p,l),d),h.push(us(ot(p,c),f,o,d));return h}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const s=i._custom;s&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,s.min),t.max=Math.max(t.max,s.max))}getMaxOverflow(){return 0}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,s=this.getParsed(t),o=s._custom,r=ps(o)?"["+o.start+", "+o.end+"]":""+n.getLabelForValue(s[n.axis]);return{label:""+i.getLabelForValue(s[i.axis]),value:r}}initialize(){this.enableOptionSharing=!0,super.initialize(),this._cachedMeta.stack=this.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,n){const s="reset"===n,{index:o,_cachedMeta:{vScale:r}}=this,a=r.getBasePixel(),l=r.isHorizontal(),c=this._getRuler(),h=this.resolveDataElementOptions(e,n),d=this.getSharedOptions(h),u=this.includeOptions(n,d);this.updateSharedOptions(d,n,h);for(let h=e;h<e+i;h++){const e=this.getParsed(h),i=s||z(e[r.axis])?{base:a,head:a}:this._calculateBarValuePixels(h),f=this._calculateBarIndexPixels(h,c),p=(e._stacks||{})[r.axis],g={horizontal:l,base:i.base,enableBorderRadius:!p||ps(e._custom)||o===p._top||o===p._bottom,x:l?i.head:f.center,y:l?f.center:i.head,height:l?f.size:Math.abs(i.size),width:l?Math.abs(i.size):f.size};u&&(g.options=d||this.resolveDataElementOptions(h,t[h].active?"active":n));const m=g.options||t[h].options;gs(g,m,p,o),bs(g,m,c.ratio),this.updateElement(t[h],h,g,n)}}_getStacks(t,e){const i=this._cachedMeta.iScale,n=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,o=n.length,r=[];let a,l;for(a=0;a<o;++a)if(l=n[a],l.controller.options.grouped){if(void 0!==e){const t=l.controller.getParsed(e)[l.controller._cachedMeta.vScale.axis];if(z(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(l.stack)||void 0===s&&void 0===l.stack)&&r.push(l.stack),l.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,i){const n=this._getStacks(t,i),s=void 0!==e?n.indexOf(e):-1;return-1===s?n.length-1:s}_getRuler(){const t=this.options,e=this._cachedMeta,i=e.iScale,n=[];let s,o;for(s=0,o=e.data.length;s<o;++s)n.push(i.getPixelForValue(this.getParsed(s)[i.axis],s));const r=t.barThickness;return{min:r||ds(e),pixels:n,start:i._startPixel,end:i._endPixel,stackCount:this._getStackCount(),scale:i,grouped:t.grouped,ratio:r?1:t.categoryPercentage*t.barPercentage}}_calculateBarValuePixels(t){const{_cachedMeta:{vScale:e,_stacked:i},options:{base:n,minBarLength:s}}=this,o=n||0,r=this.getParsed(t),a=r._custom,l=ps(a);let c,h,d=r[e.axis],u=0,f=i?this.applyStack(e,r,i):d;f!==d&&(u=f-d,f=d),l&&(d=a.barStart,f=a.barEnd-a.barStart,0!==d&&Ct(d)!==Ct(a.barEnd)&&(u=0),u+=d);const p=z(n)||l?u:n;let g=e.getPixelForValue(p);if(c=this.chart.getDataVisibility(t)?e.getPixelForValue(u+f):g,h=c-g,Math.abs(h)<s&&(h=function(t,e,i){return 0!==t?Ct(t):(e.isHorizontal()?1:-1)*(e.min>=i?1:-1)}(h,e,o)*s,d===o&&(g-=h/2),c=g+h),g===e.getPixelForValue(o)){const t=Ct(h)*e.getLineWidthForValue(o)/2;g+=t,h-=t}return{size:h,base:g,head:c,center:c+h/2}}_calculateBarIndexPixels(t,e){const i=e.scale,n=this.options,s=n.skipNull,o=K(n.maxBarThickness,1/0);let r,a;if(e.grouped){const i=s?this._getStackCount(t):e.stackCount,l="flex"===n.barThickness?function(t,e,i,n){const s=e.pixels,o=s[t];let r=t>0?s[t-1]:null,a=t<s.length-1?s[t+1]:null;const l=i.categoryPercentage;null===r&&(r=o-(null===a?e.end-e.start:a-o)),null===a&&(a=o+o-r);const c=o-(o-Math.min(r,a))/2*l;return{chunk:Math.abs(a-r)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,n,i):function(t,e,i,n){const s=i.barThickness;let o,r;return z(s)?(o=e.min*i.categoryPercentage,r=i.barPercentage):(o=s*n,r=1),{chunk:o/n,ratio:r,start:e.pixels[t]-o/2}}(t,e,n,i),c=this._getStackIndex(this.index,this._cachedMeta.stack,s?t:void 0);r=l.start+l.chunk*c+l.chunk/2,a=Math.min(o,l.chunk*l.ratio)}else r=i.getPixelForValue(this.getParsed(t)[i.axis],t),a=Math.min(o,e.min*e.ratio);return{base:r-a/2,head:r+a/2,center:r,size:a}}draw(){const t=this._cachedMeta,e=t.vScale,i=t.data,n=i.length;let s=0;for(;s<n;++s)null!==this.getParsed(s)[e.axis]&&i[s].draw(this._ctx)}}xs.id="bar",xs.defaults={datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}},xs.overrides={scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}};class _s extends kn{initialize(){this.enableOptionSharing=!0,super.initialize()}parsePrimitiveData(t,e,i,n){const s=super.parsePrimitiveData(t,e,i,n);for(let t=0;t<s.length;t++)s[t]._custom=this.resolveDataElementOptions(t+i).radius;return s}parseArrayData(t,e,i,n){const s=super.parseArrayData(t,e,i,n);for(let t=0;t<s.length;t++){const n=e[i+t];s[t]._custom=K(n[2],this.resolveDataElementOptions(t+i).radius)}return s}parseObjectData(t,e,i,n){const s=super.parseObjectData(t,e,i,n);for(let t=0;t<s.length;t++){const n=e[i+t];s[t]._custom=K(n&&n.r&&+n.r,this.resolveDataElementOptions(t+i).radius)}return s}getMaxOverflow(){const t=this._cachedMeta.data;let e=0;for(let i=t.length-1;i>=0;--i)e=Math.max(e,t[i].size(this.resolveDataElementOptions(i))/2);return e>0&&e}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,s=this.getParsed(t),o=i.getLabelForValue(s.x),r=n.getLabelForValue(s.y),a=s._custom;return{label:e.label,value:"("+o+", "+r+(a?", "+a:"")+")"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const s="reset"===n,{iScale:o,vScale:r}=this._cachedMeta,a=this.resolveDataElementOptions(e,n),l=this.getSharedOptions(a),c=this.includeOptions(n,l),h=o.axis,d=r.axis;for(let a=e;a<e+i;a++){const e=t[a],i=!s&&this.getParsed(a),l={},u=l[h]=s?o.getPixelForDecimal(.5):o.getPixelForValue(i[h]),f=l[d]=s?r.getBasePixel():r.getPixelForValue(i[d]);l.skip=isNaN(u)||isNaN(f),c&&(l.options=this.resolveDataElementOptions(a,e.active?"active":n),s&&(l.options.radius=0)),this.updateElement(e,a,l,n)}this.updateSharedOptions(l,n,a)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let n=super.resolveDataElementOptions(t,e);n.$shared&&(n=Object.assign({},n,{$shared:!1}));const s=n.radius;return"active"!==e&&(n.radius=0),n.radius+=K(i&&i._custom,s),n}}_s.id="bubble",_s.defaults={datasetElementType:!1,dataElementType:"point",animations:{numbers:{type:"number",properties:["x","y","borderWidth","radius"]}}},_s.overrides={scales:{x:{type:"linear"},y:{type:"linear"}},plugins:{tooltip:{callbacks:{title:()=>""}}}};class vs extends kn{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;if(!1===this._parsing)n._parsed=i;else{let s,o,r=t=>+i[t];if(q(i[t])){const{key:t="value"}=this._parsing;r=e=>+ot(i[e],t)}for(s=t,o=t+e;s<o;++s)n._parsed[s]=r(s)}}_getRotation(){return Pt(this.options.rotation-90)}_getCircumference(){return Pt(this.options.circumference)}_getRotationExtents(){let t=yt,e=-yt;for(let i=0;i<this.chart.data.datasets.length;++i)if(this.chart.isDatasetVisible(i)){const n=this.chart.getDatasetMeta(i).controller,s=n._getRotation(),o=n._getCircumference();t=Math.min(t,s),e=Math.max(e,s+o)}return{rotation:t,circumference:e-t}}update(t){const e=this.chart,{chartArea:i}=e,n=this._cachedMeta,s=n.data,o=this.getMaxBorderWidth()+this.getMaxOffset(s)+this.options.spacing,r=Math.max((Math.min(i.width,i.height)-o)/2,0),a=Math.min(U(this.options.cutout,r),1),l=this._getRingWeight(this.index),{circumference:c,rotation:h}=this._getRotationExtents(),{ratioX:d,ratioY:u,offsetX:f,offsetY:p}=function(t,e,i){let n=1,s=1,o=0,r=0;if(e<yt){const a=t,l=a+e,c=Math.cos(a),h=Math.sin(a),d=Math.cos(l),u=Math.sin(l),f=(t,e,n)=>Ft(t,a,l,!0)?1:Math.max(e,e*i,n,n*i),p=(t,e,n)=>Ft(t,a,l,!0)?-1:Math.min(e,e*i,n,n*i),g=f(0,c,d),m=f(vt,h,u),y=p(mt,c,d),b=p(mt+vt,h,u);n=(g-y)/2,s=(m-b)/2,o=-(g+y)/2,r=-(m+b)/2}return{ratioX:n,ratioY:s,offsetX:o,offsetY:r}}(h,c,a),g=(i.width-o)/d,m=(i.height-o)/u,y=Math.max(Math.min(g,m)/2,0),b=Y(this.options.radius,y),x=(b-Math.max(b*a,0))/this._getVisibleDatasetWeightTotal();this.offsetX=f*b,this.offsetY=p*b,n.total=this.calculateTotal(),this.outerRadius=b-x*this._getRingWeightOffset(this.index),this.innerRadius=Math.max(this.outerRadius-x*l,0),this.updateElements(s,0,s.length,t)}_circumference(t,e){const i=this.options,n=this._cachedMeta,s=this._getCircumference();return e&&i.animation.animateRotate||!this.chart.getDataVisibility(t)||null===n._parsed[t]||n.data[t].hidden?0:this.calculateCircumference(n._parsed[t]*s/yt)}updateElements(t,e,i,n){const s="reset"===n,o=this.chart,r=o.chartArea,a=o.options.animation,l=(r.left+r.right)/2,c=(r.top+r.bottom)/2,h=s&&a.animateScale,d=h?0:this.innerRadius,u=h?0:this.outerRadius,f=this.resolveDataElementOptions(e,n),p=this.getSharedOptions(f),g=this.includeOptions(n,p);let m,y=this._getRotation();for(m=0;m<e;++m)y+=this._circumference(m,s);for(m=e;m<e+i;++m){const e=this._circumference(m,s),i=t[m],o={x:l+this.offsetX,y:c+this.offsetY,startAngle:y,endAngle:y+e,circumference:e,outerRadius:u,innerRadius:d};g&&(o.options=p||this.resolveDataElementOptions(m,i.active?"active":n)),y+=e,this.updateElement(i,m,o,n)}this.updateSharedOptions(p,n,f)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const s=t._parsed[i];null===s||isNaN(s)||!this.chart.getDataVisibility(i)||e[i].hidden||(n+=Math.abs(s))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?yt*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,n=i.data.labels||[],s=Ti(e._parsed[t],i.options.locale);return{label:n[t]||"",value:s}}getMaxBorderWidth(t){let e=0;const i=this.chart;let n,s,o,r,a;if(!t)for(n=0,s=i.data.datasets.length;n<s;++n)if(i.isDatasetVisible(n)){o=i.getDatasetMeta(n),t=o.data,r=o.controller;break}if(!t)return 0;for(n=0,s=t.length;n<s;++n)a=r.resolveDataElementOptions(n),"inner"!==a.borderAlign&&(e=Math.max(e,a.borderWidth||0,a.hoverBorderWidth||0));return e}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(K(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}vs.id="doughnut",vs.defaults={datasetElementType:!1,dataElementType:"arc",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:"number",properties:["circumference","endAngle","innerRadius","outerRadius","startAngle","x","y","offset","borderWidth","spacing"]}},cutout:"50%",rotation:0,circumference:360,radius:"100%",spacing:0,indexAxis:"r"},vs.descriptors={_scriptable:t=>"spacing"!==t,_indexable:t=>"spacing"!==t},vs.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:i}}=t.legend.options;return e.labels.map(((e,n)=>{const s=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:s.backgroundColor,strokeStyle:s.borderColor,lineWidth:s.borderWidth,pointStyle:i,hidden:!t.getDataVisibility(n),index:n}}))}return[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>"",label(t){let e=t.label;const i=": "+t.formattedValue;return W(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class ks extends kn{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this._cachedMeta,{dataset:i,data:n=[],_dataset:s}=e,o=this.chart._animationsDisabled;let{start:r,count:a}=function(t,e,i){const n=e.length;let s=0,o=n;if(t._sorted){const{iScale:r,_parsed:a}=t,l=r.axis,{min:c,max:h,minDefined:d,maxDefined:u}=r.getUserBounds();d&&(s=Ht(Math.min(se(a,r.axis,c).lo,i?n:se(e,l,r.getPixelForValue(c)).lo),0,n-1)),o=u?Ht(Math.max(se(a,r.axis,h).hi+1,i?0:se(e,l,r.getPixelForValue(h)).hi+1),s,n)-s:n-s}return{start:s,count:o}}(e,n,o);this._drawStart=r,this._drawCount=a,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,s={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=s,!0;const o=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,s),o}(e)&&(r=0,a=n.length),i._chart=this.chart,i._datasetIndex=this.index,i._decimated=!!s._decimated,i.points=n;const l=this.resolveDatasetElementOptions(t);this.options.showLine||(l.borderWidth=0),l.segment=this.options.segment,this.updateElement(i,void 0,{animated:!o,options:l},t),this.updateElements(n,r,a,t)}updateElements(t,e,i,n){const s="reset"===n,{iScale:o,vScale:r,_stacked:a,_dataset:l}=this._cachedMeta,c=this.resolveDataElementOptions(e,n),h=this.getSharedOptions(c),d=this.includeOptions(n,h),u=o.axis,f=r.axis,{spanGaps:p,segment:g}=this.options,m=Tt(p)?p:Number.POSITIVE_INFINITY,y=this.chart._animationsDisabled||s||"none"===n;let b=e>0&&this.getParsed(e-1);for(let c=e;c<e+i;++c){const e=t[c],i=this.getParsed(c),p=y?e:{},x=z(i[f]),_=p[u]=o.getPixelForValue(i[u],c),v=p[f]=s||x?r.getBasePixel():r.getPixelForValue(a?this.applyStack(r,i,a):i[f],c);p.skip=isNaN(_)||isNaN(v)||x,p.stop=c>0&&i[u]-b[u]>m,g&&(p.parsed=i,p.raw=l.data[c]),d&&(p.options=h||this.resolveDataElementOptions(c,e.active?"active":n)),y||this.updateElement(e,c,p,n),b=i}this.updateSharedOptions(h,n,c)}getMaxOverflow(){const t=this._cachedMeta,e=t.dataset,i=e.options&&e.options.borderWidth||0,n=t.data||[];if(!n.length)return i;const s=n[0].size(this.resolveDataElementOptions(0)),o=n[n.length-1].size(this.resolveDataElementOptions(n.length-1));return Math.max(i,s,o)/2}draw(){const t=this._cachedMeta;t.dataset.updateControlPoints(this.chart.chartArea,t.iScale.axis),super.draw()}}ks.id="line",ks.defaults={datasetElementType:"line",dataElementType:"point",showLine:!0,spanGaps:!1},ks.overrides={scales:{_index_:{type:"category"},_value_:{type:"linear"}}};class ws extends kn{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,n=i.data.labels||[],s=Ti(e._parsed[t].r,i.options.locale);return{label:n[t]||"",value:s}}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this.chart,e=t.chartArea,i=t.options,n=Math.min(e.right-e.left,e.bottom-e.top),s=Math.max(n/2,0),o=(s-Math.max(i.cutoutPercentage?s/100*i.cutoutPercentage:1,0))/t.getVisibleDatasetCount();this.outerRadius=s-o*this.index,this.innerRadius=this.outerRadius-o}updateElements(t,e,i,n){const s="reset"===n,o=this.chart,r=this.getDataset(),a=o.options.animation,l=this._cachedMeta.rScale,c=l.xCenter,h=l.yCenter,d=l.getIndexAngle(0)-.5*mt;let u,f=d;const p=360/this.countVisibleElements();for(u=0;u<e;++u)f+=this._computeAngle(u,n,p);for(u=e;u<e+i;u++){const e=t[u];let i=f,g=f+this._computeAngle(u,n,p),m=o.getDataVisibility(u)?l.getDistanceFromCenterForValue(r.data[u]):0;f=g,s&&(a.animateScale&&(m=0),a.animateRotate&&(i=g=d));const y={x:c,y:h,innerRadius:0,outerRadius:m,startAngle:i,endAngle:g,options:this.resolveDataElementOptions(u,e.active?"active":n)};this.updateElement(e,u,y,n)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Pt(this.resolveDataElementOptions(t,e).angle||i):0}}ws.id="polarArea",ws.defaults={dataElementType:"arc",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:"number",properties:["x","y","startAngle","endAngle","innerRadius","outerRadius"]}},indexAxis:"r",startAngle:0},ws.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:i}}=t.legend.options;return e.labels.map(((e,n)=>{const s=t.getDatasetMeta(0).controller.getStyle(n);return{text:e,fillStyle:s.backgroundColor,strokeStyle:s.borderColor,lineWidth:s.borderWidth,pointStyle:i,hidden:!t.getDataVisibility(n),index:n}}))}return[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>"",label:t=>t.chart.data.labels[t.dataIndex]+": "+t.formattedValue}}},scales:{r:{type:"radialLinear",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class Ss extends vs{}Ss.id="pie",Ss.defaults={cutout:0,rotation:0,circumference:360,radius:"100%"};class Cs extends kn{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:""+e.getLabelForValue(i[e.axis])}}update(t){const e=this._cachedMeta,i=e.dataset,n=e.data||[],s=e.iScale.getLabels();if(i.points=n,"resize"!==t){const e=this.resolveDatasetElementOptions(t);this.options.showLine||(e.borderWidth=0);const o={_loop:!0,_fullLoop:s.length===n.length,options:e};this.updateElement(i,void 0,o,t)}this.updateElements(n,0,n.length,t)}updateElements(t,e,i,n){const s=this.getDataset(),o=this._cachedMeta.rScale,r="reset"===n;for(let a=e;a<e+i;a++){const e=t[a],i=this.resolveDataElementOptions(a,e.active?"active":n),l=o.getPointPositionForValue(a,s.data[a]),c=r?o.xCenter:l.x,h=r?o.yCenter:l.y,d={x:c,y:h,angle:l.angle,skip:isNaN(c)||isNaN(h),options:i};this.updateElement(e,a,d,n)}}}Cs.id="radar",Cs.defaults={datasetElementType:"line",dataElementType:"point",indexAxis:"r",showLine:!0,elements:{line:{fill:"start"}}},Cs.overrides={aspectRatio:1,scales:{r:{type:"radialLinear"}}};class Ls extends ks{}Ls.id="scatter",Ls.defaults={showLine:!1,fill:!1},Ls.overrides={interaction:{mode:"point"},plugins:{tooltip:{callbacks:{title:()=>"",label:t=>"("+t.label+", "+t.formattedValue+")"}}},scales:{x:{type:"linear"},y:{type:"linear"}}};var Ms=Object.freeze({__proto__:null,BarController:xs,BubbleController:_s,DoughnutController:vs,LineController:ks,PolarAreaController:ws,PieController:Ss,RadarController:Cs,ScatterController:Ls});function Ts(t,e,i){const{startAngle:n,pixelMargin:s,x:o,y:r,outerRadius:a,innerRadius:l}=e;let c=s/a;t.beginPath(),t.arc(o,r,a,n-c,i+c),l>s?(c=s/l,t.arc(o,r,l,i+c,n-c,!0)):t.arc(o,r,s,i+vt,n-vt),t.closePath(),t.clip()}function Ds(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function As(t,e,i,n,s){const{x:o,y:r,startAngle:a,pixelMargin:l,innerRadius:c}=e,h=Math.max(e.outerRadius+n+i-l,0),d=c>0?c+n+i+l:0;let u=0;const f=s-a;if(n){const t=((c>0?c-n:0)+(h>0?h-n:0))/2;u=(f-(0!==t?f*t/(t+n):f))/2}const p=(f-Math.max(.001,f*h-i/mt)/h)/2,g=a+p+u,m=s-p-u,{outerStart:y,outerEnd:b,innerStart:x,innerEnd:_}=function(t,e,i,n){const s=je(t.options.borderRadius,["outerStart","outerEnd","innerStart","innerEnd"]),o=(i-e)/2,r=Math.min(o,n*e/2),a=t=>{const e=(i-Math.min(o,t))*n/2;return Ht(t,0,Math.min(o,e))};return{outerStart:a(s.outerStart),outerEnd:a(s.outerEnd),innerStart:Ht(s.innerStart,0,r),innerEnd:Ht(s.innerEnd,0,r)}}(e,d,h,m-g),v=h-y,k=h-b,w=g+y/v,S=m-b/k,C=d+x,L=d+_,M=g+x/C,T=m-_/L;if(t.beginPath(),t.arc(o,r,h,w,S),b>0){const e=Ds(k,S,o,r);t.arc(e.x,e.y,b,S,m+vt)}const D=Ds(L,m,o,r);if(t.lineTo(D.x,D.y),_>0){const e=Ds(L,T,o,r);t.arc(e.x,e.y,_,m+vt,T+Math.PI)}if(t.arc(o,r,d,m-_/d,g+x/d,!0),x>0){const e=Ds(C,M,o,r);t.arc(e.x,e.y,x,M+Math.PI,g-vt)}const A=Ds(v,g,o,r);if(t.lineTo(A.x,A.y),y>0){const e=Ds(v,w,o,r);t.arc(e.x,e.y,y,g-vt,w)}t.closePath()}class Es extends wn{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.getProps(["x","y"],i),{angle:s,distance:o}=Rt(n,{x:t,y:e}),{startAngle:r,endAngle:a,innerRadius:l,outerRadius:c,circumference:h}=this.getProps(["startAngle","endAngle","innerRadius","outerRadius","circumference"],i),d=this.options.spacing/2,u=K(h,a-r)>=yt||Ft(s,r,a),f=Wt(o,l+d,c+d);return u&&f}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:s,innerRadius:o,outerRadius:r}=this.getProps(["x","y","startAngle","endAngle","innerRadius","outerRadius","circumference"],t),{offset:a,spacing:l}=this.options,c=(n+s)/2,h=(o+r+l+a)/2;return{x:e+Math.cos(c)*h,y:i+Math.sin(c)*h}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const{options:e,circumference:i}=this,n=(e.offset||0)/2,s=(e.spacing||0)/2;if(this.pixelMargin="inner"===e.borderAlign?.33:0,this.fullCircles=i>yt?Math.floor(i/yt):0,0===i||this.innerRadius<0||this.outerRadius<0)return;t.save();let o=0;if(n){o=n/2;const e=(this.startAngle+this.endAngle)/2;t.translate(Math.cos(e)*o,Math.sin(e)*o),this.circumference>=mt&&(o=n)}t.fillStyle=e.backgroundColor,t.strokeStyle=e.borderColor;const r=function(t,e,i,n){const{fullCircles:s,startAngle:o,circumference:r}=e;let a=e.endAngle;if(s){As(t,e,i,n,o+yt);for(let e=0;e<s;++e)t.fill();isNaN(r)||(a=o+r%yt,r%yt==0&&(a+=yt))}return As(t,e,i,n,a),t.fill(),a}(t,this,o,s);(function(t,e,i,n,s){const{options:o}=e,{borderWidth:r,borderJoinStyle:a}=o,l="inner"===o.borderAlign;r&&(l?(t.lineWidth=2*r,t.lineJoin=a||"round"):(t.lineWidth=r,t.lineJoin=a||"bevel"),e.fullCircles&&function(t,e,i){const{x:n,y:s,startAngle:o,pixelMargin:r,fullCircles:a}=e,l=Math.max(e.outerRadius-r,0),c=e.innerRadius+r;let h;for(i&&Ts(t,e,o+yt),t.beginPath(),t.arc(n,s,c,o+yt,o,!0),h=0;h<a;++h)t.stroke();for(t.beginPath(),t.arc(n,s,l,o,o+yt),h=0;h<a;++h)t.stroke()}(t,e,l),l&&Ts(t,e,s),As(t,e,i,n,s),t.stroke())})(t,this,o,s,r),t.restore()}}function Ps(t,e,i=e){t.lineCap=K(i.borderCapStyle,e.borderCapStyle),t.setLineDash(K(i.borderDash,e.borderDash)),t.lineDashOffset=K(i.borderDashOffset,e.borderDashOffset),t.lineJoin=K(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=K(i.borderWidth,e.borderWidth),t.strokeStyle=K(i.borderColor,e.borderColor)}function Os(t,e,i){t.lineTo(i.x,i.y)}function js(t,e,i={}){const n=t.length,{start:s=0,end:o=n-1}=i,{start:r,end:a}=e,l=Math.max(s,r),c=Math.min(o,a),h=s<r&&o<r||s>a&&o>a;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function Rs(t,e,i,n){const{points:s,options:o}=e,{count:r,start:a,loop:l,ilen:c}=js(s,i,n),h=function(t){return t.stepped?Jt:t.tension||"monotone"===t.cubicInterpolationMode?Zt:Os}(o);let d,u,f,{move:p=!0,reverse:g}=n||{};for(d=0;d<=c;++d)u=s[(a+(g?c-d:d))%r],u.skip||(p?(t.moveTo(u.x,u.y),p=!1):h(t,f,u,g,o.stepped),f=u);return l&&(u=s[(a+(g?c:0))%r],h(t,f,u,g,o.stepped)),!!l}function Ns(t,e,i,n){const s=e.points,{count:o,start:r,ilen:a}=js(s,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,f,p,g,m=0,y=0;const b=t=>(r+(c?a-t:t))%o,x=()=>{f!==p&&(t.lineTo(m,p),t.lineTo(m,f),t.lineTo(m,g))};for(l&&(d=s[b(0)],t.moveTo(d.x,d.y)),h=0;h<=a;++h){if(d=s[b(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<f?f=i:i>p&&(p=i),m=(y*m+e)/++y):(x(),t.lineTo(e,i),u=n,y=0,f=p=i),g=i}x()}function Is(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return t._decimated||t._loop||e.tension||"monotone"===e.cubicInterpolationMode||e.stepped||i?Rs:Ns}Es.id="arc",Es.defaults={borderAlign:"center",borderColor:"#fff",borderJoinStyle:void 0,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:void 0},Es.defaultRoutes={backgroundColor:"backgroundColor"};const Bs="function"==typeof Path2D;class Fs extends wn{constructor(t){super(),this.animated=!0,this.options=void 0,this._chart=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,this._datasetIndex=void 0,t&&Object.assign(this,t)}updateControlPoints(t,e){const i=this.options;if((i.tension||"monotone"===i.cubicInterpolationMode)&&!i.stepped&&!this._pointsUpdated){const n=i.spanGaps?this._loop:this._fullLoop;xi(this._points,i,t,n,e),this._pointsUpdated=!0}}set points(t){this._points=t,delete this._segments,delete this._path,this._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Ni(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this.options,n=t[e],s=this.points,o=Ri(this,{property:e,start:n,end:n});if(!o.length)return;const r=[],a=function(t){return t.stepped?Ci:t.tension||"monotone"===t.cubicInterpolationMode?Li:Si}(i);let l,c;for(l=0,c=o.length;l<c;++l){const{start:c,end:h}=o[l],d=s[c],u=s[h];if(d===u){r.push(d);continue}const f=a(d,u,Math.abs((n-d[e])/(u[e]-d[e])),i.stepped);f[e]=t[e],r.push(f)}return 1===r.length?r[0]:r}pathSegment(t,e,i){return Is(this)(t,this,e,i)}path(t,e,i){const n=this.segments,s=Is(this);let o=this._loop;e=e||0,i=i||this.points.length-e;for(const r of n)o&=s(t,this,r,{start:e,end:e+i-1});return!!o}draw(t,e,i,n){const s=this.options||{};(this.points||[]).length&&s.borderWidth&&(t.save(),function(t,e,i,n){Bs&&!e.options.segment?function(t,e,i,n){let s=e._path;s||(s=e._path=new Path2D,e.path(s,i,n)&&s.closePath()),Ps(t,e.options),t.stroke(s)}(t,e,i,n):function(t,e,i,n){const{segments:s,options:o}=e,r=Is(e);for(const a of s)Ps(t,o,a.style),t.beginPath(),r(t,e,a,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}(t,this,i,n),t.restore()),this.animated&&(this._pointsUpdated=!1,this._path=void 0)}}function Hs(t,e,i,n){const s=t.options,{[i]:o}=t.getProps([i],n);return Math.abs(e-o)<s.radius+s.hitRadius}Fs.id="line",Fs.defaults={borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:"default",fill:!1,spanGaps:!1,stepped:!1,tension:0},Fs.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"},Fs.descriptors={_scriptable:!0,_indexable:t=>"borderDash"!==t&&"fill"!==t};class zs extends wn{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:s,y:o}=this.getProps(["x","y"],i);return Math.pow(t-s,2)+Math.pow(e-o,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return Hs(this,t,"x",e)}inYRange(t,e){return Hs(this,t,"y",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps(["x","y"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;return e=Math.max(e,e&&t.hoverRadius||0),2*(e+(e&&t.borderWidth||0))}draw(t,e){const i=this.options;this.skip||i.radius<.1||!Xt(this,e,this.size(i)/2)||(t.strokeStyle=i.borderColor,t.lineWidth=i.borderWidth,t.fillStyle=i.backgroundColor,Yt(t,i,this.x,this.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function Ws(t,e){const{x:i,y:n,base:s,width:o,height:r}=t.getProps(["x","y","base","width","height"],e);let a,l,c,h,d;return t.horizontal?(d=r/2,a=Math.min(i,s),l=Math.max(i,s),c=n-d,h=n+d):(d=o/2,a=i-d,l=i+d,c=Math.min(n,s),h=Math.max(n,s)),{left:a,top:c,right:l,bottom:h}}function qs(t,e,i,n){return t?0:Ht(e,i,n)}function Vs(t,e,i,n){const s=null===e,o=null===i,r=t&&!(s&&o)&&Ws(t,n);return r&&(s||Wt(e,r.left,r.right))&&(o||Wt(i,r.top,r.bottom))}function $s(t,e){t.rect(e.x,e.y,e.w,e.h)}function Ks(t,e,i={}){const n=t.x!==i.x?-e:0,s=t.y!==i.y?-e:0,o=(t.x+t.w!==i.x+i.w?e:0)-n,r=(t.y+t.h!==i.y+i.h?e:0)-s;return{x:t.x+n,y:t.y+s,w:t.w+o,h:t.h+r,radius:t.radius}}zs.id="point",zs.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:"circle",radius:3,rotation:0},zs.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};class Us extends wn{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,t&&Object.assign(this,t)}draw(t){const{inflateAmount:e,options:{borderColor:i,backgroundColor:n}}=this,{inner:s,outer:o}=function(t){const e=Ws(t),i=e.right-e.left,n=e.bottom-e.top,s=function(t,e,i){const n=t.options.borderWidth,s=t.borderSkipped,o=Re(n);return{t:qs(s.top,o.top,0,i),r:qs(s.right,o.right,0,e),b:qs(s.bottom,o.bottom,0,i),l:qs(s.left,o.left,0,e)}}(t,i/2,n/2),o=function(t,e,i){const{enableBorderRadius:n}=t.getProps(["enableBorderRadius"]),s=t.options.borderRadius,o=Ne(s),r=Math.min(e,i),a=t.borderSkipped,l=n||q(s);return{topLeft:qs(!l||a.top||a.left,o.topLeft,0,r),topRight:qs(!l||a.top||a.right,o.topRight,0,r),bottomLeft:qs(!l||a.bottom||a.left,o.bottomLeft,0,r),bottomRight:qs(!l||a.bottom||a.right,o.bottomRight,0,r)}}(t,i/2,n/2);return{outer:{x:e.left,y:e.top,w:i,h:n,radius:o},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:n-s.t-s.b,radius:{topLeft:Math.max(0,o.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,o.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,o.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,o.bottomRight-Math.max(s.b,s.r))}}}}(this),r=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?ie:$s;var a;t.save(),o.w===s.w&&o.h===s.h||(t.beginPath(),r(t,Ks(o,e,s)),t.clip(),r(t,Ks(s,-e,o)),t.fillStyle=i,t.fill("evenodd")),t.beginPath(),r(t,Ks(s,e)),t.fillStyle=n,t.fill(),t.restore()}inRange(t,e,i){return Vs(this,t,e,i)}inXRange(t,e){return Vs(this,t,null,e)}inYRange(t,e){return Vs(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:s}=this.getProps(["x","y","base","horizontal"],t);return{x:s?(e+n)/2:e,y:s?i:(i+n)/2}}getRange(t){return"x"===t?this.width/2:this.height/2}}Us.id="bar",Us.defaults={borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0},Us.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};var Ys=Object.freeze({__proto__:null,ArcElement:Es,LineElement:Fs,PointElement:zs,BarElement:Us});function Xs(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,"data",{value:e})}}function Gs(t){t.data.datasets.forEach((t=>{Xs(t)}))}var Qs={id:"decimation",defaults:{algorithm:"min-max",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Gs(t);const n=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:o,indexAxis:r}=e,a=t.getDatasetMeta(s),l=o||e.data;if("y"===Fe([r,t.options.indexAxis]))return;if("line"!==a.type)return;const c=t.scales[a.xAxisID];if("linear"!==c.type&&"time"!==c.type)return;if(t.options.parsing)return;let h,{start:d,count:u}=function(t,e){const i=e.length;let n,s=0;const{iScale:o}=t,{min:r,max:a,minDefined:l,maxDefined:c}=o.getUserBounds();return l&&(s=Ht(se(e,o.axis,r).lo,0,i-1)),n=c?Ht(se(e,o.axis,a).hi+1,s,i)-s:i-s,{start:s,count:n}}(a,l);if(u<=(i.threshold||4*n))Xs(e);else{switch(z(o)&&(e._data=l,delete e.data,Object.defineProperty(e,"data",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case"lttb":h=function(t,e,i,n,s){const o=s.samples||n;if(o>=i)return t.slice(e,e+i);const r=[],a=(i-2)/(o-2);let l=0;const c=e+i-1;let h,d,u,f,p,g=e;for(r[l++]=t[g],h=0;h<o-2;h++){let n,s=0,o=0;const c=Math.floor((h+1)*a)+1+e,m=Math.min(Math.floor((h+2)*a)+1,i)+e,y=m-c;for(n=c;n<m;n++)s+=t[n].x,o+=t[n].y;s/=y,o/=y;const b=Math.floor(h*a)+1+e,x=Math.min(Math.floor((h+1)*a)+1,i)+e,{x:_,y:v}=t[g];for(u=f=-1,n=b;n<x;n++)f=.5*Math.abs((_-s)*(t[n].y-v)-(_-t[n].x)*(o-v)),f>u&&(u=f,d=t[n],p=n);r[l++]=d,g=p}return r[l++]=t[c],r}(l,d,u,n,i);break;case"min-max":h=function(t,e,i,n){let s,o,r,a,l,c,h,d,u,f,p=0,g=0;const m=[],y=e+i-1,b=t[e].x,x=t[y].x-b;for(s=e;s<e+i;++s){o=t[s],r=(o.x-b)/x*n,a=o.y;const e=0|r;if(e===l)a<u?(u=a,c=s):a>f&&(f=a,h=s),p=(g*p+o.x)/++g;else{const i=s-1;if(!z(c)&&!z(h)){const e=Math.min(c,h),n=Math.max(c,h);e!==d&&e!==i&&m.push({...t[e],x:p}),n!==d&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==d&&m.push(t[i]),m.push(o),l=e,g=0,u=f=a,c=h=d=s}}return m}(l,d,u,n);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=h}}))},destroy(t){Gs(t)}};function Js(t,e,i){const n=function(t){const e=t.options,i=e.fill;let n=K(i&&i.target,i);return void 0===n&&(n=!!e.backgroundColor),!1!==n&&null!==n&&(!0===n?"origin":n)}(t);if(q(n))return!isNaN(n.value)&&n;let s=parseFloat(n);return V(s)&&Math.floor(s)===s?("-"!==n[0]&&"+"!==n[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):["origin","start","end","stack","shape"].indexOf(n)>=0&&n}class Zs{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:n,y:s,radius:o}=this;return e=e||{start:0,end:yt},t.arc(n,s,o,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,s=t.angle;return{x:e+Math.cos(s)*n,y:i+Math.sin(s)*n,angle:s}}}function to(t,e,i){for(;e>t;e--){const t=i[e];if(!isNaN(t.x)&&!isNaN(t.y))break}return e}function eo(t,e,i){const n=[];for(let s=0;s<i.length;s++){const o=i[s],{first:r,last:a,point:l}=io(o,e,"x");if(!(!l||r&&a))if(r)n.unshift(l);else if(t.push(l),!a)break}t.push(...n)}function io(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const s=n[i],o=t.segments,r=t.points;let a=!1,l=!1;for(let t=0;t<o.length;t++){const e=o[t],n=r[e.start][i],c=r[e.end][i];if(Wt(s,n,c)){a=s===n,l=s===c;break}}return{first:a,last:l,point:n}}function no(t){const{chart:e,fill:i,line:n}=t;if(V(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if("stack"===i)return function(t){const{scale:e,index:i,line:n}=t,s=[],o=n.segments,r=n.points,a=function(t,e){const i=[],n=t.getMatchingVisibleMetas("line");for(let t=0;t<n.length;t++){const s=n[t];if(s.index===e)break;s.hidden||i.unshift(s.dataset)}return i}(e,i);a.push(so({x:null,y:e.bottom},n));for(let t=0;t<o.length;t++){const e=o[t];for(let t=e.start;t<=e.end;t++)eo(s,r[t],a)}return new Fs({points:s,options:{}})}(t);if("shape"===i)return!0;const s=function(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,n=e.options,s=e.getLabels().length,o=[],r=n.reverse?e.max:e.min,a=n.reverse?e.min:e.max;let l,c,h;if(h="start"===i?r:"end"===i?a:q(i)?i.value:e.getBaseValue(),n.grid.circular)return c=e.getPointPositionForValue(0,r),new Zs({x:c.x,y:c.y,radius:e.getDistanceFromCenterForValue(h)});for(l=0;l<s;++l)o.push(e.getPointPositionForValue(l,h));return o}(t):function(t){const{scale:e={},fill:i}=t;let n,s=null;return"start"===i?s=e.bottom:"end"===i?s=e.top:q(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),V(s)?(n=e.isHorizontal(),{x:n?s:null,y:n?null:s}):null}(t)}(t);return s instanceof Zs?s:so(s,n)}function so(t,e){let i=[],n=!1;return W(t)?(n=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},s=e.points,o=[];return e.segments.forEach((({start:t,end:e})=>{e=to(t,e,s);const r=s[t],a=s[e];null!==n?(o.push({x:r.x,y:n}),o.push({x:a.x,y:n})):null!==i&&(o.push({x:i,y:r.y}),o.push({x:i,y:a.y}))})),o}(t,e),i.length?new Fs({points:i,options:{tension:0},_loop:n,_fullLoop:n}):null}function oo(t,e,i){let n=t[e].fill;const s=[e];let o;if(!i)return n;for(;!1!==n&&-1===s.indexOf(n);){if(!V(n))return n;if(o=t[n],!o)return!1;if(o.visible)return n;s.push(n),n=o.fill}return!1}function ro(t,e,i){const{segments:n,points:s}=e;let o=!0,r=!1;t.beginPath();for(const a of n){const{start:n,end:l}=a,c=s[n],h=s[to(n,l,s)];o?(t.moveTo(c.x,c.y),o=!1):(t.lineTo(c.x,i),t.lineTo(c.x,c.y)),r=!!e.pathSegment(t,a,{move:r}),r?t.closePath():t.lineTo(h.x,i)}t.lineTo(e.first().x,i),t.closePath(),t.clip()}function ao(t,e,i,n){if(n)return;let s=e[t],o=i[t];return"angle"===t&&(s=Bt(s),o=Bt(o)),{property:t,start:s,end:o}}function lo(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function co(t,e,i){const{top:n,bottom:s}=e.chart.chartArea,{property:o,start:r,end:a}=i||{};"x"===o&&(t.beginPath(),t.rect(r,n,a-r,s-n),t.clip())}function ho(t,e,i,n){const s=e.interpolate(i,n);s&&t.lineTo(s.x,s.y)}function uo(t,e){const{line:i,target:n,property:s,color:o,scale:r}=e,a=function(t,e,i){const n=t.segments,s=t.points,o=e.points,r=[];for(const t of n){let{start:n,end:a}=t;a=to(n,a,s);const l=ao(i,s[n],s[a],t.loop);if(!e.segments){r.push({source:t,target:l,start:s[n],end:s[a]});continue}const c=Ri(e,l);for(const e of c){const n=ao(i,o[e.start],o[e.end],e.loop),a=ji(t,s,n);for(const t of a)r.push({source:t,target:e,start:{[i]:lo(l,n,"start",Math.max)},end:{[i]:lo(l,n,"end",Math.min)}})}}return r}(i,n,s);for(const{source:e,target:l,start:c,end:h}of a){const{style:{backgroundColor:a=o}={}}=e,d=!0!==n;t.save(),t.fillStyle=a,co(t,r,d&&ao(s,c,h)),t.beginPath();const u=!!i.pathSegment(t,e);let f;if(d){u?t.closePath():ho(t,n,h,s);const e=!!n.pathSegment(t,l,{move:u,reverse:!0});f=u&&e,f||ho(t,n,c,s)}t.closePath(),t.fill(f?"evenodd":"nonzero"),t.restore()}}function fo(t,e,i){const n=no(e),{line:s,scale:o,axis:r}=e,a=s.options,l=a.fill,c=a.backgroundColor,{above:h=c,below:d=c}=l||{};n&&s.points.length&&(Gt(t,i),function(t,e){const{line:i,target:n,above:s,below:o,area:r,scale:a}=e,l=i._loop?"angle":e.axis;t.save(),"x"===l&&o!==s&&(ro(t,n,r.top),uo(t,{line:i,target:n,color:s,scale:a,property:l}),t.restore(),t.save(),ro(t,n,r.bottom)),uo(t,{line:i,target:n,color:o,scale:a,property:l}),t.restore()}(t,{line:s,target:n,above:h,below:d,area:i,scale:o,axis:r}),Qt(t))}var po={id:"filler",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,s=[];let o,r,a,l;for(r=0;r<n;++r)o=t.getDatasetMeta(r),a=o.dataset,l=null,a&&a.options&&a instanceof Fs&&(l={visible:t.isDatasetVisible(r),index:r,fill:Js(a,r,n),chart:t,axis:o.controller.options.indexAxis,scale:o.vScale,line:a}),o.$filler=l,s.push(l);for(r=0;r<n;++r)l=s[r],l&&!1!==l.fill&&(l.fill=oo(s,r,i.propagate))},beforeDraw(t,e,i){const n="beforeDraw"===i.drawTime,s=t.getSortedVisibleDatasetMetas(),o=t.chartArea;for(let e=s.length-1;e>=0;--e){const i=s[e].$filler;i&&(i.line.updateControlPoints(o,i.axis),n&&fo(t.ctx,i,o))}},beforeDatasetsDraw(t,e,i){if("beforeDatasetsDraw"!==i.drawTime)return;const n=t.getSortedVisibleDatasetMetas();for(let e=n.length-1;e>=0;--e){const i=n[e].$filler;i&&fo(t.ctx,i,t.chartArea)}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&"beforeDatasetDraw"===i.drawTime&&fo(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:"beforeDatasetDraw"}};const go=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class mo extends wn{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){this.maxWidth=t,this.maxHeight=e,this._margins=i,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const t=this.options.labels||{};let e=X(t.generateLabels,[this.chart],this)||[];t.filter&&(e=e.filter((e=>t.filter(e,this.chart.data)))),t.sort&&(e=e.sort(((e,i)=>t.sort(e,i,this.chart.data)))),this.options.reverse&&e.reverse(),this.legendItems=e}fit(){const{options:t,ctx:e}=this;if(!t.display)return void(this.width=this.height=0);const i=t.labels,n=Be(i.font),s=n.size,o=this._computeTitleHeight(),{boxWidth:r,itemHeight:a}=go(i,s);let l,c;e.font=n.string,this.isHorizontal()?(l=this.maxWidth,c=this._fitRows(o,s,r,a)+10):(c=this.maxHeight,l=this._fitCols(o,s,r,a)+10),this.width=Math.min(l,t.maxWidth||this.maxWidth),this.height=Math.min(c,t.maxHeight||this.maxHeight)}_fitRows(t,e,i,n){const{ctx:s,maxWidth:o,options:{labels:{padding:r}}}=this,a=this.legendHitBoxes=[],l=this.lineWidths=[0],c=n+r;let h=t;s.textAlign="left",s.textBaseline="middle";let d=-1,u=-c;return this.legendItems.forEach(((t,f)=>{const p=i+e/2+s.measureText(t.text).width;(0===f||l[l.length-1]+p+2*r>o)&&(h+=c,l[l.length-(f>0?0:1)]=0,u+=c,d++),a[f]={left:0,top:u,row:d,width:p,height:n},l[l.length-1]+=p+r})),h}_fitCols(t,e,i,n){const{ctx:s,maxHeight:o,options:{labels:{padding:r}}}=this,a=this.legendHitBoxes=[],l=this.columnSizes=[],c=o-t;let h=r,d=0,u=0,f=0,p=0;return this.legendItems.forEach(((t,o)=>{const g=i+e/2+s.measureText(t.text).width;o>0&&u+n+2*r>c&&(h+=d+r,l.push({width:d,height:u}),f+=d+r,p++,d=u=0),a[o]={left:f,top:u,col:p,width:g,height:n},d=Math.max(d,g),u+=n+r})),h+=d,l.push({width:d,height:u}),h}adjustHitBoxes(){if(!this.options.display)return;const t=this._computeTitleHeight(),{legendHitBoxes:e,options:{align:i,labels:{padding:n},rtl:o}}=this,r=Di(o,this.left,this.width);if(this.isHorizontal()){let o=0,a=s(i,this.left+n,this.right-this.lineWidths[o]);for(const l of e)o!==l.row&&(o=l.row,a=s(i,this.left+n,this.right-this.lineWidths[o])),l.top+=this.top+t+n,l.left=r.leftForLtr(r.x(a),l.width),a+=l.width+n}else{let o=0,a=s(i,this.top+t+n,this.bottom-this.columnSizes[o].height);for(const l of e)l.col!==o&&(o=l.col,a=s(i,this.top+t+n,this.bottom-this.columnSizes[o].height)),l.top=a,l.left+=this.left+n,l.left=r.leftForLtr(r.x(l.left),l.width),a+=l.height+n}}isHorizontal(){return"top"===this.options.position||"bottom"===this.options.position}draw(){if(this.options.display){const t=this.ctx;Gt(t,this),this._draw(),Qt(t)}}_draw(){const{options:t,columnSizes:e,lineWidths:i,ctx:n}=this,{align:r,labels:a}=t,l=gt.color,c=Di(t.rtl,this.left,this.width),h=Be(a.font),{color:d,padding:u}=a,f=h.size,p=f/2;let g;this.drawTitle(),n.textAlign=c.textAlign("left"),n.textBaseline="middle",n.lineWidth=.5,n.font=h.string;const{boxWidth:m,boxHeight:y,itemHeight:b}=go(a,f),x=this.isHorizontal(),_=this._computeTitleHeight();g=x?{x:s(r,this.left+u,this.right-i[0]),y:this.top+u+_,line:0}:{x:this.left+u,y:s(r,this.top+_+u,this.bottom-e[0].height),line:0},Ai(this.ctx,t.textDirection);const v=b+u;this.legendItems.forEach(((k,w)=>{n.strokeStyle=k.fontColor||d,n.fillStyle=k.fontColor||d;const S=n.measureText(k.text).width,C=c.textAlign(k.textAlign||(k.textAlign=a.textAlign)),L=m+p+S;let M=g.x,T=g.y;c.setWidth(this.width),x?w>0&&M+L+u>this.right&&(T=g.y+=v,g.line++,M=g.x=s(r,this.left+u,this.right-i[g.line])):w>0&&T+v>this.bottom&&(M=g.x=M+e[g.line].width+u,g.line++,T=g.y=s(r,this.top+_+u,this.bottom-e[g.line].height)),function(t,e,i){if(isNaN(m)||m<=0||isNaN(y)||y<0)return;n.save();const s=K(i.lineWidth,1);if(n.fillStyle=K(i.fillStyle,l),n.lineCap=K(i.lineCap,"butt"),n.lineDashOffset=K(i.lineDashOffset,0),n.lineJoin=K(i.lineJoin,"miter"),n.lineWidth=s,n.strokeStyle=K(i.strokeStyle,l),n.setLineDash(K(i.lineDash,[])),a.usePointStyle){const o={radius:m*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:s},r=c.xPlus(t,m/2);Yt(n,o,r,e+p)}else{const o=e+Math.max((f-y)/2,0),r=c.leftForLtr(t,m),a=Ne(i.borderRadius);n.beginPath(),Object.values(a).some((t=>0!==t))?ie(n,{x:r,y:o,w:m,h:y,radius:a}):n.rect(r,o,m,y),n.fill(),0!==s&&n.stroke()}n.restore()}(c.x(M),T,k),M=o(C,M+m+p,x?M+L:this.right,t.rtl),function(t,e,i){te(n,i.text,t,e+b/2,h,{strikethrough:i.hidden,textAlign:c.textAlign(i.textAlign)})}(c.x(M),T,k),x?g.x+=L+u:g.y+=v})),Ei(this.ctx,t.textDirection)}drawTitle(){const t=this.options,e=t.title,i=Be(e.font),o=Ie(e.padding);if(!e.display)return;const r=Di(t.rtl,this.left,this.width),a=this.ctx,l=e.position,c=i.size/2,h=o.top+c;let d,u=this.left,f=this.width;if(this.isHorizontal())f=Math.max(...this.lineWidths),d=this.top+h,u=s(t.align,u,this.right-f);else{const e=this.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+s(t.align,this.top,this.bottom-e-t.labels.padding-this._computeTitleHeight())}const p=s(l,u,u+f);a.textAlign=r.textAlign(n(l)),a.textBaseline="middle",a.strokeStyle=e.color,a.fillStyle=e.color,a.font=i.string,te(a,e.text,p,d,i)}_computeTitleHeight(){const t=this.options.title,e=Be(t.font),i=Ie(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){let i,n,s;if(Wt(t,this.left,this.right)&&Wt(e,this.top,this.bottom))for(s=this.legendHitBoxes,i=0;i<s.length;++i)if(n=s[i],Wt(t,n.left,n.left+n.width)&&Wt(e,n.top,n.top+n.height))return this.legendItems[i];return null}handleEvent(t){const e=this.options;if(!function(t,e){return!("mousemove"!==t||!e.onHover&&!e.onLeave)||!(!e.onClick||"click"!==t&&"mouseup"!==t)}(t.type,e))return;const i=this._getLegendItemAt(t.x,t.y);if("mousemove"===t.type){const o=this._hoveredItem,r=(s=i,null!==(n=o)&&null!==s&&n.datasetIndex===s.datasetIndex&&n.index===s.index);o&&!r&&X(e.onLeave,[t,o,this],this),this._hoveredItem=i,i&&!r&&X(e.onHover,[t,i,this],this)}else i&&X(e.onClick,[t,i,this],this);var n,s}}var yo={id:"legend",_element:mo,start(t,e,i){const n=t.legend=new mo({ctx:t.ctx,options:i,chart:t});Ze.configure(t,n,i),Ze.addBox(t,n)},stop(t){Ze.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;Ze.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,s=i.chart;s.isDatasetVisible(n)?(s.hide(n),e.hidden=!0):(s.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:n,textAlign:s,color:o}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),a=Ie(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:o,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(a.width+a.height)/4,strokeStyle:r.borderColor,pointStyle:n||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:t=>!t.startsWith("on"),labels:{_scriptable:t=>!["generateLabels","filter","sort"].includes(t)}}};class bo extends wn{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this.options;if(this.left=0,this.top=0,!i.display)return void(this.width=this.height=this.right=this.bottom=0);this.width=this.right=t,this.height=this.bottom=e;const n=W(i.text)?i.text.length:1;this._padding=Ie(i.padding);const s=n*Be(i.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=s:this.width=s}isHorizontal(){const t=this.options.position;return"top"===t||"bottom"===t}_drawArgs(t){const{top:e,left:i,bottom:n,right:o,options:r}=this,a=r.align;let l,c,h,d=0;return this.isHorizontal()?(c=s(a,i,o),h=e+t,l=o-i):("left"===r.position?(c=i+t,h=s(a,n,e),d=-.5*mt):(c=o-t,h=s(a,e,n),d=.5*mt),l=n-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this.ctx,e=this.options;if(!e.display)return;const i=Be(e.font),s=i.lineHeight/2+this._padding.top,{titleX:o,titleY:r,maxWidth:a,rotation:l}=this._drawArgs(s);te(t,e.text,0,0,i,{color:e.color,maxWidth:a,rotation:l,textAlign:n(e.align),textBaseline:"middle",translation:[o,r]})}}var xo={id:"title",_element:bo,start(t,e,i){!function(t,e){const i=new bo({ctx:t.ctx,options:e,chart:t});Ze.configure(t,i,e),Ze.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;Ze.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;Ze.configure(t,n,i),n.options=i},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const _o=new WeakMap;var vo={id:"subtitle",start(t,e,i){const n=new bo({ctx:t.ctx,options:i,chart:t});Ze.configure(t,n,i),Ze.addBox(t,n),_o.set(t,n)},stop(t){Ze.removeBox(t,_o.get(t)),_o.delete(t)},beforeUpdate(t,e,i){const n=_o.get(t);Ze.configure(t,n,i),n.options=i},defaults:{align:"center",display:!1,font:{weight:"normal"},fullSize:!0,padding:0,position:"top",text:"",weight:1500},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const ko={average(t){if(!t.length)return!1;let e,i,n=0,s=0,o=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,s+=t.y,++o}}return{x:n/o,y:s/o}},nearest(t,e){if(!t.length)return!1;let i,n,s,o=e.x,r=e.y,a=Number.POSITIVE_INFINITY;for(i=0,n=t.length;i<n;++i){const n=t[i].element;if(n&&n.hasValue()){const t=Nt(e,n.getCenterPoint());t<a&&(a=t,s=n)}}if(s){const t=s.tooltipPosition();o=t.x,r=t.y}return{x:o,y:r}}};function wo(t,e){return e&&(W(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function So(t){return("string"==typeof t||t instanceof String)&&t.indexOf("\n")>-1?t.split("\n"):t}function Co(t,e){const{element:i,datasetIndex:n,index:s}=e,o=t.getDatasetMeta(n).controller,{label:r,value:a}=o.getLabelAndValue(s);return{chart:t,label:r,parsed:o.getParsed(s),raw:t.data.datasets[n].data[s],formattedValue:a,dataset:o.getDataset(),dataIndex:s,datasetIndex:n,element:i}}function Lo(t,e){const i=t.chart.ctx,{body:n,footer:s,title:o}=t,{boxWidth:r,boxHeight:a}=e,l=Be(e.bodyFont),c=Be(e.titleFont),h=Be(e.footerFont),d=o.length,u=s.length,f=n.length,p=Ie(e.padding);let g=p.height,m=0,y=n.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);y+=t.beforeBody.length+t.afterBody.length,d&&(g+=d*c.lineHeight+(d-1)*e.titleSpacing+e.titleMarginBottom),y&&(g+=f*(e.displayColors?Math.max(a,l.lineHeight):l.lineHeight)+(y-f)*l.lineHeight+(y-1)*e.bodySpacing),u&&(g+=e.footerMarginTop+u*h.lineHeight+(u-1)*e.footerSpacing);let b=0;const x=function(t){m=Math.max(m,i.measureText(t).width+b)};return i.save(),i.font=c.string,G(t.title,x),i.font=l.string,G(t.beforeBody.concat(t.afterBody),x),b=e.displayColors?r+2+e.boxPadding:0,G(n,(t=>{G(t.before,x),G(t.lines,x),G(t.after,x)})),b=0,i.font=h.string,G(t.footer,x),i.restore(),m+=p.width,{width:m,height:g}}function Mo(t,e,i,n){const{x:s,width:o}=i,{width:r,chartArea:{left:a,right:l}}=t;let c="center";return"center"===n?c=s<=(a+l)/2?"left":"right":s<=o/2?c="left":s>=r-o/2&&(c="right"),function(t,e,i,n){const{x:s,width:o}=n,r=i.caretSize+i.caretPadding;return"left"===t&&s+o+r>e.width||"right"===t&&s-o-r<0||void 0}(c,t,e,i)&&(c="center"),c}function To(t,e,i){const n=i.yAlign||e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?"top":i>t.height-n/2?"bottom":"center"}(t,i);return{xAlign:i.xAlign||e.xAlign||Mo(t,e,i,n),yAlign:n}}function Do(t,e,i,n){const{caretSize:s,caretPadding:o,cornerRadius:r}=t,{xAlign:a,yAlign:l}=i,c=s+o,{topLeft:h,topRight:d,bottomLeft:u,bottomRight:f}=Ne(r);let p=function(t,e){let{x:i,width:n}=t;return"right"===e?i-=n:"center"===e&&(i-=n/2),i}(e,a);const g=function(t,e,i){let{y:n,height:s}=t;return"top"===e?n+=i:n-="bottom"===e?s+i:s/2,n}(e,l,c);return"center"===l?"left"===a?p+=c:"right"===a&&(p-=c):"left"===a?p-=Math.max(h,u)+s:"right"===a&&(p+=Math.max(d,f)+s),{x:Ht(p,0,n.width-e.width),y:Ht(g,0,n.height-e.height)}}function Ao(t,e,i){const n=Ie(i.padding);return"center"===e?t.x+t.width/2:"right"===e?t.x+t.width-n.right:t.x+n.left}function Eo(t){return wo([],So(t))}function Po(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class Oo extends wn{constructor(t){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=t.chart||t._chart,this._chart=this.chart,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this._cachedAnimations;if(t)return t;const e=this.chart,i=this.options.setContext(this.getContext()),n=i.enabled&&e.options.animation&&i.animations,s=new hn(this.chart,n);return n._cacheable&&(this._cachedAnimations=Object.freeze(s)),s}getContext(){return this.$context||(this.$context=(this,ze(this.chart.getContext(),{tooltip:this,tooltipItems:this._tooltipItems,type:"tooltip"})))}getTitle(t,e){const{callbacks:i}=e,n=i.beforeTitle.apply(this,[t]),s=i.title.apply(this,[t]),o=i.afterTitle.apply(this,[t]);let r=[];return r=wo(r,So(n)),r=wo(r,So(s)),r=wo(r,So(o)),r}getBeforeBody(t,e){return Eo(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const{callbacks:i}=e,n=[];return G(t,(t=>{const e={before:[],lines:[],after:[]},s=Po(i,t);wo(e.before,So(s.beforeLabel.call(this,t))),wo(e.lines,s.label.call(this,t)),wo(e.after,So(s.afterLabel.call(this,t))),n.push(e)})),n}getAfterBody(t,e){return Eo(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const{callbacks:i}=e,n=i.beforeFooter.apply(this,[t]),s=i.footer.apply(this,[t]),o=i.afterFooter.apply(this,[t]);let r=[];return r=wo(r,So(n)),r=wo(r,So(s)),r=wo(r,So(o)),r}_createItems(t){const e=this._active,i=this.chart.data,n=[],s=[],o=[];let r,a,l=[];for(r=0,a=e.length;r<a;++r)l.push(Co(this.chart,e[r]));return t.filter&&(l=l.filter(((e,n,s)=>t.filter(e,n,s,i)))),t.itemSort&&(l=l.sort(((e,n)=>t.itemSort(e,n,i)))),G(l,(e=>{const i=Po(t.callbacks,e);n.push(i.labelColor.call(this,e)),s.push(i.labelPointStyle.call(this,e)),o.push(i.labelTextColor.call(this,e))})),this.labelColors=n,this.labelPointStyles=s,this.labelTextColors=o,this.dataPoints=l,l}update(t,e){const i=this.options.setContext(this.getContext()),n=this._active;let s,o=[];if(n.length){const t=ko[i.position].call(this,n,this._eventPosition);o=this._createItems(i),this.title=this.getTitle(o,i),this.beforeBody=this.getBeforeBody(o,i),this.body=this.getBody(o,i),this.afterBody=this.getAfterBody(o,i),this.footer=this.getFooter(o,i);const e=this._size=Lo(this,i),r=Object.assign({},t,e),a=To(this.chart,i,r),l=Do(i,r,a,this.chart);this.xAlign=a.xAlign,this.yAlign=a.yAlign,s={opacity:1,x:l.x,y:l.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==this.opacity&&(s={opacity:0});this._tooltipItems=o,this.$context=void 0,s&&this._resolveAnimations().update(this,s),t&&i.external&&i.external.call(this,{chart:this.chart,tooltip:this,replay:e})}drawCaret(t,e,i,n){const s=this.getCaretPosition(t,i,n);e.lineTo(s.x1,s.y1),e.lineTo(s.x2,s.y2),e.lineTo(s.x3,s.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:s}=this,{caretSize:o,cornerRadius:r}=i,{topLeft:a,topRight:l,bottomLeft:c,bottomRight:h}=Ne(r),{x:d,y:u}=t,{width:f,height:p}=e;let g,m,y,b,x,_;return"center"===s?(x=u+p/2,"left"===n?(g=d,m=g-o,b=x+o,_=x-o):(g=d+f,m=g+o,b=x-o,_=x+o),y=g):(m="left"===n?d+Math.max(a,c)+o:"right"===n?d+f-Math.max(l,h)-o:this.caretX,"top"===s?(b=u,x=b-o,g=m-o,y=m+o):(b=u+p,x=b+o,g=m+o,y=m-o),_=b),{x1:g,x2:m,x3:y,y1:b,y2:x,y3:_}}drawTitle(t,e,i){const n=this.title,s=n.length;let o,r,a;if(s){const l=Di(i.rtl,this.x,this.width);for(t.x=Ao(this,i.titleAlign,i),e.textAlign=l.textAlign(i.titleAlign),e.textBaseline="middle",o=Be(i.titleFont),r=i.titleSpacing,e.fillStyle=i.titleColor,e.font=o.string,a=0;a<s;++a)e.fillText(n[a],l.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+r,a+1===s&&(t.y+=i.titleMarginBottom-r)}}_drawColorBox(t,e,i,n,s){const o=this.labelColors[i],r=this.labelPointStyles[i],{boxHeight:a,boxWidth:l,boxPadding:c}=s,h=Be(s.bodyFont),d=Ao(this,"left",s),u=n.x(d),f=a<h.lineHeight?(h.lineHeight-a)/2:0,p=e.y+f;if(s.usePointStyle){const e={radius:Math.min(l,a)/2,pointStyle:r.pointStyle,rotation:r.rotation,borderWidth:1},i=n.leftForLtr(u,l)+l/2,c=p+a/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Yt(t,e,i,c),t.strokeStyle=o.borderColor,t.fillStyle=o.backgroundColor,Yt(t,e,i,c)}else{t.lineWidth=o.borderWidth||1,t.strokeStyle=o.borderColor,t.setLineDash(o.borderDash||[]),t.lineDashOffset=o.borderDashOffset||0;const e=n.leftForLtr(u,l-c),i=n.leftForLtr(n.xPlus(u,1),l-c-2),r=Ne(o.borderRadius);Object.values(r).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,ie(t,{x:e,y:p,w:l,h:a,radius:r}),t.fill(),t.stroke(),t.fillStyle=o.backgroundColor,t.beginPath(),ie(t,{x:i,y:p+1,w:l-2,h:a-2,radius:r}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,l,a),t.strokeRect(e,p,l,a),t.fillStyle=o.backgroundColor,t.fillRect(i,p+1,l-2,a-2))}t.fillStyle=this.labelTextColors[i]}drawBody(t,e,i){const{body:n}=this,{bodySpacing:s,bodyAlign:o,displayColors:r,boxHeight:a,boxWidth:l,boxPadding:c}=i,h=Be(i.bodyFont);let d=h.lineHeight,u=0;const f=Di(i.rtl,this.x,this.width),p=function(i){e.fillText(i,f.x(t.x+u),t.y+d/2),t.y+=d+s},g=f.textAlign(o);let m,y,b,x,_,v,k;for(e.textAlign=o,e.textBaseline="middle",e.font=h.string,t.x=Ao(this,g,i),e.fillStyle=i.bodyColor,G(this.beforeBody,p),u=r&&"right"!==g?"center"===o?l/2+c:l+2+c:0,x=0,v=n.length;x<v;++x){for(m=n[x],y=this.labelTextColors[x],e.fillStyle=y,G(m.before,p),b=m.lines,r&&b.length&&(this._drawColorBox(e,t,x,f,i),d=Math.max(h.lineHeight,a)),_=0,k=b.length;_<k;++_)p(b[_]),d=h.lineHeight;G(m.after,p)}u=0,d=h.lineHeight,G(this.afterBody,p),t.y-=s}drawFooter(t,e,i){const n=this.footer,s=n.length;let o,r;if(s){const a=Di(i.rtl,this.x,this.width);for(t.x=Ao(this,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=a.textAlign(i.footerAlign),e.textBaseline="middle",o=Be(i.footerFont),e.fillStyle=i.footerColor,e.font=o.string,r=0;r<s;++r)e.fillText(n[r],a.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:s,yAlign:o}=this,{x:r,y:a}=t,{width:l,height:c}=i,{topLeft:h,topRight:d,bottomLeft:u,bottomRight:f}=Ne(n.cornerRadius);e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(r+h,a),"top"===o&&this.drawCaret(t,e,i,n),e.lineTo(r+l-d,a),e.quadraticCurveTo(r+l,a,r+l,a+d),"center"===o&&"right"===s&&this.drawCaret(t,e,i,n),e.lineTo(r+l,a+c-f),e.quadraticCurveTo(r+l,a+c,r+l-f,a+c),"bottom"===o&&this.drawCaret(t,e,i,n),e.lineTo(r+u,a+c),e.quadraticCurveTo(r,a+c,r,a+c-u),"center"===o&&"left"===s&&this.drawCaret(t,e,i,n),e.lineTo(r,a+h),e.quadraticCurveTo(r,a,r+h,a),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this.chart,i=this.$animations,n=i&&i.x,s=i&&i.y;if(n||s){const i=ko[t.position].call(this,this._active,this._eventPosition);if(!i)return;const o=this._size=Lo(this,t),r=Object.assign({},i,this._size),a=To(e,t,r),l=Do(t,r,a,e);n._to===l.x&&s._to===l.y||(this.xAlign=a.xAlign,this.yAlign=a.yAlign,this.width=o.width,this.height=o.height,this.caretX=i.x,this.caretY=i.y,this._resolveAnimations().update(this,l))}}draw(t){const e=this.options.setContext(this.getContext());let i=this.opacity;if(!i)return;this._updateAnimationTarget(e);const n={width:this.width,height:this.height},s={x:this.x,y:this.y};i=Math.abs(i)<.001?0:i;const o=Ie(e.padding),r=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;e.enabled&&r&&(t.save(),t.globalAlpha=i,this.drawBackground(s,t,n,e),Ai(t,e.textDirection),s.y+=o.top,this.drawTitle(s,t,e),this.drawBody(s,t,e),this.drawFooter(s,t,e),Ei(t,e.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this._active,n=t.map((({datasetIndex:t,index:e})=>{const i=this.chart.getDatasetMeta(t);if(!i)throw new Error("Cannot find a dataset at index "+t);return{datasetIndex:t,element:i.data[e],index:e}})),s=!Q(i,n),o=this._positionChanged(n,e);(s||o)&&(this._active=n,this._eventPosition=e,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(t,e,i=!0){if(e&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const n=this.options,s=this._active||[],o=this._getActiveElements(t,s,e,i),r=this._positionChanged(o,t),a=e||!Q(o,s)||r;return a&&(this._active=o,(n.enabled||n.external)&&(this._eventPosition={x:t.x,y:t.y},this.update(!0,e))),a}_getActiveElements(t,e,i,n){const s=this.options;if("mouseout"===t.type)return[];if(!n)return e;const o=this.chart.getElementsAtEventForMode(t,s.mode,s,i);return s.reverse&&o.reverse(),o}_positionChanged(t,e){const{caretX:i,caretY:n,options:s}=this,o=ko[s.position].call(this,t,e);return!1!==o&&(i!==o.x||n!==o.y)}}Oo.positioners=ko;var jo={id:"tooltip",_element:Oo,positioners:ko,afterInit(t,e,i){i&&(t.tooltip=new Oo({chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins("beforeTooltipDraw",i)&&(e&&e.draw(t.ctx),t.notifyPlugins("afterTooltipDraw",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i,e.inChartArea)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:{beforeTitle:F,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&"dataset"===this.options.mode)return e.dataset.label||"";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return""},afterTitle:F,beforeBody:F,beforeLabel:F,label(t){if(this&&this.options&&"dataset"===this.options.mode)return t.label+": "+t.formattedValue||t.formattedValue;let e=t.dataset.label||"";e&&(e+=": ");const i=t.formattedValue;return z(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:F,afterBody:F,beforeFooter:F,footer:F,afterFooter:F}},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:t=>"filter"!==t&&"itemSort"!==t&&"external"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]},Ro=Object.freeze({__proto__:null,Decimation:Qs,Filler:po,Legend:yo,SubTitle:vo,Title:xo,Tooltip:jo});class No extends On{constructor(t){super(t),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(t){const e=this._addedLabels;if(e.length){const t=this.getLabels();for(const{index:i,label:n}of e)t[i]===n&&t.splice(i,1);this._addedLabels=[]}super.init(t)}parse(t,e){if(z(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Ht(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:function(t,e,i,n){const s=t.indexOf(e);return-1===s?((t,e,i,n)=>("string"==typeof e?(i=t.push(e)-1,n.unshift({index:i,label:e})):isNaN(e)&&(i=null),i))(t,e,i,n):s!==t.lastIndexOf(e)?i:s}(i,t,K(e,t),this._addedLabels),i.length-1)}determineDataLimits(){const{minDefined:t,maxDefined:e}=this.getUserBounds();let{min:i,max:n}=this.getMinMax(!0);"ticks"===this.options.bounds&&(t||(i=0),e||(n=this.getLabels().length-1)),this.min=i,this.max=n}buildTicks(){const t=this.min,e=this.max,i=this.options.offset,n=[];let s=this.getLabels();s=0===t&&e===s.length-1?s:s.slice(t,e+1),this._valueRange=Math.max(s.length-(i?0:1),1),this._startValue=this.min-(i?.5:0);for(let i=t;i<=e;i++)n.push({value:i});return n}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(t){return"number"!=typeof t&&(t=this.parse(t)),null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){return Math.round(this._startValue+this.getDecimalForPixel(t)*this._valueRange)}getBasePixel(){return this.bottom}}function Io(t,e,{horizontal:i,minRotation:n}){const s=Pt(n),o=(i?Math.sin(s):Math.cos(s))||.001,r=.75*e*(""+t).length;return Math.min(e/o,r)}No.id="category",No.defaults={ticks:{callback:No.prototype.getLabelForValue}};class Bo extends On{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return z(t)||("number"==typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const{beginAtZero:t}=this.options,{minDefined:e,maxDefined:i}=this.getUserBounds();let{min:n,max:s}=this;const o=t=>n=e?n:t,r=t=>s=i?s:t;if(t){const t=Ct(n),e=Ct(s);t<0&&e<0?r(0):t>0&&e>0&&o(0)}if(n===s){let e=1;(s>=Number.MAX_SAFE_INTEGER||n<=Number.MIN_SAFE_INTEGER)&&(e=Math.abs(.05*s)),r(s+e),t||o(n-e)}this.min=n,this.max=s}getTickLimit(){const t=this.options.ticks;let e,{maxTicksLimit:i,stepSize:n}=t;return n?(e=Math.ceil(this.max/n)-Math.floor(this.min/n)+1,e>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${n} would result generating up to ${e} ticks. Limiting to 1000.`),e=1e3)):(e=this.computeTickLimit(),i=i||11),i&&(e=Math.min(i,e)),e}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this.options,e=t.ticks;let i=this.getTickLimit();i=Math.max(2,i);const n=function(t,e){const i=[],{bounds:n,step:s,min:o,max:r,precision:a,count:l,maxTicks:c,maxDigits:h,includeBounds:d}=t,u=s||1,f=c-1,{min:p,max:g}=e,m=!z(o),y=!z(r),b=!z(l),x=(g-p)/(h+1);let _,v,k,w,S=Lt((g-p)/f/u)*u;if(S<1e-14&&!m&&!y)return[{value:p},{value:g}];w=Math.ceil(g/S)-Math.floor(p/S),w>f&&(S=Lt(w*S/f/u)*u),z(a)||(_=Math.pow(10,a),S=Math.ceil(S*_)/_),"ticks"===n?(v=Math.floor(p/S)*S,k=Math.ceil(g/S)*S):(v=p,k=g),m&&y&&s&&At((r-o)/s,S/1e3)?(w=Math.round(Math.min((r-o)/S,c)),S=(r-o)/w,v=o,k=r):b?(v=m?o:v,k=y?r:k,w=l-1,S=(k-v)/w):(w=(k-v)/S,w=Dt(w,Math.round(w),S/1e3)?Math.round(w):Math.ceil(w));const C=Math.max(jt(S),jt(v));_=Math.pow(10,z(a)?C:a),v=Math.round(v*_)/_,k=Math.round(k*_)/_;let L=0;for(m&&(d&&v!==o?(i.push({value:o}),v<o&&L++,Dt(Math.round((v+L*S)*_)/_,o,Io(o,x,t))&&L++):v<o&&L++);L<w;++L)i.push({value:Math.round((v+L*S)*_)/_});return y&&d&&k!==r?i.length&&Dt(i[i.length-1].value,r,Io(r,x,t))?i[i.length-1].value=r:i.push({value:r}):y&&k!==r||i.push({value:k}),i}({maxTicks:i,bounds:t.bounds,min:t.min,max:t.max,precision:e.precision,step:e.stepSize,count:e.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:e.minRotation||0,includeBounds:!1!==e.includeBounds},this._range||this);return"ticks"===t.bounds&&Et(n,this,"value"),t.reverse?(n.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),n}configure(){const t=this.ticks;let e=this.min,i=this.max;if(super.configure(),this.options.offset&&t.length){const n=(i-e)/Math.max(t.length-1,1)/2;e-=n,i+=n}this._startValue=e,this._endValue=i,this._valueRange=i-e}getLabelForValue(t){return Ti(t,this.chart.options.locale,this.options.ticks.format)}}class Fo extends Bo{determineDataLimits(){const{min:t,max:e}=this.getMinMax(!0);this.min=V(t)?t:0,this.max=V(e)?e:1,this.handleTickRangeOptions()}computeTickLimit(){const t=this.isHorizontal(),e=t?this.width:this.height,i=Pt(this.options.ticks.minRotation),n=(t?Math.sin(i):Math.cos(i))||.001,s=this._resolveTickFontOptions(0);return Math.ceil(e/Math.min(40,s.lineHeight/n))}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function Ho(t){return 1==t/Math.pow(10,Math.floor(St(t)))}Fo.id="linear",Fo.defaults={ticks:{callback:Cn.formatters.numeric}};class zo extends On{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=Bo.prototype.parse.apply(this,[t,e]);if(0!==i)return V(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const{min:t,max:e}=this.getMinMax(!0);this.min=V(t)?Math.max(0,t):null,this.max=V(e)?Math.max(0,e):null,this.options.beginAtZero&&(this._zero=!0),this.handleTickRangeOptions()}handleTickRangeOptions(){const{minDefined:t,maxDefined:e}=this.getUserBounds();let i=this.min,n=this.max;const s=e=>i=t?i:e,o=t=>n=e?n:t,r=(t,e)=>Math.pow(10,Math.floor(St(t))+e);i===n&&(i<=0?(s(1),o(10)):(s(r(i,-1)),o(r(n,1)))),i<=0&&s(r(n,-1)),n<=0&&o(r(i,1)),this._zero&&this.min!==this._suggestedMin&&i===r(this.min,0)&&s(r(i,-1)),this.min=i,this.max=n}buildTicks(){const t=this.options,e=function(t,e){const i=Math.floor(St(e.max)),n=Math.ceil(e.max/Math.pow(10,i)),s=[];let o=$(t.min,Math.pow(10,Math.floor(St(e.min)))),r=Math.floor(St(o)),a=Math.floor(o/Math.pow(10,r)),l=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:o,major:Ho(o)}),++a,10===a&&(a=1,++r,l=r>=0?1:l),o=Math.round(a*Math.pow(10,r)*l)/l}while(r<i||r===i&&a<n);const c=$(t.max,o);return s.push({value:c,major:Ho(o)}),s}({min:this._userMin,max:this._userMax},this);return"ticks"===t.bounds&&Et(e,this,"value"),t.reverse?(e.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),e}getLabelForValue(t){return void 0===t?"0":Ti(t,this.chart.options.locale,this.options.ticks.format)}configure(){const t=this.min;super.configure(),this._startValue=St(t),this._valueRange=St(this.max)-St(t)}getPixelForValue(t){return void 0!==t&&0!==t||(t=this.min),null===t||isNaN(t)?NaN:this.getPixelForDecimal(t===this.min?0:(St(t)-this._startValue)/this._valueRange)}getValueForPixel(t){const e=this.getDecimalForPixel(t);return Math.pow(10,this._startValue+e*this._valueRange)}}function Wo(t){const e=t.ticks;if(e.display&&t.display){const t=Ie(e.backdropPadding);return K(e.font&&e.font.size,gt.font.size)+t.height}return 0}function qo(t,e,i,n,s){return t===n||t===s?{start:e-i/2,end:e+i/2}:t<n||t>s?{start:e-i,end:e}:{start:e,end:e+i}}function Vo(t,e,i,n,s){const o=Math.abs(Math.sin(i)),r=Math.abs(Math.cos(i));let a=0,l=0;n.start<e.l?(a=(e.l-n.start)/o,t.l=Math.min(t.l,e.l-a)):n.end>e.r&&(a=(n.end-e.r)/o,t.r=Math.max(t.r,e.r+a)),s.start<e.t?(l=(e.t-s.start)/r,t.t=Math.min(t.t,e.t-l)):s.end>e.b&&(l=(s.end-e.b)/r,t.b=Math.max(t.b,e.b+l))}function $o(t){return 0===t||180===t?"center":t<180?"left":"right"}function Ko(t,e,i){return"right"===i?t-=e:"center"===i&&(t-=e/2),t}function Uo(t,e,i){return 90===i||270===i?t-=e/2:(i>270||i<90)&&(t-=e),t}function Yo(t,e,i,n){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,yt);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let o=1;o<n;o++)i=t.getPointPosition(o,e),s.lineTo(i.x,i.y)}}zo.id="logarithmic",zo.defaults={ticks:{callback:Cn.formatters.logarithmic,major:{enabled:!0}}};class Xo extends Bo{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this._padding=Ie(Wo(this.options)/2),e=this.width=this.maxWidth-t.width,i=this.height=this.maxHeight-t.height;this.xCenter=Math.floor(this.left+e/2+t.left),this.yCenter=Math.floor(this.top+i/2+t.top),this.drawingArea=Math.floor(Math.min(e,i)/2)}determineDataLimits(){const{min:t,max:e}=this.getMinMax(!1);this.min=V(t)&&!isNaN(t)?t:0,this.max=V(e)&&!isNaN(e)?e:0,this.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/Wo(this.options))}generateTickLabels(t){Bo.prototype.generateTickLabels.call(this,t),this._pointLabels=this.getLabels().map(((t,e)=>{const i=X(this.options.pointLabels.callback,[t,e],this);return i||0===i?i:""})).filter(((t,e)=>this.chart.getDataVisibility(e)))}fit(){const t=this.options;t.display&&t.pointLabels.display?function(t){const e={l:t.left+t._padding.left,r:t.right-t._padding.right,t:t.top+t._padding.top,b:t.bottom-t._padding.bottom},i=Object.assign({},e),n=[],s=[],o=t._pointLabels.length,r=t.options.pointLabels,a=r.centerPointLabels?mt/o:0;for(let d=0;d<o;d++){const o=r.setContext(t.getPointLabelContext(d));s[d]=o.padding;const u=t.getPointPosition(d,t.drawingArea+s[d],a),f=Be(o.font),p=(l=t.ctx,c=f,h=W(h=t._pointLabels[d])?h:[h],{w:$t(l,c.string,h),h:h.length*c.lineHeight});n[d]=p;const g=Bt(t.getIndexAngle(d)+a),m=Math.round(Ot(g));Vo(i,e,g,qo(m,u.x,p.w,0,180),qo(m,u.y,p.h,90,270))}var l,c,h;t.setCenterPoint(e.l-i.l,i.r-e.r,e.t-i.t,i.b-e.b),t._pointLabelItems=function(t,e,i){const n=[],s=t._pointLabels.length,o=t.options,r=Wo(o)/2,a=t.drawingArea,l=o.pointLabels.centerPointLabels?mt/s:0;for(let o=0;o<s;o++){const s=t.getPointPosition(o,a+r+i[o],l),c=Math.round(Ot(Bt(s.angle+vt))),h=e[o],d=Uo(s.y,h.h,c),u=$o(c),f=Ko(s.x,h.w,u);n.push({x:s.x,y:d,textAlign:u,left:f,top:d,right:f+h.w,bottom:d+h.h})}return n}(t,n,s)}(this):this.setCenterPoint(0,0,0,0)}setCenterPoint(t,e,i,n){this.xCenter+=Math.floor((t-e)/2),this.yCenter+=Math.floor((i-n)/2),this.drawingArea-=Math.min(this.drawingArea/2,Math.max(t,e,i,n))}getIndexAngle(t){return Bt(t*(yt/(this._pointLabels.length||1))+Pt(this.options.startAngle||0))}getDistanceFromCenterForValue(t){if(z(t))return NaN;const e=this.drawingArea/(this.max-this.min);return this.options.reverse?(this.max-t)*e:(t-this.min)*e}getValueForDistanceFromCenter(t){if(z(t))return NaN;const e=t/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-e:this.min+e}getPointLabelContext(t){const e=this._pointLabels||[];if(t>=0&&t<e.length){const i=e[t];return function(t,e,i){return ze(t,{label:i,index:e,type:"pointLabel"})}(this.getContext(),t,i)}}getPointPosition(t,e,i=0){const n=this.getIndexAngle(t)-vt+i;return{x:Math.cos(n)*e+this.xCenter,y:Math.sin(n)*e+this.yCenter,angle:n}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:s}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:s}}drawBackground(){const{backgroundColor:t,grid:{circular:e}}=this.options;if(t){const i=this.ctx;i.save(),i.beginPath(),Yo(this,this.getDistanceFromCenterForValue(this._endValue),e,this._pointLabels.length),i.closePath(),i.fillStyle=t,i.fill(),i.restore()}}drawGrid(){const t=this.ctx,e=this.options,{angleLines:i,grid:n}=e,s=this._pointLabels.length;let o,r,a;if(e.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:n}}=t;for(let s=e-1;s>=0;s--){const e=n.setContext(t.getPointLabelContext(s)),o=Be(e.font),{x:r,y:a,textAlign:l,left:c,top:h,right:d,bottom:u}=t._pointLabelItems[s],{backdropColor:f}=e;if(!z(f)){const t=Ie(e.backdropPadding);i.fillStyle=f,i.fillRect(c-t.left,h-t.top,d-c+t.width,u-h+t.height)}te(i,t._pointLabels[s],r,a+o.lineHeight/2,o,{color:e.color,textAlign:l,textBaseline:"middle"})}}(this,s),n.display&&this.ticks.forEach(((t,e)=>{0!==e&&(r=this.getDistanceFromCenterForValue(t.value),function(t,e,i,n){const s=t.ctx,o=e.circular,{color:r,lineWidth:a}=e;!o&&!n||!r||!a||i<0||(s.save(),s.strokeStyle=r,s.lineWidth=a,s.setLineDash(e.borderDash),s.lineDashOffset=e.borderDashOffset,s.beginPath(),Yo(t,i,o,n),s.closePath(),s.stroke(),s.restore())}(this,n.setContext(this.getContext(e-1)),r,s))})),i.display){for(t.save(),o=s-1;o>=0;o--){const n=i.setContext(this.getPointLabelContext(o)),{color:s,lineWidth:l}=n;l&&s&&(t.lineWidth=l,t.strokeStyle=s,t.setLineDash(n.borderDash),t.lineDashOffset=n.borderDashOffset,r=this.getDistanceFromCenterForValue(e.ticks.reverse?this.min:this.max),a=this.getPointPosition(o,r),t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(a.x,a.y),t.stroke())}t.restore()}}drawBorder(){}drawLabels(){const t=this.ctx,e=this.options,i=e.ticks;if(!i.display)return;const n=this.getIndexAngle(0);let s,o;t.save(),t.translate(this.xCenter,this.yCenter),t.rotate(n),t.textAlign="center",t.textBaseline="middle",this.ticks.forEach(((n,r)=>{if(0===r&&!e.reverse)return;const a=i.setContext(this.getContext(r)),l=Be(a.font);if(s=this.getDistanceFromCenterForValue(this.ticks[r].value),a.showLabelBackdrop){t.font=l.string,o=t.measureText(n.label).width,t.fillStyle=a.backdropColor;const e=Ie(a.backdropPadding);t.fillRect(-o/2-e.left,-s-l.size/2-e.top,o+e.width,l.size+e.height)}te(t,n.label,0,-s,l,{color:a.color})})),t.restore()}drawTitle(){}}Xo.id="radialLinear",Xo.defaults={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:Cn.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5,centerPointLabels:!1}},Xo.defaultRoutes={"angleLines.color":"borderColor","pointLabels.color":"color","ticks.color":"color"},Xo.descriptors={angleLines:{_fallback:"grid"}};const Go={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Qo=Object.keys(Go);function Jo(t,e){return t-e}function Zo(t,e){if(z(e))return null;const i=t._adapter,{parser:n,round:s,isoWeekday:o}=t._parseOpts;let r=e;return"function"==typeof n&&(r=n(r)),V(r)||(r="string"==typeof n?i.parse(r,n):i.parse(r)),null===r?null:(s&&(r="week"!==s||!Tt(o)&&!0!==o?i.startOf(r,s):i.startOf(r,"isoWeek",o)),+r)}function tr(t,e,i,n){const s=Qo.length;for(let o=Qo.indexOf(t);o<s-1;++o){const t=Go[Qo[o]],s=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(s*t.size))<=n)return Qo[o]}return Qo[s-1]}function er(t,e,i){if(i){if(i.length){const{lo:n,hi:s}=ne(i,e);t[i[n]>=e?i[n]:i[s]]=!0}}else t[e]=!0}function ir(t,e,i){const n=[],s={},o=e.length;let r,a;for(r=0;r<o;++r)a=e[r],s[a]=r,n.push({value:a,major:!1});return 0!==o&&i?function(t,e,i,n){const s=t._adapter,o=+s.startOf(e[0].value,n),r=e[e.length-1].value;let a,l;for(a=o;a<=r;a=+s.add(a,1,n))l=i[a],l>=0&&(e[l].major=!0);return e}(t,n,s,i):n}class nr extends On{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e){const i=t.time||(t.time={}),n=this._adapter=new hs._date(t.adapters.date);it(i.displayFormats,n.formats()),this._parseOpts={parser:i.parser,round:i.round,isoWeekday:i.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Zo(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this.options,e=this._adapter,i=t.time.unit||"day";let{min:n,max:s,minDefined:o,maxDefined:r}=this.getUserBounds();function a(t){o||isNaN(t.min)||(n=Math.min(n,t.min)),r||isNaN(t.max)||(s=Math.max(s,t.max))}o&&r||(a(this._getLabelBounds()),"ticks"===t.bounds&&"labels"===t.ticks.source||a(this.getMinMax(!1))),n=V(n)&&!isNaN(n)?n:+e.startOf(Date.now(),i),s=V(s)&&!isNaN(s)?s:+e.endOf(Date.now(),i)+1,this.min=Math.min(n,s-1),this.max=Math.max(n+1,s)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this.options,e=t.time,i=t.ticks,n="labels"===i.source?this.getLabelTimestamps():this._generate();"ticks"===t.bounds&&n.length&&(this.min=this._userMin||n[0],this.max=this._userMax||n[n.length-1]);const s=this.min,o=re(n,s,this.max);return this._unit=e.unit||(i.autoSkip?tr(e.minUnit,this.min,this.max,this._getLabelCapacity(s)):function(t,e,i,n,s){for(let o=Qo.length-1;o>=Qo.indexOf(i);o--){const i=Qo[o];if(Go[i].common&&t._adapter.diff(s,n,i)>=e-1)return i}return Qo[i?Qo.indexOf(i):0]}(this,o.length,e.minUnit,this.min,this.max)),this._majorUnit=i.major.enabled&&"year"!==this._unit?function(t){for(let e=Qo.indexOf(t)+1,i=Qo.length;e<i;++e)if(Go[Qo[e]].common)return Qo[e]}(this._unit):void 0,this.initOffsets(n),t.reverse&&o.reverse(),ir(this,o,this._majorUnit)}initOffsets(t){let e,i,n=0,s=0;this.options.offset&&t.length&&(e=this.getDecimalForValue(t[0]),n=1===t.length?1-e:(this.getDecimalForValue(t[1])-e)/2,i=this.getDecimalForValue(t[t.length-1]),s=1===t.length?i:(i-this.getDecimalForValue(t[t.length-2]))/2);const o=t.length<3?.5:.25;n=Ht(n,0,o),s=Ht(s,0,o),this._offsets={start:n,end:s,factor:1/(n+1+s)}}_generate(){const t=this._adapter,e=this.min,i=this.max,n=this.options,s=n.time,o=s.unit||tr(s.minUnit,e,i,this._getLabelCapacity(e)),r=K(s.stepSize,1),a="week"===o&&s.isoWeekday,l=Tt(a)||!0===a,c={};let h,d,u=e;if(l&&(u=+t.startOf(u,"isoWeek",a)),u=+t.startOf(u,l?"day":o),t.diff(i,e,o)>1e5*r)throw new Error(e+" and "+i+" are too far apart with stepSize of "+r+" "+o);const f="data"===n.ticks.source&&this.getDataTimestamps();for(h=u,d=0;h<i;h=+t.add(h,r,o),d++)er(c,h,f);return h!==i&&"ticks"!==n.bounds&&1!==d||er(c,h,f),Object.keys(c).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,n){const s=this.options,o=s.time.displayFormats,r=this._unit,a=this._majorUnit,l=r&&o[r],c=a&&o[a],h=i[e],d=a&&c&&h&&h.major,u=this._adapter.format(t,n||(d?c:l)),f=s.ticks.callback;return f?X(f,[u,e,i],this):u}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){return null===t?NaN:(t-this.min)/(this.max-this.min)}getPixelForValue(t){const e=this._offsets,i=this.getDecimalForValue(t);return this.getPixelForDecimal((e.start+i)*e.factor)}getValueForPixel(t){const e=this._offsets,i=this.getDecimalForPixel(t)/e.factor-e.end;return this.min+i*(this.max-this.min)}_getLabelSize(t){const e=this.options.ticks,i=this.ctx.measureText(t).width,n=Pt(this.isHorizontal()?e.maxRotation:e.minRotation),s=Math.cos(n),o=Math.sin(n),r=this._resolveTickFontOptions(0).size;return{w:i*s+r*o,h:i*o+r*s}}_getLabelCapacity(t){const e=this.options.time,i=e.displayFormats,n=i[e.unit]||i.millisecond,s=this._tickFormatFunction(t,0,ir(this,[t],this._majorUnit),n),o=this._getLabelSize(s),r=Math.floor(this.isHorizontal()?this.width/o.w:this.height/o.h)-1;return r>0?r:1}getDataTimestamps(){let t,e,i=this._cache.data||[];if(i.length)return i;const n=this.getMatchingVisibleMetas();if(this._normalized&&n.length)return this._cache.data=n[0].controller.getAllParsedValues(this);for(t=0,e=n.length;t<e;++t)i=i.concat(n[t].controller.getAllParsedValues(this));return this._cache.data=this.normalize(i)}getLabelTimestamps(){const t=this._cache.labels||[];let e,i;if(t.length)return t;const n=this.getLabels();for(e=0,i=n.length;e<i;++e)t.push(Zo(this,n[e]));return this._cache.labels=this._normalized?t:this.normalize(t)}normalize(t){return he(t.sort(Jo))}}function sr(t,e,i){let n,s,o,r,a=0,l=t.length-1;i?(e>=t[a].pos&&e<=t[l].pos&&({lo:a,hi:l}=se(t,"pos",e)),({pos:n,time:o}=t[a]),({pos:s,time:r}=t[l])):(e>=t[a].time&&e<=t[l].time&&({lo:a,hi:l}=se(t,"time",e)),({time:n,pos:o}=t[a]),({time:s,pos:r}=t[l]));const c=s-n;return c?o+(r-o)*(e-n)/c:o}nr.id="time",nr.defaults={bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",major:{enabled:!1}}};class or extends nr{constructor(t){super(t),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const t=this._getTimestampsForTable(),e=this._table=this.buildLookupTable(t);this._minPos=sr(e,this.min),this._tableRange=sr(e,this.max)-this._minPos,super.initOffsets(t)}buildLookupTable(t){const{min:e,max:i}=this,n=[],s=[];let o,r,a,l,c;for(o=0,r=t.length;o<r;++o)l=t[o],l>=e&&l<=i&&n.push(l);if(n.length<2)return[{time:e,pos:0},{time:i,pos:1}];for(o=0,r=n.length;o<r;++o)c=n[o+1],a=n[o-1],l=n[o],Math.round((c+a)/2)!==l&&s.push({time:l,pos:o/(r-1)});return s}_getTimestampsForTable(){let t=this._cache.all||[];if(t.length)return t;const e=this.getDataTimestamps(),i=this.getLabelTimestamps();return t=e.length&&i.length?this.normalize(e.concat(i)):e.length?e:i,t=this._cache.all=t,t}getDecimalForValue(t){return(sr(this._table,t)-this._minPos)/this._tableRange}getValueForPixel(t){const e=this._offsets,i=this.getDecimalForPixel(t)/e.factor-e.end;return sr(this._table,i*this._tableRange+this._minPos,!0)}}or.id="timeseries",or.defaults=nr.defaults;var rr=Object.freeze({__proto__:null,CategoryScale:No,LinearScale:Fo,LogarithmicScale:zo,RadialLinearScale:Xo,TimeScale:nr,TimeSeriesScale:or});return os.register(Ms,rr,Ys,Ro),os.helpers={...Hi},os._adapters=hs,os.Animation=ln,os.Animations=hn,os.animator=r,os.controllers=Rn.controllers.items,os.DatasetController=kn,os.Element=wn,os.elements=Ys,os.Interaction=Ae,os.layouts=Ze,os.platforms=on,os.Scale=On,os.Ticks=Cn,Object.assign(os,Ms,rr,Ys,Ro,on),os.Chart=os,"undefined"!=typeof window&&(window.Chart=os),os}));let keycodesZones={keyCode_001:"Lpinkie",keyCode_002:"Lpinkie",keyCode_003:"Lring",keyCode_004:"Lmiddle",keyCode_005:"Lindex",keyCode_006:"Lindex",keyCode_007:"Rindex",keyCode_008:"Rindex",keyCode_009:"Rmiddle",keyCode_010:"Rring",keyCode_011:"Rpinkie",keyCode_012:"Rpinkie",keyCode_013:"Rpinkie",keyCode_014:"Rpinkie",keyCode_015:"Lpinkie",keyCode_016:"Lpinkie",keyCode_017:"Lring",keyCode_018:"Lmiddle",keyCode_019:"Lindex",keyCode_020:"Lindex",keyCode_021:"Rindex",keyCode_022:"Rindex",keyCode_023:"Rmiddle",keyCode_024:"Rring",keyCode_025:"Rpinkie",keyCode_026:"Rpinkie",keyCode_027:"Rpinkie",keyCode_028:"Rpinkie",keyCode_029:"Lpinkie",keyCode_030:"Lpinkie",keyCode_031:"Lring",keyCode_032:"Lmiddle",keyCode_033:"Lindex",keyCode_034:"Lindex",keyCode_035:"Rindex",keyCode_036:"Rindex",keyCode_037:"Rmiddle",keyCode_038:"Rring",keyCode_039:"Rpinkie",keyCode_040:"Rpinkie",keyCode_041:"Rpinkie",keyCode_042:"Lpinkie",keyCode_043:"Lpinkie",keyCode_044:"Lring",keyCode_045:"Lmiddle",keyCode_046:"Lindex",keyCode_047:"Lindex",keyCode_048:"Rindex",keyCode_049:"Rindex",keyCode_050:"Rmiddle",keyCode_051:"Rring",keyCode_052:"Rpinkie",keyCode_053:"Rpinkie",keyCode_054:"default",keyCode_055:"default",keyCode_056:"default",keyCode_057:"default",keyCode_058:"default",keyCode_059:"default",keyCode_060:"default",keyCode_061:"default",keyCode_062:"default"},keyboardBacklightConfig={default:{Lpinkie:"#8F3F3F",Lring:"#B76B40",Lmiddle:"#6E8F43",Lindex:"#3F4899",Lthumb:"#5B6C70",Rindex:"#446390",Rmiddle:"#5B9070",Rring:"#AAAC35",Rpinkie:"#703C83",Rthumb:"#5B6C70",default:"#5B6C70"},dark:{Lpinkie:"#8F3F3F",Lring:"#B76B40",Lmiddle:"#6E8F43",Lindex:"#3F4899",Lthumb:"#5B6C70",Rindex:"#446390",Rmiddle:"#5B9070",Rring:"#AAAC35",Rpinkie:"#703C83",Rthumb:"#5B6C70",default:"#5B6C70"},bright:{Lpinkie:"#C84949",Lring:"#D97C48",Lmiddle:"#6E8F43",Lindex:"#5963C0",Lthumb:"#4D98A9",Rindex:"#446390",Rmiddle:"#5B9070",Rring:"#CED050",Rpinkie:"#894E9D",Rthumb:"#4D98A9",default:"#4D98A9"}},lessons={Lesson1:{middleRow:{subLessonName:"middle row",text:["aa ss dd ff jj kk ll ;;","as as df df jk jk l; l;","as as df df jk jk l; l;","sa sa fd fd kj kj ;l ;l","jkl; jkl; asdf asdf","fdsa fdsa ;lkj ;lkj","asdf asdf jkl; jkl;"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeys1:{subLessonName:"new Keys 1",text:["ad ad jk jk ad ad jk jk","jljl adad jljl adad","sfsf adad jljl sfsf","fsfs dada ljlj fsfs","fsfs adad jllj sffs","jkfd dfkj kjdf fdjk","affa j;;j jkfd l;sa","afds j;lk jkj; ;jad"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},newKeys2:{subLessonName:"new Keys 2",text:["adfs adfs jlk; jlk;","ajsk ajsk ;lfd ;lfd","afsd afsd j;kl j;kl","jfa; jfa; ;afj ;afj","slsl kdkd jfjf ;a;a","akak sjsj dkdk alal","aslk dfkj aslk dfkj","fjkd fkjd fkjd fjkd","a;ls ls;a ;jlk j;lk","f;a; ja;a ks;a ;ajs"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeys3:{subLessonName:"new Keys 3",text:["lsda lfds jfal jfal","laks skda sdas alla","fsls slfk slfk fsls","alsk alsk ddak ddaj","aj;; jka; ;jka ;;ja","fja; fja; akdl aks;","aslk dfkj aslk askj","fjkl a;sl sla; fl;s","fsl; ;als jfkd jfkd","ajsl l;al asjd ajdk"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},keyTest1:{subLessonName:"key Test 1",text:["ask ask ask ask","add add add add","dad dad dad dad","fas fas fas fas","dsd dsd dsd dsd","lkj lkj lkj lkj","fad fad fad fad","all all all all","ala ala ala ala","sad sad sad sad","flak flak flak flak","flask flask flask flask","fall fall fall fall","alas alas alas alas","salad salad salad salad","alfala alfala alfala aflala","sals sals sals sals sals"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordTest1:{subLessonName:"word Test 1",text:["all ask fall ask","dad ask fall adds","adds salad flask all","daff all salad salsa","sals; flack; ;slak dad","asks salad; fall sad","alfa ;alfa salad falls","allas all sad; ask fad;","all fads fad salsa;","las; salad allas sals","alas daff flask fask","sass lad lads fask","as salsa las; alas","adds fads lass sass","adj adk all sad adds","asks falls dad all","laff daffs alls sass"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},ExtraTest:{subLessonName:"Extra Test",text:[";s;d aljf ;kss fk;a","slsf ;ld; jjkk ffaf","aafk jjfa ;;af sj;;","a;ak lfkf k;j; lsls",";;fk fldf afff assf","ajka kfjs l;jj ffjl","l;kf a;ld s;fj ksls","k;;l s;;j kkkj fdkl","jajf ;ajk sks; jdsf","jdff s;f; sakl f;kd"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},lessonName:"Lesson1. Middle row"},Lesson2:{newKeysEI:{subLessonName:"New keys: e and i",text:["ee ii ee ii","ei ei ie ie","fefe fefe efef efef","jiji jiji ijij ijij","defe defe kiji kiji","ajka kfjs l;jj ffjl","sede sede liki liki","aeae aeae ;i;i ;i;i","esdf esdf ijkl ijkl","dese dese kili kili","efes efes ilij ilij","eijd eijd iekd iekd","dese dese kili kili"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeysDrill1:{subLessonName:"New key drill",text:["aeil aeil siek siek","iles iles jsie jsie","jski jski lesj lesj","ejej ejej sife sife","aile aile skie skie","deji deji eaia eaia","jisi jisi kesi kesi","eisi eisi isei isei","lide lide skae skae","dise dise ldki ldki","leik leik asfe asfe"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},KeyDrill:{subLessonName:"Key drill",text:["file file flea flea","sale sale dill dill","sake sake fail fail","desk desk deaf deaf","kale kale deli deli","sail sail idle idle","lead lead silk silk","dell dell else else","disk disk ease ease","dais dais fief fief","leik leik asfe asfe","flee flee lease lease","kill kill sakes sakes"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordDrill:{subLessonName:"Word drill",text:["file file flea flea","sale sale dill dill","sake sake fail fail","desk desk deaf deaf","kale kale deli deli","sail sail idle idle","lead lead silk silk","dell dell else else","disk disk ease ease","dais dais fief fief","leik leik asfe asfe","flee flee lease lease","kill kill sakes sakes"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},BlindWordDrill:{subLessonName:"Blind Word drill",text:["file file flea flea","sale sale dill dill","sake sake fail fail","desk desk deaf deaf","kale kale deli deli","sail sail idle idle","lead lead silk silk","dell dell else else","disk disk ease ease","dais dais fief fief","leik leik asfe asfe","flee flee lease lease","kill kill sakes sakes"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},TextDrill:{subLessonName:"Text drill",text:["file file flea flea","sale sale dill dill","sake sake fail fail","desk desk deaf deaf","kale kale deli deli","sail sail idle idle","lead lead silk silk","dell dell else else","disk disk ease ease","dais dais fief fief","leik leik asfe asfe","flee flee lease lease","kill kill sakes sakes"],settings:{keyboardBacklight:!1,showKeyboard:!0,showSpeed:!0}},lessonName:"Lesson 2. Top row"},Lesson3:{newKeys:{subLessonName:"New Keys: c and n",text:["corneal corneal sonic sonic","unclean unclean censor censor","conifer conifer slacken slacken","cornrow cornrow censurer censurer","resonance resonance scenic scenic","uncrowded uncrowded confuse confuse","coroner coroner innocence innocence","councilor councilor durance durance","incarnadine incarnadine careen careen","insolence insolence incision incision","unclosed unclosed screwiness screwiness","celandine celandine colonnade colonnade","assurance assurance reference reference","cornflower cornflower cornifer cornifer"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeysDrill:{subLessonName:"New Keys drill",text:["corneal corneal sonic sonic","unclean unclean censor censor","conifer conifer slacken slacken","cornrow cornrow censurer censurer","resonance resonance scenic scenic","uncrowded uncrowded confuse confuse","coroner coroner innocence innocence","councilor councilor durance durance","incarnadine incarnadine careen careen","insolence insolence incision incision","unclosed unclosed screwiness screwiness","celandine celandine colonnade colonnade","assurance assurance reference reference","cornflower cornflower cornifer cornifer"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordDrill1:{subLessonName:"Word Drill",text:["corneal corneal sonic sonic","unclean unclean censor censor","conifer conifer slacken slacken","cornrow cornrow censurer censurer","resonance resonance scenic scenic","uncrowded uncrowded confuse confuse","coroner coroner innocence innocence","councilor councilor durance durance","incarnadine incarnadine careen careen","insolence insolence incision incision","unclosed unclosed screwiness screwiness","celandine celandine colonnade colonnade","assurance assurance reference reference","cornflower cornflower cornifer cornifer"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},blindwordDrill1:{subLessonName:"Blind Word Drill",text:["corneal corneal sonic sonic","unclean unclean censor censor","conifer conifer slacken slacken","cornrow cornrow censurer censurer","resonance resonance scenic scenic","uncrowded uncrowded confuse confuse","coroner coroner innocence innocence","councilor councilor durance durance","incarnadine incarnadine careen careen","insolence insolence incision incision","unclosed unclosed screwiness screwiness","celandine celandine colonnade colonnade","assurance assurance reference reference","cornflower cornflower cornifer cornifer"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},textDrill1:{subLessonName:"Text Drill",text:["i know","so did i once","our consciences were clear now","now all is safe and sound","i will and can do so","no one could lie down","confidence increased","an occasion was soon found","no one else was injured","we looked around","i was all alone","well i know","one window and four doors","i dislike crowds and noise","no one will see us","red cloud","i was a winner","of course","a silence fell","kick once","we faced a cold wind","duck under sofa","and i wondered","essence underlies influence","decrease in loudness of sound","reason is confounded"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},lessonName:"Lesson 3. bottom row"}},lessons_ru={Lesson1:{middleRow:{subLessonName:"Ð¡ÑÐµÐ´Ð½Ð¸Ð¹ ÑÑÐ´",text:["ÑÑ ÑÑ Ð²Ð² Ð°Ð° Ð¾Ð¾ Ð»Ð» Ð´Ð´ Ð¶Ð¶","ÑÑ ÑÑ Ð²Ð° Ð²Ð° Ð¾Ð» Ð¾Ð» Ð´Ð¶ Ð´Ð¶","ÑÑ ÑÑ Ð²Ð° Ð²Ð° Ð¾Ð» Ð¾Ð» Ð´Ð¶ Ð´Ð¶","ÑÑ ÑÑ Ð°Ð² Ð°Ð² Ð»Ð¾ Ð»Ð¾ Ð¶Ð´ Ð¶Ð´","Ð¾Ð»Ð´Ð¶ Ð¾Ð»Ð´Ð¶ ÑÑÐ²Ð° ÑÑÐ²Ð°","Ð°Ð²ÑÑ Ð°Ð²ÑÑ Ð¶Ð´Ð»Ð¾ Ð¶Ð´Ð»Ð¾","ÑÑÐ²Ð° ÑÑÐ²Ð° Ð¾Ð»Ð´Ð¶ Ð¾Ð»Ð´Ð¶"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeys1:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ 1",text:["ÑÐ² ÑÐ² Ð¾Ð» Ð¾Ð» ÑÐ² ÑÐ² Ð¾Ð» Ð¾Ð»","Ð¾Ð´Ð¾Ð´ ÑÐ²ÑÐ² Ð¾Ð´Ð¾Ð´ ÑÐ²ÑÐ²","ÑÐ°ÑÐ° ÑÐ²ÑÐ² Ð¾Ð´Ð¾Ð´ ÑÐ°ÑÐ°","Ð°ÑÐ°Ñ Ð²ÑÐ²Ñ Ð´Ð¾Ð´Ð¾ Ð°ÑÐ°Ñ","Ð°ÑÐ°Ñ ÑÐ²ÑÐ² Ð¾Ð´Ð´Ð¾ ÑÐ°Ð°Ñ","Ð¾Ð»Ð°Ð² Ð²Ð°Ð»Ð¾ Ð»Ð¾Ð²Ð° Ð°Ð²Ð¾Ð»","ÑÐ°Ð°Ñ Ð¾Ð¶Ð¶Ð¾ Ð¾Ð»Ð°Ð² Ð´Ð¶ÑÑ","ÑÐ°Ð²Ñ Ð¾Ð¶Ð´Ð» Ð¾Ð»Ð¾Ð¶ Ð¶Ð¾ÑÐ²"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},newKeys2:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ 2",text:["ÑÐ²Ð°Ñ ÑÐ²Ð°Ñ Ð¾Ð´Ð»Ð¶ Ð¾Ð´Ð»Ð¶","ÑÐ¾ÑÐ» ÑÐ¾ÑÐ» Ð¶Ð´Ð°Ð² Ð¶Ð´Ð°Ð²","ÑÐ°ÑÐ² ÑÐ°ÑÐ² Ð¾Ð¶Ð»Ð´ Ð¾Ð¶Ð»Ð´","Ð¾Ð°ÑÐ¶ Ð¾Ð°ÑÐ¶ Ð¶ÑÐ°Ð¾ Ð¶ÑÐ°Ð¾","ÑÐ´ÑÐ´ Ð»Ð²Ð»Ð² Ð¾Ð°Ð¾Ð° Ð¶ÑÐ¶Ñ","ÑÐ»ÑÐ» ÑÐ¾ÑÐ¾ Ð²Ð»Ð²Ð» ÑÐ´ÑÐ´","ÑÑÐ´Ð» Ð²Ð°Ð»Ð¾ ÑÑÐ´Ð» Ð²Ð°Ð»Ð¾","Ð°Ð¾Ð»Ð² Ð°Ð»Ð¾Ð² Ð°Ð»Ð¾Ð² Ð°Ð¾Ð»Ð²","ÑÐ¶Ð´Ñ Ð´ÑÐ¶Ñ Ð¶Ð¾Ð´Ð» Ð¾Ð¶Ð´Ð»","Ð°Ð¶ÑÐ¶ Ð¾ÑÐ¶Ñ Ð»ÑÐ¶Ñ Ð¶ÑÐ¾Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeys3:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ 3",text:["ÑÐ²Ð°Ñ ÑÐ²Ð°Ñ Ð¾Ð´Ð»Ð¶ Ð¾Ð´Ð»Ð¶","ÑÐ¾ÑÐ» ÑÐ¾ÑÐ» Ð¶Ð´Ð°Ð² Ð¶Ð´Ð°Ð²","ÑÐ°ÑÐ² ÑÐ°ÑÐ² Ð¾Ð¶Ð»Ð´ Ð¾Ð¶Ð»Ð´","Ð¾Ð°ÑÐ¶ Ð¾Ð°ÑÐ¶ Ð¶ÑÐ°Ð¾ Ð¶ÑÐ°Ð¾","ÑÐ´ÑÐ´ Ð»Ð²Ð»Ð² Ð¾Ð°Ð¾Ð° Ð¶ÑÐ¶Ñ","ÑÐ»ÑÐ» ÑÐ¾ÑÐ¾ Ð²Ð»Ð²Ð» ÑÐ´ÑÐ´","ÑÑÐ´Ð» Ð²Ð°Ð»Ð¾ ÑÑÐ´Ð» Ð²Ð°Ð»Ð¾","Ð°Ð¾Ð»Ð² Ð°Ð»Ð¾Ð² Ð°Ð»Ð¾Ð² Ð°Ð¾Ð»Ð²","ÑÐ¶Ð´Ñ Ð´ÑÐ¶Ñ Ð¶Ð¾Ð´Ð» Ð¾Ð¶Ð´Ð»","Ð°Ð¶ÑÐ¶ Ð¾ÑÐ¶Ñ Ð»ÑÐ¶Ñ Ð¶ÑÐ¾Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},keyTest1:{subLessonName:"Ð¢ÐµÑÑ Ð½Ð¾Ð²ÑÑ Ð±ÑÐºÐ²",text:["Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»","Ð´Ð¾Ð¶ Ð°Ð²Ð²Ð° Ð°Ð¾Ð´ Ð°Ð»Ð°Ð° Ð²Ð°Ð»Ð° Ð²Ð»Ð°Ð´","Ð¾Ð¾Ð¾ Ð°Ð¶Ð° Ð»ÑÐ¶Ð° Ð°Ð»Ð´Ð° Ð²ÑÐ²Ð¾Ð´ Ð°Ð»Ð¾","Ð»Ð°Ð²Ð° Ð´Ð°Ð´Ð° Ð°Ð´Ð¾Ð»Ñ ÑÐ°Ð»Ð´Ð° Ð»Ð¾Ð»Ð»Ð° Ð²Ð¾Ð´Ñ","Ð²Ð¾Ð¶Ð¶Ð¾Ð² Ð²Ð¾Ð²Ð´ Ð¶Ð²Ð°Ð»Ð° Ð²Ð¾Ð´Ð¾Ð²Ð¾Ð´ Ð»Ð°Ð´Ð° ÑÐ¾Ð»Ð°Ð´Ð°","Ð°Ð´Ñ Ð¾Ð²Ð¾Ð´ Ð´ÑÐ»Ð´Ð° Ð´Ð°Ð²ÑÐ´Ð¾Ð² Ð»Ð°Ð»Ð° Ð²ÑÐ»Ð¾Ð²","Ð´Ð¾Ð´Ð¾Ð² Ð»Ð°Ð´ Ð°Ð²Ð°Ð´ Ð°Ð´Ð° ÑÐ°Ð´Ð°Ð» Ð´Ð²Ð°Ð¶Ð´Ñ","Ð´Ð¾Ð²Ð¾Ð´ Ð¾Ð»Ð¾Ð²Ð¾ Ð»Ð°ÑÐ° Ð°Ð»Ð»Ð°Ð» Ð²Ð¾Ð´Ð»Ð° Ð²Ð¾Ð´","Ð»Ð°Ð» Ð¶Ð°Ð¶Ð´Ð° Ð²Ð¾Ð»Ð¾Ñ Ð¾Ð´Ð° Ð²Ð°Ð´ Ð»Ð¾Ð»Ð°","Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordTest1:{subLessonName:"Ð¡Ð»Ð¾Ð²ÐµÑÐ½ÑÐ¹ Ð¢ÐµÑÑ",text:["Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»","Ð´Ð¾Ð¶ Ð°Ð²Ð²Ð° Ð°Ð¾Ð´ Ð°Ð»Ð°Ð° Ð²Ð°Ð»Ð° Ð²Ð»Ð°Ð´","Ð¾Ð¾Ð¾ Ð°Ð¶Ð° Ð»ÑÐ¶Ð° Ð°Ð»Ð´Ð° Ð²ÑÐ²Ð¾Ð´ Ð°Ð»Ð¾","Ð»Ð°Ð²Ð° Ð´Ð°Ð´Ð° Ð°Ð´Ð¾Ð»Ñ ÑÐ°Ð»Ð´Ð° Ð»Ð¾Ð»Ð»Ð° Ð²Ð¾Ð´Ñ","Ð²Ð¾Ð¶Ð¶Ð¾Ð² Ð²Ð¾Ð²Ð´ Ð¶Ð²Ð°Ð»Ð° Ð²Ð¾Ð´Ð¾Ð²Ð¾Ð´ Ð»Ð°Ð´Ð° ÑÐ¾Ð»Ð°Ð´Ð°","Ð°Ð´Ñ Ð¾Ð²Ð¾Ð´ Ð´ÑÐ»Ð´Ð° Ð´Ð°Ð²ÑÐ´Ð¾Ð² Ð»Ð°Ð»Ð° Ð²ÑÐ»Ð¾Ð²","Ð´Ð¾Ð´Ð¾Ð² Ð»Ð°Ð´ Ð°Ð²Ð°Ð´ Ð°Ð´Ð° ÑÐ°Ð´Ð°Ð» Ð´Ð²Ð°Ð¶Ð´Ñ","Ð´Ð¾Ð²Ð¾Ð´ Ð¾Ð»Ð¾Ð²Ð¾ Ð»Ð°ÑÐ° Ð°Ð»Ð»Ð°Ð» Ð²Ð¾Ð´Ð»Ð° Ð²Ð¾Ð´","Ð»Ð°Ð» Ð¶Ð°Ð¶Ð´Ð° Ð²Ð¾Ð»Ð¾Ñ Ð¾Ð´Ð° Ð²Ð°Ð´ Ð»Ð¾Ð»Ð°","Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},ExtraTest:{subLessonName:"ÐÐ¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½Ð¾Ðµ ÑÐ¿ÑÐ°Ð¶Ð½ÐµÐ½Ð¸Ðµ",text:["Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»","Ð´Ð¾Ð¶ Ð°Ð²Ð²Ð° Ð°Ð¾Ð´ Ð°Ð»Ð°Ð° Ð²Ð°Ð»Ð° Ð²Ð»Ð°Ð´","Ð¾Ð¾Ð¾ Ð°Ð¶Ð° Ð»ÑÐ¶Ð° Ð°Ð»Ð´Ð° Ð²ÑÐ²Ð¾Ð´ Ð°Ð»Ð¾","Ð»Ð°Ð²Ð° Ð´Ð°Ð´Ð° Ð°Ð´Ð¾Ð»Ñ ÑÐ°Ð»Ð´Ð° Ð»Ð¾Ð»Ð»Ð° Ð²Ð¾Ð´Ñ","Ð²Ð¾Ð¶Ð¶Ð¾Ð² Ð²Ð¾Ð²Ð´ Ð¶Ð²Ð°Ð»Ð° Ð²Ð¾Ð´Ð¾Ð²Ð¾Ð´ Ð»Ð°Ð´Ð° ÑÐ¾Ð»Ð°Ð´Ð°","Ð°Ð´Ñ Ð¾Ð²Ð¾Ð´ Ð´ÑÐ»Ð´Ð° Ð´Ð°Ð²ÑÐ´Ð¾Ð² Ð»Ð°Ð»Ð° Ð²ÑÐ»Ð¾Ð²","Ð´Ð¾Ð´Ð¾Ð² Ð»Ð°Ð´ Ð°Ð²Ð°Ð´ Ð°Ð´Ð° ÑÐ°Ð´Ð°Ð» Ð´Ð²Ð°Ð¶Ð´Ñ","Ð´Ð¾Ð²Ð¾Ð´ Ð¾Ð»Ð¾Ð²Ð¾ Ð»Ð°ÑÐ° Ð°Ð»Ð»Ð°Ð» Ð²Ð¾Ð´Ð»Ð° Ð²Ð¾Ð´","Ð»Ð°Ð» Ð¶Ð°Ð¶Ð´Ð° Ð²Ð¾Ð»Ð¾Ñ Ð¾Ð´Ð° Ð²Ð°Ð´ Ð»Ð¾Ð»Ð°","Ð¶Ð²Ð°Ð»Ð¾ Ð°Ð»Ñ Ð°Ð¶ Ð¾Ð°Ð¾ Ð°Ð´Ð¾Ð² ÑÐ°Ð»"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},lessonName:"Ð£ÑÐ¾Ðº 1. Ð¡ÑÐµÐ´Ð½Ð¸Ð¹ ÑÑÐ´"},Lesson2:{newKeysEI:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ: Ñ Ð¸ Ñ",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeysDrill1:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ 1",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},KeyDrill:{subLessonName:"Ð¢ÐµÑÑ Ð¿Ð¾ ÐºÐ»Ð°Ð²Ð¸ÑÐ°Ð¼",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordDrill:{subLessonName:"Ð¡Ð»Ð¾Ð²ÐµÑÐ½ÑÐ¹ ÑÐµÑÑ",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},BlindWordDrill:{subLessonName:"Ð¡Ð»ÐµÐ¿Ð¾Ð¹ ÑÐ»Ð¾Ð²ÐµÑÐ½ÑÐ¹ ÑÐµÑÑ",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},TextDrill:{subLessonName:"Ð¢ÐµÐºÑÑ",text:["ÑÑ ÑÑ ÑÑ ÑÑ","ÑÑ ÑÑ ÑÑ ÑÑ","Ð°ÑÐ°Ñ Ð°ÑÐ°Ñ ÑÐ°ÑÐ° ÑÐ°ÑÐ°","Ð¾ÑÐ¾Ñ Ð¾ÑÐ¾Ñ ÑÐ¾ÑÐ¾ ÑÐ¾ÑÐ¾","Ð²ÑÐ°Ñ Ð²ÑÐ°Ñ Ð»ÑÐ¾Ñ Ð»ÑÐ¾Ñ","ÑÐ¾Ð»Ñ Ð»Ð°Ð¾Ñ Ð´Ð¶Ð¾Ð¾ Ð°Ð°Ð¾Ð´","ÑÑÐ²Ñ ÑÑÐ²Ñ Ð´ÑÐ»Ñ Ð´ÑÐ»Ñ","ÑÑÑÑ ÑÑÑÑ Ð¶ÑÐ¶Ñ Ð¶ÑÐ¶Ñ","ÑÑÐ²Ð° ÑÑÐ²Ð° ÑÐ¾Ð»Ð´ ÑÐ¾Ð»Ð´","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ","ÑÐ°ÑÑ ÑÐ°ÑÑ ÑÐ´ÑÐ¾ ÑÐ´ÑÐ¾","ÑÑÐ¾Ð² ÑÑÐ¾Ð² ÑÑÐ»Ð² ÑÑÐ»Ð²","Ð²ÑÑÑ Ð²ÑÑÑ Ð»ÑÐ´Ñ Ð»ÑÐ´Ñ"],settings:{keyboardBacklight:!1,showKeyboard:!0,showSpeed:!0}},lessonName:"Ð£ÑÐ¾Ðº 2. ÐÐµÑÑÐ½Ð¸Ð¹ ÑÑÐ´"},Lesson3:{newKeys:{subLessonName:"ÐÐ¾Ð²ÑÐµ ÐºÐ»Ð°Ð²Ð¸ÑÑ: Ñ Ð¸ Ñ",text:["ÑÑÐºÑÑÑÐ´ ÑÑÐºÑÑÑÐ´ ÑÑÑÑÑ ÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑ Ð³ÑÑÐ´ÑÑÑ ÑÑÑÑÑÐº ÑÑÑÑÑÐº","ÑÑÑÑÐ°ÑÐº ÑÑÑÑÐ°ÑÐº ÑÐ´ÑÑÐ»ÑÑ ÑÐ´ÑÑÐ»ÑÑ","ÑÑÐºÑÐºÑÑ ÑÑÐºÑÐºÑÑ ÑÑÑÑÐ³ÐºÑÐº ÑÑÑÑÐ³ÐºÑÐº","ÐºÑÑÑÑÑÑÑÑ ÐºÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑ ÑÑÑÑÑÑ","Ð³ÑÑÐºÑÑÐ²ÑÐ² Ð³ÑÑÐºÑÑÐ²ÑÐ² ÑÑÑÐ°Ð³ÑÑ ÑÑÑÐ°Ð³ÑÑ","ÑÑÐºÑÑÑÐº ÑÑÐºÑÑÑÐº ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑÑ","ÑÑÐ³ÑÑÑÐ´ÑÐº ÑÑÐ³ÑÑÑÐ´ÑÐº Ð²Ð³ÐºÑÑÑÑ Ð²Ð³ÐºÑÑÑÑ","ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÐºÑÑÑ ÑÑÐºÑÑÑ","ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑÐ² Ð³ÑÑÐ´ÑÑÑÐ² ÑÑÐºÑÑÑÑÑÑÑ ÑÑÐºÑÑÑÑÑÑÑ","ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÑÑÐ²Ñ ÑÑÐ´ÑÑÑÑÐ²Ñ","ÑÑÑÐ³ÐºÑÑÑÑ ÑÑÑÐ³ÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ","ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÑÐ°ÑÐº ÑÑÐºÑÑÐ°ÑÐº"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},newKeysDrill:{subLessonName:"Ð¢ÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ°",text:["ÑÑÐºÑÑÑÐ´ ÑÑÐºÑÑÑÐ´ ÑÑÑÑÑ ÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑ Ð³ÑÑÐ´ÑÑÑ ÑÑÑÑÑÐº ÑÑÑÑÑÐº","ÑÑÑÑÐ°ÑÐº ÑÑÑÑÐ°ÑÐº ÑÐ´ÑÑÐ»ÑÑ ÑÐ´ÑÑÐ»ÑÑ","ÑÑÐºÑÐºÑÑ ÑÑÐºÑÐºÑÑ ÑÑÑÑÐ³ÐºÑÐº ÑÑÑÑÐ³ÐºÑÐº","ÐºÑÑÑÑÑÑÑÑ ÐºÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑ ÑÑÑÑÑÑ","Ð³ÑÑÐºÑÑÐ²ÑÐ² Ð³ÑÑÐºÑÑÐ²ÑÐ² ÑÑÑÐ°Ð³ÑÑ ÑÑÑÐ°Ð³ÑÑ","ÑÑÐºÑÑÑÐº ÑÑÐºÑÑÑÐº ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑÑ","ÑÑÐ³ÑÑÑÐ´ÑÐº ÑÑÐ³ÑÑÑÐ´ÑÐº Ð²Ð³ÐºÑÑÑÑ Ð²Ð³ÐºÑÑÑÑ","ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÐºÑÑÑ ÑÑÐºÑÑÑ","ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑÐ² Ð³ÑÑÐ´ÑÑÑÐ² ÑÑÐºÑÑÑÑÑÑÑ ÑÑÐºÑÑÑÑÑÑÑ","ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÑÑÐ²Ñ ÑÑÐ´ÑÑÑÑÐ²Ñ","ÑÑÑÐ³ÐºÑÑÑÑ ÑÑÑÐ³ÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ","ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÑÐ°ÑÐº ÑÑÐºÑÑÐ°ÑÐº"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},wordDrill1:{subLessonName:"Ð¡Ð»Ð¾Ð²ÐµÑÐ½ÑÐ¹ ÑÐµÑÑ",text:["ÑÑÐºÑÑÑÐ´ ÑÑÐºÑÑÑÐ´ ÑÑÑÑÑ ÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑ Ð³ÑÑÐ´ÑÑÑ ÑÑÑÑÑÐº ÑÑÑÑÑÐº","ÑÑÑÑÐ°ÑÐº ÑÑÑÑÐ°ÑÐº ÑÐ´ÑÑÐ»ÑÑ ÑÐ´ÑÑÐ»ÑÑ","ÑÑÐºÑÐºÑÑ ÑÑÐºÑÐºÑÑ ÑÑÑÑÐ³ÐºÑÐº ÑÑÑÑÐ³ÐºÑÐº","ÐºÑÑÑÑÑÑÑÑ ÐºÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑ ÑÑÑÑÑÑ","Ð³ÑÑÐºÑÑÐ²ÑÐ² Ð³ÑÑÐºÑÑÐ²ÑÐ² ÑÑÑÐ°Ð³ÑÑ ÑÑÑÐ°Ð³ÑÑ","ÑÑÐºÑÑÑÐº ÑÑÐºÑÑÑÐº ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑÑ","ÑÑÐ³ÑÑÑÐ´ÑÐº ÑÑÐ³ÑÑÑÐ´ÑÐº Ð²Ð³ÐºÑÑÑÑ Ð²Ð³ÐºÑÑÑÑ","ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÐºÑÑÑ ÑÑÐºÑÑÑ","ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑÐ² Ð³ÑÑÐ´ÑÑÑÐ² ÑÑÐºÑÑÑÑÑÑÑ ÑÑÐºÑÑÑÑÑÑÑ","ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÑÑÐ²Ñ ÑÑÐ´ÑÑÑÑÐ²Ñ","ÑÑÑÐ³ÐºÑÑÑÑ ÑÑÑÐ³ÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ","ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÑÐ°ÑÐº ÑÑÐºÑÑÐ°ÑÐº"],settings:{keyboardBacklight:!0,showKeyboard:!0,showSpeed:!0}},blindwordDrill1:{subLessonName:"Ð¡Ð»ÐµÐ¿Ð¾Ð¹ ÑÐ»Ð¾Ð²ÐµÑÐ½ÑÐ¹ ÑÐµÑÑ",text:["ÑÑÐºÑÑÑÐ´ ÑÑÐºÑÑÑÐ´ ÑÑÑÑÑ ÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑ Ð³ÑÑÐ´ÑÑÑ ÑÑÑÑÑÐº ÑÑÑÑÑÐº","ÑÑÑÑÐ°ÑÐº ÑÑÑÑÐ°ÑÐº ÑÐ´ÑÑÐ»ÑÑ ÑÐ´ÑÑÐ»ÑÑ","ÑÑÐºÑÐºÑÑ ÑÑÐºÑÐºÑÑ ÑÑÑÑÐ³ÐºÑÐº ÑÑÑÑÐ³ÐºÑÐº","ÐºÑÑÑÑÑÑÑÑ ÐºÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑ ÑÑÑÑÑÑ","Ð³ÑÑÐºÑÑÐ²ÑÐ² Ð³ÑÑÐºÑÑÐ²ÑÐ² ÑÑÑÐ°Ð³ÑÑ ÑÑÑÐ°Ð³ÑÑ","ÑÑÐºÑÑÑÐº ÑÑÐºÑÑÑÐº ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑÑ","ÑÑÐ³ÑÑÑÐ´ÑÐº ÑÑÐ³ÑÑÑÐ´ÑÐº Ð²Ð³ÐºÑÑÑÑ Ð²Ð³ÐºÑÑÑÑ","ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÑÑÐºÑÑÐ²ÑÑÑ ÑÑÐºÑÑÑ ÑÑÐºÑÑÑ","ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÐ´ÑÑÑÑ ÑÑÑÑÑÑÑÑ ÑÑÑÑÑÑÑÑ","Ð³ÑÑÐ´ÑÑÑÐ² Ð³ÑÑÐ´ÑÑÑÐ² ÑÑÐºÑÑÑÑÑÑÑ ÑÑÐºÑÑÑÑÑÑÑ","ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÐ²ÑÑÑ ÑÑÐ´ÑÑÑÑÐ²Ñ ÑÑÐ´ÑÑÑÑÐ²Ñ","ÑÑÑÐ³ÐºÑÑÑÑ ÑÑÑÐ³ÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ ÐºÑÐ°ÑÐºÑÑÑÑ","ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÐ°Ð´ÑÑÑÐº ÑÑÐºÑÑÐ°ÑÐº ÑÑÐºÑÑÐ°ÑÐº"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},textDrill1:{subLessonName:"Ð¢ÐµÐºÑÑ",text:["Ð´Ð²Ð° Ð¸Ð»Ð¸ ÑÑÐ¸ ÑÐ°Ðº Ð¸ Ð¿Ð¸ÑÑÑ ÐºÑÐ´Ð° Ð¿ÑÐ¸ÐºÐ°ÑÐ¸Ð»Ð¸","Ð²Ð¾Ñ Ð¸ Ð¿ÑÐ¸ÑÐ»Ð¸ Ð²Ð¾Ñ ÑÐ°Ð¼ Ð¶Ð¸Ð»Ð¸ ÑÑÑ Ð²Ð¾Ñ Ð»Ð°Ð²ÐºÐ¸","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð´Ð²Ð° Ð¸Ð»Ð¸ ÑÑÐ¸ ÑÐ°Ðº Ð¸ Ð¿Ð¸ÑÑÑ ÐºÑÐ´Ð° Ð¿ÑÐ¸ÐºÐ°ÑÐ¸Ð»Ð¸","Ð²Ð¾Ñ Ð¸ Ð¿ÑÐ¸ÑÐ»Ð¸ Ð²Ð¾Ñ ÑÐ°Ð¼ Ð¶Ð¸Ð»Ð¸ ÑÑÑ Ð²Ð¾Ñ Ð»Ð°Ð²ÐºÐ¸","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð´Ð²Ð° Ð¸Ð»Ð¸ ÑÑÐ¸ ÑÐ°Ðº Ð¸ Ð¿Ð¸ÑÑÑ ÐºÑÐ´Ð° Ð¿ÑÐ¸ÐºÐ°ÑÐ¸Ð»Ð¸","Ð²Ð¾Ñ Ð¸ Ð¿ÑÐ¸ÑÐ»Ð¸ Ð²Ð¾Ñ ÑÐ°Ð¼ Ð¶Ð¸Ð»Ð¸ ÑÑÑ Ð²Ð¾Ñ Ð»Ð°Ð²ÐºÐ¸","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð´Ð²Ð° Ð¸Ð»Ð¸ ÑÑÐ¸ ÑÐ°Ðº Ð¸ Ð¿Ð¸ÑÑÑ ÐºÑÐ´Ð° Ð¿ÑÐ¸ÐºÐ°ÑÐ¸Ð»Ð¸","Ð²Ð¾Ñ Ð¸ Ð¿ÑÐ¸ÑÐ»Ð¸ Ð²Ð¾Ñ ÑÐ°Ð¼ Ð¶Ð¸Ð»Ð¸ ÑÑÑ Ð²Ð¾Ñ Ð»Ð°Ð²ÐºÐ¸","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð´Ð²Ð° Ð¸Ð»Ð¸ ÑÑÐ¸ ÑÐ°Ðº Ð¸ Ð¿Ð¸ÑÑÑ ÐºÑÐ´Ð° Ð¿ÑÐ¸ÐºÐ°ÑÐ¸Ð»Ð¸","Ð²Ð¾Ñ Ð¸ Ð¿ÑÐ¸ÑÐ»Ð¸ Ð²Ð¾Ñ ÑÐ°Ð¼ Ð¶Ð¸Ð»Ð¸ ÑÑÑ Ð²Ð¾Ñ Ð»Ð°Ð²ÐºÐ¸","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð¼Ð°ÐºÐ°Ð»Ñ Ð¼Ð¾Ð»Ð» Ð°Ð´Ð³Ð°Ð¼ ÐºÐ¾Ð¼Ð¿Ð°ÑÐºÐ° Ð¼Ð¾Ð»Ñ","Ð° Ð¼Ñ Ð¿Ð¾ÑÑÑÐ¾Ð¸Ð¼ Ð²Ð°Ñ Ð°Ð²ÑÐ¾Ð¼Ð¾Ð±Ð¸Ð»Ñ","Ð´Ð¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ Ð² Ð¼Ð¾ÑÐºÐ²Ñ Ð¾Ð»Ð¸Ð¼Ð¿Ð¸Ð°Ð´Ð°"],settings:{keyboardBacklight:!1,showKeyboard:!1,showSpeed:!0}},lessonName:"Ð£ÑÐ¾Ðº 3. ÐÐ¸Ð¶Ð½Ð¸Ð¹ ÑÑÐ´"}},lessonsConfigs={EN:lessons,RU:lessons_ru};class Debugger{constructor(t=!1,e=0){this.debug=t,this.debugLevel=e}log(t,e){this.debug&&t===this.debugLevel&&console.log(e)}setDebug(t){this.debug}}const debug=new Debugger(!0,0);let layoutTypes=["QWERTY","DWORAK"],qwertyLayouts={EN:["1 !","2 @","3 #","4 $","5 %","6 ^","7 &","8 *","9 (","0 )","Q","W","E","R","T","Y","U","I","O","P","[ {","] }","A","S","D","F","G","H","J","K","L","; :","' \"","Z","X","C","V","B","N","M",", <",". >","/ ?"],RU:["1 !","2 @","3 #","4 $","5 %","6 ^","7 &","8 *","9 (","0 )","Ð","Ð¦","Ð£","Ð","Ð","Ð","Ð","Ð¨","Ð©","Ð","Ð¥","Ðª","Ð¤","Ð«","Ð","Ð","Ð","Ð ","Ð","Ð","Ð","Ð","Ð­","Ð¯","Ð§","Ð¡","Ð","Ð","Ð¢","Ð¬","Ð","Ð®","/ ?"]};function changeTypingLan(t){if(console.log(t),2!=t.split("/").length)return void console.log("error occured in changeTypingLan, maybe data is corrupted");let e=document.querySelectorAll(".keyboard__key-layout");if(localStorage.setItem("typingLan",t),"QWERTY"==t.split("/")[0]){switch(t.split("/")[1]){case"EN":e.forEach(((t,e)=>{t.innerHTML=qwertyLayouts.EN[e]}));break;case"RU":console.log("RU input"),e.forEach(((t,e)=>{t.innerHTML=qwertyLayouts.RU[e]}))}}else console.log("ERROR: Data is corrupted, maybe wrong format of changing language string")}class Lesson{constructor(t,e=document.querySelector(".mainSectionContainer__lessons__flexContainer__menu")){this.language=mainSettings.typingLan,this.lessonNumber=localStorage.getItem("currentLesson")||0,this.partLessonNumber=localStorage.getItem("currentLessonPart")||0,this.domElement=e,this.progressBarDOM=document.querySelector(".keyboardSection__progressBar"),this.changeLessonConfig(t),this.renderDOMLessons(),this.currentPart=0,this.lessonArray=[]}getLanguage(){return this.language}setLanguage(t){this.language=t}showLesson(){console.log("_____________"),console.log(this.lessonNumber),console.log(this.partLessonNumber),console.log(this.lesson),console.log(this.lessonArray),console.log(this.lessonSettings),console.log("_____________")}changeLessonConfig(t){this.lessonsConfig=t}showPrevNextButtons(){this.partLessonNumber==this.getCountOfSubLessons()&&this.lessonNumber==this.getCountOfLessons()?document.querySelector(".result__controll__next").style.display="none":document.querySelector(".result__controll__next").style.display="block",0==this.partLessonNumber&&0==this.lessonNumber?document.querySelector(".result__controll__previous").style.display="none":document.querySelector(".result__controll__previous").style.display="block"}loadLesson(){this.progressBarDOM.style.width="0%",this.currentPart=0,keyboardControll.resetCharacters(),keyboardControll.setStartedToType(!1),stopwatch.timerStop(),stopwatch.timerReset(),this.stringDOM=document.querySelector(".showingText__text"),this.stringPrepareDOM=document.querySelector(".showingText__text__prepare"),this.activeWord=document.querySelector(".showingText__activeWord"),document.querySelector(".showingText__written").innerHTML="",this.lesson=Object.values(this.lessonsConfig[Object.keys(this.lessonsConfig)[this.lessonNumber].toString()])[this.partLessonNumber],this.lessonArray=this.lesson.text,this.lessonSettings=this.lesson.settings,this.loadSettings(),this.loadStringLesson(),this.showPrevNextButtons(),lessonCompleted.showKeyboardContainer(),keyboardControll.getDOM(),keyboardControll.getNextActiveWord()}progressBarUpdate(){this.progressBarDOM.style.width=(keyboardControll.getAllText().length/this.getLessonText().length*95).toFixed(2)+"%"}getLessonText(){let t="";return this.lessonArray.forEach((e=>{t+=e})),t.split(/\s+/).join("")}loadStringLesson(){this.stringDOM.innerHTML=this.getString(),this.stringPrepareDOM.innerHTML=this.getStringToPrepare()}continueLesson(){this.currentPart++,this.loadStringLesson()}loadSettings(){Object.keys(this.lessonSettings).forEach((t=>{mainSettings[t]=this.lessonSettings[t]})),mainSettingsUpdate()}getString(){return this.currentPart>=this.lessonArray.length?(this.endOfTheLesson(),""):this.lessonArray[this.currentPart]}getStringToPrepare(){return debug.log(2,"this.lessonArray["+ +(+this.currentPart+1)+"] is "+this.lessonArray[this.currentPart+1]),this.currentPart+1>=this.lessonArray.length?"":this.lessonArray[this.currentPart+1]}endOfTheLesson(){lessonCompleted.endOfTheLesson()}getCountOfWords(){let t=0;return this.lessonArray.forEach((e=>{t+=e.split(" ").length})),t}renderDOMLessons(){let t="";Object.keys(this.lessonsConfig).forEach((e=>{t+='<div class="mainSectionContainer__lessons__flexContainer__menu__dropDownItem">',t+='<div class=" mainSectionContainer__lessons__flexContainer__menu__item" data-tilt><i class="fal fa-angle-right"></i>',t+=this.lessonsConfig[e].lessonName,t+="</div>",t+='<div class="mainSectionContainer__lessons__flexContainer__submenu">',Object.keys(this.lessonsConfig[e]).forEach((i=>{if("lessonName"==i)return;let n=this.lessonsConfig[e][i].subLessonName;t+='<div class="mainSectionContainer__lessons__flexContainer__menu__subitem" data-tilt><div id="',t+=n,t+='" class="mainSectionContainer__lessons__flexContainer__menu__subitem__text">',t+=n,t+="</div></div>"})),t+="</div></div></div>"})),this.domElement.innerHTML=t,this.DOMLessonsOnclickAdd(),this.DOMLessonsAnimationTilt()}DOMLessonsOnclickAdd(){let t=document.querySelectorAll(".mainSectionContainer__lessons__flexContainer__menu__item");for(let e=0;e<t.length;++e)t[e].onclick=function(){t[e].parentElement.classList.toggle("mainSectionContainer__lessons__flexContainer__menu__item_active");let i=50*t[e].parentElement.querySelectorAll(".mainSectionContainer__lessons__flexContainer__menu__subitem").length;null!=t[e].parentElement.querySelector(".mainSectionContainer__lessons__flexContainer__menu__item_active .mainSectionContainer__lessons__flexContainer__submenu")?t[e].parentElement.querySelector(".mainSectionContainer__lessons__flexContainer__menu__item_active .mainSectionContainer__lessons__flexContainer__submenu").style.height=i+"px":t[e].parentElement.querySelector(".mainSectionContainer__lessons__flexContainer__submenu").style.height="0px"};t[this.lessonNumber].onclick();let e=this;document.querySelectorAll(".mainSectionContainer__lessons__flexContainer__submenu").forEach(((t,i)=>{let n=i;t.querySelectorAll(".mainSectionContainer__lessons__flexContainer__menu__subitem__text").forEach(((t,i)=>{t.addEventListener("click",(function(){e.partLessonNumber=i,e.lessonNumber=n,e.switchLesson(),lessonCompleted.showKeyboardContainer(),debug.log(2,"currentPartLesson is "+e.partLessonNumber),debug.log(2,"currentLesson is "+e.lessonNumber)}))}))})),this.switchLesson()}DOMLessonsAnimationTilt(){$(".mainSectionContainer__lessons__flexContainer__menu__item").tilt({glare:!0,maxGlare:.05,scale:1.05,easing:"cubic-bezier(.03,.98,.52,.99)",maxTilt:15}),$(".mainSectionContainer__lessons__flexContainer__menu__subitem").tilt({glare:!0,maxGlare:.05,easing:"cubic-bezier(.03,.98,.52,.99)"})}switchLesson(){localStorage.setItem("currentLesson",this.lessonNumber),localStorage.setItem("currentLessonPart",this.partLessonNumber),console.log(this.lessonNumber+" "+this.partLessonNumber),document.querySelectorAll(".mainSectionContainer__lessons__flexContainer__menu__subitem__active").forEach((t=>{t.classList.toggle("mainSectionContainer__lessons__flexContainer__menu__subitem__active")})),document.querySelectorAll(".mainSectionContainer__lessons__flexContainer__submenu")[this.lessonNumber].querySelectorAll(".mainSectionContainer__lessons__flexContainer__menu__subitem__text")[this.partLessonNumber].classList.toggle("mainSectionContainer__lessons__flexContainer__menu__subitem__active"),this.loadLesson()}loadPreviousLesson(){if(this.partLessonNumber>0)this.partLessonNumber--;else{if(!(this.lessonNumber>0))return;this.lessonNumber--,this.partLessonNumber=this.getCountOfSubLessons()}this.switchLesson()}getCountOfSubLessons(){return Object.values(this.lessonsConfig[Object.keys(this.lessonsConfig)[this.lessonNumber].toString()]).length-2}getCountOfLessons(){return Object.keys(this.lessonsConfig).length-1}loadNextLesson(){let t=this.getCountOfSubLessons(),e=this.getCountOfLessons();if(this.partLessonNumber<t)this.partLessonNumber++;else{if(!(this.lessonNumber<e))return;this.lessonNumber++,this.partLessonNumber=0}this.switchLesson()}restartLesson(){this.switchLesson()}}class LessonCompletion{constructor(){this.newChart=null}getDOM(){this.keyboardSectionDOM=document.querySelector(".mainSectionContainer__keyboard"),this.lessonResultDOM=document.querySelector(".mainSectionContainer__result"),this.timeDOM=document.querySelector(".result__info__time span"),this.cpsDOM=document.querySelector(".result__info__cps span"),this.wpsDOM=document.querySelector(".result__info__wps span"),this.accuracyDOM=document.querySelector(".result__info__accuracyColored"),this.diagramDOM=document.querySelector(".result__diagram")}showResultContainer(){this.keyboardSectionDOM.style.display="none",this.lessonResultDOM.style.display="block"}showKeyboardContainer(){this.keyboardSectionDOM.style.display="block",this.lessonResultDOM.style.display="none"}endOfTheLesson(){console.log(keyboardControll.getRightCharacters()),console.log(keyboardControll.getWrongCharacters()),stopwatch.timerStop(),this.getDOM(),this.chartDestroy(),this.resultContainerInsertData(),this.showResultContainer(),console.log("hi from Lesson Completion")}resultContainerInsertData(){this.timeDOM.innerHTML=stopwatch.getTimerData(),this.cpsDOM.innerHTML=this.getCpm(),this.wpsDOM.innerHTML=this.getWpm();let t,e=this.getAccuracy();t=e>75?"rgba(125, 168, 71, 1)":e>=50?"rgba(217, 124, 72, 1)":"rgba(219, 90, 90, 1)",document.querySelector(".result__info__accuracyColored").style.color=t,this.accuracyDOM.innerHTML=this.getAccuracy()+"%",stopwatch.timerReset(),this.chartRender()}getCpm(){return Math.trunc(keyboardControll.getAllText().length/(+stopwatch.getTimerSeconds()/60)).toString()}getWpm(){return Math.trunc(keyboardLesson.getCountOfWords()/(+stopwatch.getTimerSeconds()/60)).toString()}getChartData(){return{labels:this.getChartLabels(),datasets:[{label:"Ratio wrong to right typed characters",data:[keyboardControll.getRightCharacters().length,keyboardControll.getWrongCharacters().length],backgroundColor:["rgba(98, 211, 116, 0.8)","rgba(201, 96, 96, 0.8)"],borderColor:["white"],borderWidth:1}]}}chartDestroy(){this.diagramDOM.innerHTML="",null!=this.newChart&&null!=this.newChart&&(this.newChart=null)}chartRender(){console.log("chartRender called");let t=document.createElement("canvas");t.id="lessonResultChart",this.diagramDOM.appendChild(t);const e=document.getElementById(t.id).getContext("2d");this.newChart=new Chart(e,{type:"doughnut",data:this.getChartData()})}getChartLabels(){return"RU"==mainSettings.nativeLan?["ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐµ Ð±ÑÐºÐ²Ñ","ÐÑÐ¸Ð±ÐºÐ¸"]:["Right characters","Wrong characters"]}getChartFontColor(){let t=localStorage.getItem("theme");return console.log("currernt theme is "+t),"dark"==t?["white"]:["#747474"]}getAccuracy(){return Math.trunc(keyboardControll.getRightCharacters().length/keyboardControll.getAllText().length*100).toString()}}class KeyboardController{constructor(){this.isStartedToType=!1,this.correctLetters="",this.wrongLetters=""}getDOM(){this.keyboardInputTextDOM=document.querySelector(".keyboardSection__writeText__input"),this.excludeWords=["shift","tab","capslock","backspace","space","alt","win","fn","ps","enter","ctrl"],this.showingTextDOM=document.querySelector(".showingText__text"),this.showingText_array=this.showingTextDOM.innerText.split(" "),this.activeWordDOM=document.querySelector(".showingText__activeWord"),this.writtenDOM=document.querySelector(".showingText__written"),this.writtenHiddenDOM=document.querySelector(".showingText__written__hidden")}onStart(){this.setFingersBacklight(localStorage.getItem("theme")),this.keyboardInputAddEventListener()}getNextActiveWord(){console.log(this.showingText_array),0==this.showingText_array.length&&(this.writtenHiddenDOM.innerHTML+=this.writtenDOM.innerHTML,this.writtenDOM.innerHTML="",keyboardLesson.continueLesson(),keyboardLesson.progressBarUpdate(),this.showingText_array=this.showingTextDOM.innerText.split(" ")),this.activeWordDOM.innerHTML=this.showingText_array[0]+" ",this.showingText_array.shift(),this.showingTextDOM.innerHTML=this.showingText_array.join(" "),this.hightlightHandFinger(this.activeWordDOM.innerText[0]),""!=this.writtenDOM.innerText&&(this.keyboardInputTextDOM.placeholder="")}hightlightHandFinger(t){if(!t||null==t||null==t)return;if(document.querySelectorAll(".keyboardSection__keyboard__leftHand__finger").forEach((t=>{t.style.opacity=null})),document.querySelectorAll(".keyboardSection__keyboard__rightHand__finger").forEach((t=>{t.style.opacity=null})),!mainSettings.keyboardBacklight)return;if(" "==t)return document.querySelector(".keyboardSection__keyboard__leftHand__Lthumb").style.opacity=1,void(document.querySelector(".keyboardSection__keyboard__rightHand__Rthumb").style.opacity=1);let e=t.toUpperCase()===t,i=this.excludeWords;document.querySelectorAll(".keyboardSection__keyboard__keyboard div").forEach((function(n){if(1==n.childNodes.length)if(-1==n.innerText.toLowerCase().indexOf(t.toLowerCase())||i.includes(n.innerText.toLowerCase()));else{n.innerText.length>1&&(e=0!=n.innerText.indexOf(t));let i=keycodesZones[n.id];"l"==i[0].toLowerCase()?(e&&(document.querySelector(".keyboardSection__keyboard__rightHand__Rpinkie").style.opacity=1),document.querySelector(`.keyboardSection__keyboard__leftHand__${i}`).style.opacity=1):(e&&(document.querySelector(".keyboardSection__keyboard__leftHand__Lpinkie").style.opacity=1),document.querySelector(`.keyboardSection__keyboard__rightHand__${i}`).style.opacity=1)}}))}setFingersBacklight(t){let e;console.log(t),e=null==t||null==t?keyboardBacklightConfig.default:keyboardBacklightConfig[t],Object.keys(e).forEach((t=>{if("default"==t)return;let e,i;e="L"==t[0]?document.querySelector(`.keyboardSection__keyboard__leftHand__${t}`):document.querySelector(`.keyboardSection__keyboard__rightHand__${t}`);const n=localStorage.getItem("theme");i=e.style.backgroundColor=null==n?keyboardBacklightConfig.default[t]:keyboardBacklightConfig[n][t],e.style.boxShadow=`0 0 10px ${i}, 0 0 20px ${i}, 0 0 40px ${i}`}))}setStartedToType(t){this.isStartedToType=t}keyboardInputAddEventListener(){this.keyboardInputTextDOM.addEventListener("input",(()=>{this.isStartedToType||(this.isStartedToType=!0,stopwatch.timerStart());let t=this.keyboardInputTextDOM.value.toString(),e=this.activeWordDOM.innerText;if(" "!=t){if(" "==t[t.length-1]){this.hightlightHandFinger(" ");let i=this.getSpanWrapText(e,t.substr(0,t.length-1))+" ";this.writtenDOM.innerHTML+=i,this.getNextActiveWord(),this.keyboardInputTextDOM.value=""}t.length<e.length&&this.hightlightHandFinger(e[t.length])}else this.keyboardInputTextDOM.value=""}))}getWrongCharacters(){return this.wrongLetters.split(/\s+/).join("")}getRightCharacters(){return this.correctLetters.split(/\s+/).join("")}resetCharacters(){this.wrongLetters="",this.correctLetters=""}getAllText(){return(this.wrongLetters+this.correctLetters).split(/\s+/).join("")}getSpanWrapText(t,e){console.log("comparing '"+t+"' with '"+e+"'");let i="",n=[],s=[],o=!1,r=t.length<e.length?t.length:e.length;for(let i=0;i<r;++i)t[i]==e[i]?(o?n[n.length-1]+=t[i]:(n.push(t[i]),s.push(!0)),o=!0):(0==i&&(o=!0),o?(n.push(t[i]),s.push(!1)):n[n.length-1]+=t[i],o=!1);r<t.length&&(o?(n.push(t.substr(r,t.length-r)),s.push(!1)):n[n.length-1]+=t.substr(r,t.length-r));let a="",l="";return n.forEach(((t,e)=>{s[e]?(i+='<span class="rightCh">'+t+"</span>",a+=t):(i+='<span class="wrongCh">'+t+"</span>",l+=t)})),this.correctLetters+=a,this.wrongLetters+=l,i}}class StopWatch{constructor(){this.hours=0,this.min=0,this.sec=0,this.stoptime=!0,this.timerData=""}timerStart(){this.stoptime&&(this.stoptime=!1,this.timerCycle()),console.log("timerStart")}timerStop(){this.stoptime||(this.stoptime=!0),console.log("timerStop")}timerReset(){this.hours=0,this.min=0,this.sec=0}timerCycle(){this.stoptime||(this.sec=parseInt(this.sec),this.min=parseInt(this.min),this.hours=parseInt(this.hours),this.sec++,60==this.sec&&(this.min++,this.sec=0),60==this.min&&(this.hours++,this.min=0,this.sec=0),(this.sec<10||0==this.sec)&&(this.sec="0"+this.sec),(this.min<10||0==this.min)&&(this.min="0"+this.min),0==this.hours?this.timerData=this.min+":"+this.sec:this.timerData=this.hours+":"+this.min+":"+this.sec,setTimeout((()=>{this.timerCycle()}),1e3))}getTimerSeconds(){return 60*+this.hours*60+60*+this.min+ +this.sec}getTimerData(){return this.timerData}}const keyboardBacklight_input=document.querySelector(".settingsKeysBacklight input"),keyboardVisibility_input=document.querySelector(".settingsShowKeyboard input");let keyClass=".keyboardSection__keyboard__keyboard div",handClass=".keyboardSection__keyboard__Hands",mainSettingsStorageName="mainSettings",mainSettings={keyboardBacklight:!1,showProgressBar:!1,showKeyboard:!1,showSpeed:!1,typingLayout:null,typingLan:null,nativeLan:null,theme:"dark"};function mainSettingsLocalStorageUpdate(){localStorage.setItem(mainSettingsStorageName,JSON.stringify(mainSettings))}function checkMainSettings(){null==localStorage.getItem(mainSettingsStorageName)?localStorage.setItem(mainSettings.localStorageName,JSON.stringify(mainSettings)):mainSettings=JSON.parse(localStorage.getItem(mainSettingsStorageName)),null==mainSettings.nativeLan&&(document.location.href.toString().toLowerCase().includes("_ru")?mainSettings.nativeLan="RU":mainSettings.nativeLan="EN"),null==mainSettings.typingLan&&(mainSettings.typingLan=mainSettings.nativeLan),null==mainSettings.typingLayout&&(mainSettings.typingLayout="QWERTY"),mainSettingsLocalStorageUpdate(),console.log("MainSettingsTypingLan is "+mainSettings.typingLan),console.log("MainSettingsNativeLan is "+mainSettings.nativeLan),console.log("MainSettingsTypingLayout is "+mainSettings.typingLayout)}checkMainSettings();let stopwatch=new StopWatch,lessonCompleted=new LessonCompletion;lessonCompleted.getDOM();let domLesson=document.querySelector(".mainSectionContainer__lessons__flexContainer__menu"),keyboardControll=new KeyboardController,keyboardLesson=new Lesson(lessonsConfigs[mainSettings.typingLan],domLesson);function backlightSwitch(){document.querySelector(".settingsKeysBacklight input").checked=mainSettings.keyboardBacklight;let t=document.querySelector(handClass);if(mainSettings.keyboardBacklight){if(document.querySelector(".keyboardSection__keyboard__keyboard").classList.contains("backlightKeyboardRow__active")||document.querySelector(".keyboardSection__keyboard__keyboard").classList.toggle("backlightKeyboardRow__active"),document.querySelectorAll(keyClass).forEach((function(t){if(1!=t.childNodes.length)return;let e=t.id,i=keycodesZones[e],n=localStorage.getItem("theme");null==n&&(n="default"),t.style.backgroundColor=keyboardBacklightConfig[n][i]})),null==t)return void debug.log(0,"Hand class is null, class Settings, function backlightSwitch");t.style.opacity=1}else document.querySelectorAll(keyClass).forEach((function(t){1==t.childNodes.length&&(t.style.backgroundColor=null)})),t.style.opacity=0,document.querySelector(".keyboardSection__keyboard__keyboard").classList.contains("backlightKeyboardRow__active")&&document.querySelector(".keyboardSection__keyboard__keyboard").classList.toggle("backlightKeyboardRow__active")}function setKeyboardBacklight(t){console.log(t),mainSettings.keyboardBacklight=t,backlightSwitch(),mainSettingsLocalStorageUpdate()}function keyboardSwitch(){document.querySelector(".settingsShowKeyboard input").checked=mainSettings.showKeyboard,mainSettings.showKeyboard?(document.querySelector(".keyboardSection__keyboard").style.display="flex",setTimeout((()=>{document.querySelector(".keyboardSection__keyboard").style.opacity=1}),50),keyboardBacklight_input.disabled=!1):(document.querySelector(".keyboardSection__keyboard").style.opacity=0,setTimeout((()=>{document.querySelector(".keyboardSection__keyboard").style.display="none"}),500),keyboardBacklight_input.checked=!1,keyboardBacklight_input.disabled=!0,setKeyboardBacklight(!1))}function setKeyboardVisibility(t){mainSettings.showKeyboard=t,keyboardSwitch(),mainSettingsLocalStorageUpdate()}function setKeyboardTypingLan(){changeTypingLan(mainSettings.typingLayout+"/"+mainSettings.typingLan),keyboardLesson.getLanguage()!=mainSettings.typingLan&&(keyboardLesson.setLanguage(mainSettings.typingLan),keyboardLesson.changeLessonConfig(lessonsConfigs[mainSettings.typingLan]),keyboardLesson.renderDOMLessons(),keyboardLesson.loadLesson(),mainSettingsLocalStorageUpdate())}function mainSettingsUpdate(){setKeyboardBacklight(mainSettings.keyboardBacklight),setKeyboardVisibility(mainSettings.showKeyboard)}keyboardLesson.loadLesson(),keyboardControll.onStart(),keyboardBacklight_input.addEventListener("change",(function(){setKeyboardBacklight(this.checked),keyboardControll.hightlightHandFinger(document.querySelector(".showingText__activeWord").innerText[0])})),keyboardVisibility_input.addEventListener("change",(function(){setKeyboardVisibility(this.checked)}));let hamburgerSettingsBtn=document.querySelector(".mainSectionContainer__settings__hamburgerButton"),closeBtnSettings=document.querySelector(".mainSectionContainer__settings__closeBtn");hamburgerSettingsBtn.onclick=function(){document.querySelector(".mainSectionContainer__settings").classList.toggle("mainSectionContainer__settings__hamburgerButton__active")},closeBtnSettings.onclick=function(){document.querySelector(".mainSectionContainer__settings").classList.toggle("mainSectionContainer__settings__hamburgerButton__active")};let touchLangArray=["RU","EN"],valSoundArray=["a","b","c"],ULObjects=document.querySelectorAll(".mainSectionContainer__settings__container__item__dropList__button__select ul"),ULNamedObjects={},BtnObjects=document.querySelectorAll(".mainSectionContainer__settings__container__item__dropList__button__select button"),SelectObjects=document.querySelectorAll(".mainSectionContainer__settings__container__item__dropList__button__select"),URLObjects={language:"images/lanChoosing/"};function ulHandler(t,e,i,n){let s=e[i]+t.toUpperCase();switch(i){case"language":s+="Lan.svg";break;case"keySound":s+="KeySound.svg"}let o='<li id="'+t+'"><img src="'+s+'" onError="this.src="""/></li>';n.innerHTML+=o;let r=n.children,a=n.parentNode.children[0];if("language"==i){let t=mainSettings.typingLan;a.value=t,a.querySelector("img").src=e[i]+t+"Lan.svg"}for(let t of r)t.addEventListener("click",(function(){a.innerHTML=t.innerHTML,a.value=this.id,"language"==i&&(mainSettings.typingLan=this.id,setKeyboardTypingLan())}))}ULObjects.forEach((function(t){ULNamedObjects[t.id]=t})),touchLangArray.forEach((t=>ulHandler(t,URLObjects,"language",ULNamedObjects.touchLan))),SelectObjects.forEach((t=>t.onclick=function(){t.classList.toggle("mainSectionContainer__settings__container__item__dropList__button__select__active")})),document.querySelector(".result__controll__previous").onclick=function(){keyboardLesson.loadPreviousLesson()},document.querySelector(".result__controll__next").onclick=function(){keyboardLesson.loadNextLesson()},document.querySelector(".result__controll__restart").onclick=function(){keyboardLesson.restartLesson()};let musicPausePlay=document.querySelector(".musicSection__pausePlay");musicPausePlay.onclick=function(){musicPausePlay.classList.toggle("musicSection__pausePlay__isPause")};let mainThemes=["dark","bright"],currentTheme=0;function setTheme(){null==localStorage.getItem("theme")&&localStorage.setItem("theme","dark");let t=localStorage.getItem("theme");currentTheme=mainThemes.findIndex((e=>e==t)),document.querySelector("body").classList="",document.querySelector("body").classList.add(t)}function changeThemeForward(){currentTheme=(currentTheme+1)%mainThemes.length,localStorage.setItem("theme",mainThemes[currentTheme]),keyboardControll.setFingersBacklight(mainThemes[currentTheme]),backlightSwitch(),setTheme()}document.querySelector(".themeSwitcher").onclick=function(){changeThemeForward()},$(".languageList_modal ul").tilt({glare:!0,maxGlare:.05});let languages=["EN","RU"],languages_html={EN:"English",RU:"Ð ÑÑÑÐºÐ¸Ð¹"};document.querySelector(".language_modal .language").value=0;let ul=document.querySelector(".languageList_modal ul"),li_template=document.querySelector("#language_tmpli");async function li_onclick(){localStorage.setItem("nativeLan",languages[Number(this.value)]),document.querySelector(".language_modal .language").innerHTML=this.innerHTML,document.querySelector(".language_modal .language").value=this.value,ul.style.display="none",await setTimeout((()=>{ul.style.display="block"}),600)}languages.forEach((function(t,e){ul.append(li_template.content.cloneNode(!0)),document.querySelector(".languageList_modal ul li:last-of-type img").src="images/lanChoosing/"+t+"Lan.svg",document.querySelector(".languageList_modal ul li:last-of-type h4").innerHTML=languages_html[t],document.querySelector(".languageList_modal ul li:last-of-type").value=e,document.querySelector(".languageList_modal ul li:last-of-type").addEventListener("click",li_onclick)})),document.querySelector(".language_modal a").addEventListener("click",(function(){let t=languages[Number(document.querySelector(".language_modal .language").value)];mainSettings.nativeLan=t,mainSettingsLocalStorageUpdate(),localStorage.setItem("nativeLan",t);let e=localStorage.getItem("typingLan").split("/");e[1]=localStorage.getItem("nativeLan"),localStorage.setItem("typingLan",e.join("/")),document.querySelector(".language_absolute").classList.toggle("language_absolute_hide"),changeTypingLan(localStorage.getItem("typingLan")),"EN"==mainSettings.nativeLan?location.href=document.querySelector(".page").innerText+".html":location.href=document.querySelector(".page").innerText+"_"+mainSettings.nativeLan.toLowerCase()+".html"})),document.querySelector(".header__mainLanguage").addEventListener("click",(function(){document.querySelector(".language_absolute").classList.toggle("language_absolute_hide")})),setKeyboardTypingLan(),setTheme();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
